# Palkeoramix decompiler. 

const unknown6aa47645 = 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58
const unknown73679b6b = 0x5703b683c7f928b721ca95da988d73a3299d4757
const unknownca68d8f6 = 300
const _WETH = 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c

def storage:
  owner is address at storage 0
  stor1 is uint256 at storage 1
  unknownf3dced3cAddress is address at storage 2
  unknownd13a35e6Address is address at storage 3
  stor4 is mapping of uint8 at storage 4
  adminAddress is address at storage 24
  operator is mapping of address at storage 31
  unknown3ba7cadf is mapping of uint256 at storage 32
  unknown1afca626 is uint256 at storage 33

def unknown1afca626(): # not payable
  return unknown1afca626

def unknown3ba7cadf(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  return unknown3ba7cadf[_param1]

def unknown869c6b4b(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  require _param1 == address(_param1)
  return bool(stor4[_param1])

def owner(): # not payable
  return owner

def operator(address _param1): # not payable
  require calldata.size - 4 >=′ 32
  require _param1 == _param1
  return operator[_param1]

def unknownd13a35e6(): # not payable
  return unknownd13a35e6Address

def unknownf3dced3c(): # not payable
  return unknownf3dced3cAddress

def admin(): # not payable
  return adminAddress

#
#  Regular functions
#

def unknown1bb943fd(): # not payable
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  log 0xb3b40bc6 
  selfdestruct(tx.origin)

def _fallback(?) payable: # default function
  if calldata.size < 4:
      require not calldata.size
      if not caller - tx.origin:
          revert with 0, 'ETH deposit rejected'
      stop
  if unknown9871efa4() <= uint32(call.func_hash) >> 224:
      if unknownd1b260d4(uint256 _param1, address _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8) > uint32(call.func_hash) >> 224:
          if unknownb07482d2() > uint32(call.func_hash) >> 224:
              if unknown9871efa4() == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 128
                  require cd[100] <= LOCK8605463013()
                  require cd[100] + 35 <′ calldata.size
                  require ('cd', 100).length <= LOCK8605463013()
                  require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
                  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
                  if not ('cd', 100).length:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  0x2000000000000000000000000000000000000000000000000000000000,
                                  Mask(112, 144, 'empty pools') >> 144
                  if not address(cd[4]) != 1:
                      if call.value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x11696e76616c6964206d73672e76616c7565
                      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
                           gas gas_remaining wei
                          args address(cd[4]), caller, address(('cd', 100)[0]), cd[36]
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12636c61696d20746f6b656e206661696c6564
                  else:
                      if not (call.value < cd[36]) - 1:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x11696e76616c6964206d73672e76616c7565
                      call ????????????????????????????????????????.deposit() with:
                         value cd[36] wei
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x126465706f73697420455448206661696c6564
                      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args address(('cd', 100)[0]), cd[36]
              else:
                  if uint32(call.func_hash) >> 224 != unknown9989d481():
                      if uint32(call.func_hash) >> 224 != unknown9a09b285(uint256 _param1):
                          require operator(address _param1) == uint32(call.func_hash) >> 224
                          require not call.value
                          require calldata.size - 4 >=′ 32
                          require cd[4] == address(cd[4])
                          return operator[cd[4]]
                      require not call.value
                      require calldata.size - 4 >=′ 32
                      require cd[4] == address(cd[4])
                      if adminAddress != caller:
                          if owner != caller:
                              revert with 0, 'na'
                      adminAddress = address(cd[4])
                      log AdminChanged(address admin=address(cd[4]))
                      stop
                  require calldata.size - 4 >=′ 224
                  require calldata.size - 36 >=′ 160
                  require cd[196] <= LOCK8605463013()
                  require calldata.size + -cd[196] - 4 >=′ 320
                  if bool(stor4[caller]) != 1:
                      revert with 0, 'only priority'
                  if not stor1 - 2:
                      revert with 0, 'ReentrancyGuard: reentrant call'
                  stor1 = 2
                  log 0x6c772439: cd[4]
                  static call caller.unknown534015b3() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 64
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  require ext_call.return_data[32] == ext_call.return_data[44 len 20]
                  require calldata.size - 36 >=′ 160
                  if not bool(ceil32(return_data.size) + 288 <= LOCK8605463013()):
                      revert with 0, 65
                  require cd[132] == bool(cd[132])
                  require cd[164] == bool(cd[164])
          else:
              if unknownb07482d2() == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 224
                  require cd[4] == address(cd[4])
                  require calldata.size - 36 >=′ 160
                  require cd[132] == bool(cd[132])
                  require cd[164] == bool(cd[164])
                  require cd[196] <= LOCK8605463013()
                  require calldata.size + -cd[196] - 4 >=′ 320
                  if not stor1 - 2:
                      revert with 0, 'ReentrancyGuard: reentrant call'
                  stor1 = 2
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  if not address(('cd', 196)[1]) - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
                      revert with 0, 'Invalid source token'
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  static call address(('cd', 196)[1]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args this.address
              else:
                  if setOperator(address _operator) == uint32(call.func_hash) >> 224:
                      require not call.value
                      require calldata.size - 4 >=′ 32
                      require cd[4] == address(cd[4])
                      operator[caller] = address(cd[4])
                      log OperatorChanged(
                            address _oldOperator=address(cd[4]),
                            address _newOperator=caller)
                      stop
                  if uint32(call.func_hash) >> 224 != unknownb80c2f09(uint256 _param1, address _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8):
                      if 3395868918 == uint32(call.func_hash) >> 224:
                          require not call.value
                          return 300
                      require unknownd13a35e6() == uint32(call.func_hash) >> 224
                      require not call.value
                      return unknownd13a35e6Address
                  require calldata.size - 4 >=′ 288
                  require calldata.size - 36 >=′ 160
                  require cd[196] <= LOCK8605463013()
                  require cd[196] + 35 <′ calldata.size
                  require ('cd', 196).length <= LOCK8605463013()
                  require cd[196] + (32 * ('cd', 196).length) + 36 <= calldata.size
                  require cd[228] <= LOCK8605463013()
                  require cd[228] + 35 <′ calldata.size
                  require ('cd', 228).length <= LOCK8605463013()
                  require cd[228] + (32 * ('cd', 228).length) + 36 <= calldata.size
                  require cd[260] <= LOCK8605463013()
                  require cd[260] + 35 <′ calldata.size
                  require ('cd', 260).length <= LOCK8605463013()
                  require cd[260] + (32 * ('cd', 260).length) + 36 <= calldata.size
                  if cd[164] < block.timestamp:
                      revert with 0, 'Route: expired'
                  if not stor1 - 2:
                      revert with 0, 'ReentrancyGuard: reentrant call'
                  stor1 = 2
                  log 0x6c772439: cd[4]
                  require calldata.size - 36 >=′ 160
                  require cd[68] == address(cd[68])
      else:
          if unknownf3dced3c() <= uint32(call.func_hash) >> 224:
              if unknownf3dced3c() == uint32(call.func_hash) >> 224:
                  require not call.value
                  return unknownf3dced3cAddress
              if uint32(call.func_hash) >> 224 != unknownf3e144b6():
                  if unknownf6932b0d(uint256 _param1) == uint32(call.func_hash) >> 224:
                      require not call.value
                      require calldata.size - 4 >=′ 32
                      if owner != caller:
                          revert with 0, 'Ownable: caller is not the owner'
                      if uint16(cd[4]) >> 240 > 10000:
                          revert with 1272526005
                      if not address(cd[4]):
                          revert with 3523233884
                      unknown1afca626 = cd[4]
                      log 0x4e0c6a72: cd[4], caller
                  else:
                      if admin() == uint32(call.func_hash) >> 224:
                          require not call.value
                          return adminAddress
                      require uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data) == uint32(call.func_hash) >> 224
                      require not call.value
                      require calldata.size - 4 >=′ 96
                      require cd[68] <= LOCK8605463013()
                      require cd[68] + 35 <′ calldata.size
                      require ('cd', 68).length <= LOCK8605463013()
                      require cd[68] + ('cd', 68).length + 36 <= calldata.size
                      static call caller.token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      static call caller.token1() with:
                              gas gas_remaining wei
                      static call caller.fee() with:
                              gas gas_remaining wei
                      if address(sha3(1204786273842544410698595, sha3(ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0]), 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54)) != caller:
                          revert with BadPool()
                      if cd[4] >′ 0 == 1:
                          if cd[132] == this.address == 1:
                              call ext_call.return_data[0] with:
                                   gas gas_remaining wei
                                  args caller, cd[4]
                          else:
                              call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.token1() with:
                                   gas gas_remaining wei
                                  args ext_call.return_data[0], cd[132], caller, cd[4]
                      else:
                          if cd[132] == this.address == 1:
                              call ext_call.return_data[0] with:
                                   gas gas_remaining wei
                                  args caller, cd[36]
                          else:
                              call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.token1() with:
                                   gas gas_remaining wei
                                  args ext_call.return_data[0], cd[132], caller, cd[36]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      if return_data.size and return_data.size <= 31 or ext_call.return_data[0] != 1:
                          revert with ERC20TransferFailed()
                  stop
              require not call.value
              require calldata.size - 4 >=′ 192
              require cd[36] == address(cd[36])
              require cd[132] <= LOCK8605463013()
              require cd[132] + 35 <′ calldata.size
              require ('cd', 132).length <= LOCK8605463013()
              require cd[132] + (32 * ('cd', 132).length) + 36 <= calldata.size
              require cd[164] <= LOCK8605463013()
              require cd[164] + 35 <′ calldata.size
              require ('cd', 164).length <= LOCK8605463013()
              require cd[164] + ('cd', 164).length + 36 <= calldata.size
              log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
              if ('cd', 164).length:
                  if -('cd', 164).length + 224:
                      if -('cd', 164).length + 256:
                          revert with 0, 'Wrong permit length'
              else:
                  if not ('cd', 132).length:
                      revert with EmptyPools()
                  if call.value > 0:
                      if not (call.value < cd[68]) - 1:
                          revert with InvalidMsgValue()
                      call ???????????????????????????????????????? with:
                         value cd[68] wei
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1357455448206465706f736974206661696c6564
                      if 36 >= (32 * ('cd', 132).length) + 4:
                          if Mask(1, 253, cd[(cd[132] + (32 * ('cd', 132).length) + 4)]) > 0 != 1:
                      else:
                          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < cd[68]:
                              revert with 3019349968
          else:
              if unknownd1b260d4(uint256 _param1, address _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8) == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 288
                  require calldata.size - 36 >=′ 160
                  require cd[196] <= LOCK8605463013()
                  require cd[196] + 35 <′ calldata.size
                  require ('cd', 196).length <= LOCK8605463013()
                  require cd[196] + (32 * ('cd', 196).length) + 36 <= calldata.size
                  require cd[228] <= LOCK8605463013()
                  require cd[228] + 35 <′ calldata.size
                  require ('cd', 228).length <= LOCK8605463013()
                  require cd[228] + (32 * ('cd', 228).length) + 36 <= calldata.size
                  require cd[260] <= LOCK8605463013()
                  require cd[260] + 35 <′ calldata.size
                  require ('cd', 260).length <= LOCK8605463013()
                  require cd[260] + (32 * ('cd', 260).length) + 36 <= calldata.size
                  if cd[164] < block.timestamp:
                      revert with 0, 'Route: expired'
                  if not stor1 - 2:
                      revert with 0, 'ReentrancyGuard: reentrant call'
                  stor1 = 2
                  if bool(stor4[caller]) != 1:
                      revert with 0, 'only priority'
                  log 0x6c772439: cd[4]
                  static call caller.unknown534015b3() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 64
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
              else:
                  if unknownd8837daf() == uint32(call.func_hash) >> 224:
                      require calldata.size - 4 >=′ 128
                      require cd[100] <= LOCK8605463013()
                      require cd[100] + 35 <′ calldata.size
                      require ('cd', 100).length <= LOCK8605463013()
                      require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
                      if bool(stor4[caller]) != 1:
                          revert with 0, 'only priority'
                      log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
                      static call caller.unknown534015b3() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 64
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      require ext_call.return_data[32] == ext_call.return_data[44 len 20]
                      if not ext_call.return_data[44 len 20]:
                          revert with 0, 'not address(0)'
                      if not ('cd', 100).length:
                          revert with EmptyPools()
                      if call.value > 0:
                          if not (call.value < cd[36]) - 1:
                              revert with InvalidMsgValue()
                          call ???????????????????????????????????????? with:
                             value cd[36] wei
                               gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1357455448206465706f736974206661696c6564
                          if 36 >= (32 * ('cd', 100).length) + 4:
                              if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0 == 1:
                                  if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < cd[36]:
                                      revert with 3019349968
                              else:
                                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                          else:
                              if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < cd[36]:
                                  revert with 3019349968
                              if not Mask(1, 255, ('cd', 100)[0]) == 1:
                                  call address(('cd', 100)[0]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                                       gas gas_remaining wei
                                      args this.address, 1, cd[36], 4295128740, 160, 32, this.address
                              else:
                                  call address(('cd', 100)[0]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                                       gas gas_remaining wei
                                      args this.address, 0, cd[36], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, this.address
                  else:
                      if _WETH() == uint32(call.func_hash) >> 224:
                          require not call.value
                          return 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c
                      if uint32(call.func_hash) >> 224 != unknowne99bfa95(address _param1, uint256 _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8, uint256 _param9):
                          require transferOwnership(address newOwner) == uint32(call.func_hash) >> 224
                          require not call.value
                          require calldata.size - 4 >=′ 32
                          require cd[4] == address(cd[4])
                          if owner != caller:
                              revert with 0, 'Ownable: caller is not the owner'
                          if not address(cd[4]):
                              revert with 0, 'Ownable: new owner is the zero address'
                          owner = address(cd[4])
                          log OwnershipTransferred(
                                address previousOwner=owner,
                                address newOwner=address(cd[4]))
                          stop
                      require calldata.size - 4 >=′ 288
                      require calldata.size - 4 >=′ 160
                      require cd[164] <= LOCK8605463013()
                      require cd[164] + 35 <′ calldata.size
                      require ('cd', 164).length <= LOCK8605463013()
                      require cd[164] + (32 * ('cd', 164).length) + 36 <= calldata.size
                      require cd[196] <= LOCK8605463013()
                      require cd[196] + 35 <′ calldata.size
                      require ('cd', 196).length <= LOCK8605463013()
                      require cd[196] + (32 * ('cd', 196).length) + 36 <= calldata.size
                      require cd[228] <= LOCK8605463013()
                      require cd[228] + 35 <′ calldata.size
                      require ('cd', 228).length <= LOCK8605463013()
                      require cd[228] + (32 * ('cd', 228).length) + 36 <= calldata.size
                      require cd[260] == address(cd[260])
                      if cd[132] < block.timestamp:
                          revert with 0, 'Route: expired'
                      if not stor1 - 2:
                          revert with 0, 'ReentrancyGuard: reentrant call'
                      stor1 = 2
                      if not address(cd[4]) - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
                          revert with 0, 'Invalid source token'
                      static call address(cd[4]).balanceOf(address account) with:
                              gas gas_remaining wei
                             args this.address
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
  else:
      if unknown3ba7cadf(uint256 _param1) > uint32(call.func_hash) >> 224:
          if unknown0d5f0e3b() <= uint32(call.func_hash) >> 224:
              if unknown0d5f0e3b() == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 128
                  require cd[100] <= LOCK8605463013()
                  require cd[100] + 35 <′ calldata.size
                  require ('cd', 100).length <= LOCK8605463013()
                  require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
                  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
                  if not ('cd', 100).length:
                      revert with EmptyPools()
                  if call.value > 0:
                      if not (call.value < cd[36]) - 1:
                          revert with InvalidMsgValue()
                      call ???????????????????????????????????????? with:
                         value cd[36] wei
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1357455448206465706f736974206661696c6564
              else:
                  if uint32(call.func_hash) >> 224 != unknown12a0ddc7():
                      if unknown1afca626() == uint32(call.func_hash) >> 224:
                          require not call.value
                          return unknown1afca626
                      if unknown1bb943fd() == uint32(call.func_hash) >> 224:
                          require not call.value
                          if owner != caller:
                              revert with 0, 'Ownable: caller is not the owner'
                          log 0xb3b40bc6 
                          selfdestruct(tx.origin)
                      require unknown355b9718(uint256 _param1) == uint32(call.func_hash) >> 224
                      require not call.value
                      require calldata.size - 4 >=′ 32
                      if owner != caller:
                          revert with 0, 'Ownable: caller is not the owner'
                      if uint16(cd[4]) >> 240 > 10000:
                          revert with 1272526005
                      if not address(cd[4]):
                          revert with 3523233884
                      unknown1afca626 = cd[4]
                      log 0x4e0c6a72: cd[4], caller
                      stop
                  require calldata.size - 4 >=′ 224
                  require calldata.size - 36 >=′ 160
                  require cd[196] <= LOCK8605463013()
                  require calldata.size + -cd[196] - 4 >=′ 320
                  log 0x6c772439: cd[4]
                  require calldata.size - 36 >=′ 160
                  require cd[132] == bool(cd[132])
                  require cd[164] == bool(cd[164])
                  if not -cd[36]:
                      revert with 2272534323
                  if not cd[132]:
                      if cd[164]:
                          require ('cd', 196)[2] == address(('cd', 196)[2])
                      else:
                          if cd[100] < block.timestamp:
                              revert with 724726077
                          if cd[164]:
                  else:
                      if cd[36] != call.value:
                          require ('cd', 196)[1] == address(('cd', 196)[1])
                      else:
                          if cd[164]:
                              require ('cd', 196)[2] == address(('cd', 196)[2])
                          else:
                              if cd[100] < block.timestamp:
                                  revert with 724726077
          else:
              if 23166891 == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 64
                  if not uint128(cd[36]):
                      revert with 0, 'amount must be > 0'
                  if not Mask(1, 255, cd[36]):
                      if uint128(cd[36]) != call.value:
                          revert with 0, 'value not equal amount'
                      require ext_code.size(0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c)
                      call 0x00c02aaa39b223fe8d0a0e5c4f27ead9083c756c.deposit() with:
                         value uint128(cd[36]) wei
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args caller, uint128(cd[36])
                      if not return_data.size:
                          if ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c) <= 0:
                              revert with SafeTransferFailed()
                      else:
                          if return_data.size <= 31 or ext_call.return_data[0] != 1:
                              revert with SafeTransferFailed()
                      log 0x6c772439: cd[4]
                      if Mask(1, 255, cd[36]):
                          log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c000000000000000000000000, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, cd[36] << 128, uint128(cd[36])
                      else:
                          log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, cd[36] << 128, uint128(cd[36])
                  else:
                      require ext_code.size(0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58)
                      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
                           gas gas_remaining wei
                          args 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, this.address, uint128(cd[36])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
                      call ????????????????????????????????????????.withdraw(uint256 amount) with:
                           gas gas_remaining wei
                          args uint128(cd[36])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      call caller with:
                         value eth.balance(this.address) wei
                           gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0, 'transfer native token failed'
                      log 0x6c772439: cd[4]
                      if not return_data.size:
                          if Mask(1, 255, cd[36]):
                              log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c000000000000000000000000, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, cd[36] << 128, uint128(cd[36])
                          else:
                              log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, cd[36] << 128, uint128(cd[36])
                      else:
                          if Mask(1, 255, cd[36]):
                              log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, cd[36] << 128, uint128(cd[36])
                          else:
                              log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, cd[36] << 128, uint128(cd[36])
                  stop
              if uint32(call.func_hash) >> 224 != 62422623:
                  if 136940378 == uint32(call.func_hash) >> 224:
                      require calldata.size - 4 >=′ 160
                      require cd[100] == address(cd[100])
                      require cd[132] <= LOCK8605463013()
                      require cd[132] + 35 <′ calldata.size
                      require ('cd', 132).length <= LOCK8605463013()
                      require cd[132] + (32 * ('cd', 132).length) + 36 <= calldata.size
                      log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
                      if not address(cd[100]):
                          revert with 0, 'not addr(0)'
                      if not ('cd', 132).length:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      Mask(112, 144, 'empty pools') >> 144
                      if not address(cd[4]) != 1:
                          if call.value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x11696e76616c6964206d73672e76616c7565
                          call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
                               gas gas_remaining wei
                              args address(cd[4]), caller, address(('cd', 132)[0]), cd[36]
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x12636c61696d20746f6b656e206661696c6564
                      else:
                          if not (call.value < cd[36]) - 1:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x11696e76616c6964206d73672e76616c7565
                          call ????????????????????????????????????????.deposit() with:
                             value cd[36] wei
                               gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x126465706f73697420455448206661696c6564
                          call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
                               gas gas_remaining wei
                              args address(('cd', 132)[0]), cd[36]
                  else:
                      require unknown0c00e013() == uint32(call.func_hash) >> 224
                      require not call.value
                      require calldata.size - 4 >=′ 32
                      require cd[4] <= LOCK8605463013()
                      require cd[4] + 35 <′ calldata.size
                      require ('cd', 4).length <= LOCK8605463013()
                      require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
                      if ('cd', 4).length > LOCK8605463013():
                          revert with 0, 65
                      if not ('cd', 4).length:
                          if 0 < ('cd', 4).length:
                              require ('cd', 4)[0] <′ calldata.size + -cd[4] - 355
                              require cd[(('cd', 4)[0] + cd[4] + 68)] == address(cd[(('cd', 4)[0] + cd[4] + 68)])
                              if 0 >= ('cd', 4).length:
                                  revert with 0, 50
                              require ('cd', 4)[0] <′ calldata.size + -cd[4] - 355
                              if caller == operator[address(cd[(('cd', 4)[0] + cd[4] + 68)])]:
                              else:
                                  require cd[(('cd', 4)[0] + cd[4] + 68)] == address(cd[(('cd', 4)[0] + cd[4] + 68)])
                      else:
                          if 0 < ('cd', 4).length:
                              require ('cd', 4)[0] <′ calldata.size + -cd[4] - 355
                              require cd[(('cd', 4)[0] + cd[4] + 68)] == address(cd[(('cd', 4)[0] + cd[4] + 68)])
                              if operator[address(cd[(('cd', 4)[0] + cd[4] + 68)])] != caller:
                              if 0 >= ('cd', 4).length:
                                  revert with 0, 50
                              require ('cd', 4)[0] <′ calldata.size + -cd[4] - 355
              else:
                  require calldata.size - 4 >=′ 320
                  require cd[36] == address(cd[36])
                  require calldata.size - 68 >=′ 160
                  require cd[228] <= LOCK8605463013()
                  require cd[228] + 35 <′ calldata.size
                  require ('cd', 228).length <= LOCK8605463013()
                  require cd[228] + (32 * ('cd', 228).length) + 36 <= calldata.size
                  require cd[260] <= LOCK8605463013()
                  require cd[260] + 35 <′ calldata.size
                  require ('cd', 260).length <= LOCK8605463013()
                  require cd[260] + (32 * ('cd', 260).length) + 36 <= calldata.size
                  require cd[292] <= LOCK8605463013()
                  require cd[292] + 35 <′ calldata.size
                  require ('cd', 292).length <= LOCK8605463013()
                  require cd[292] + (32 * ('cd', 292).length) + 36 <= calldata.size
                  if cd[196] < block.timestamp:
                      revert with 0, 'Route: expired'
                  if not stor1 - 2:
                      revert with 0, 'ReentrancyGuard: reentrant call'
                  stor1 = 2
                  log 0x6c772439: cd[4]
                  if not address(cd[36]):
                      revert with 0, 'not addr(0)'
                  require calldata.size - 68 >=′ 160
      else:
          if unknown73679b6b() > uint32(call.func_hash) >> 224:
              if unknown3ba7cadf(uint256 _param1) == uint32(call.func_hash) >> 224:
                  require not call.value
                  require calldata.size - 4 >=′ 32
                  return unknown3ba7cadf[cd[4]]
              if uint32(call.func_hash) >> 224 != unknown41f4a959(uint256 _param1, uint256 _param2, uint256 _param3):
                  if unknown6aa47645() == uint32(call.func_hash) >> 224:
                      require not call.value
                      return 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58
                  require renounceOwnership() == uint32(call.func_hash) >> 224
                  require not call.value
                  if owner != caller:
                      revert with 0, 'Ownable: caller is not the owner'
                  owner = 0
                  log OwnershipTransferred(
                        address previousOwner=owner,
                        address newOwner=0)
              else:
                  require not call.value
                  require calldata.size - 4 >=′ 96
                  require cd[4] == address(cd[4])
                  require cd[36] == address(cd[36])
                  if owner != caller:
                      revert with 0, 'Ownable: caller is not the owner'
                  if not address(cd[4]) - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
                      call address(cd[36]) with:
                         value cd[68] wei
                           gas gas_remaining wei
                      if ext_call.success:
                          stop
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  call cd[4].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args cd[36], cd[68]
                  if not ext_call.success:
                      revert with SafeTransferFailed()
                  if not return_data.size:
                      if ext_code.size(cd[4]) <= 0:
                          revert with SafeTransferFailed()
                  else:
                      if return_data.size <= 31 or ext_call.return_data[0] != 1:
                          revert with SafeTransferFailed()
              stop
          if unknown73679b6b() == uint32(call.func_hash) >> 224:
              require not call.value
              return 0x5703b683c7f928b721ca95da988d73a3299d4757
          if 2006861308 == uint32(call.func_hash) >> 224:
              require not call.value
              require calldata.size - 4 >=′ 64
              require cd[4] == address(cd[4])
              require cd[36] == bool(cd[36])
              if adminAddress != caller:
                  if owner != caller:
                      revert with 0, 'na'
              stor4[address(cd[4])] = uint8(bool(cd[36]))
              log 0xede97de7: address(cd[4]), bool(cd[36])
              stop
          if uint32(call.func_hash) >> 224 != unknown8575654f():
              if uint32(call.func_hash) >> 224 != 2258398027:
                  require owner() == uint32(call.func_hash) >> 224
                  require not call.value
                  return owner
              require not call.value
              require calldata.size - 4 >=′ 32
              require cd[4] == address(cd[4])
              return bool(stor4[cd[4]])
          require calldata.size - 4 >=′ 128
          require cd[100] <= LOCK8605463013()
          require cd[100] + 35 <′ calldata.size
          require ('cd', 100).length <= LOCK8605463013()
          require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
          if bool(stor4[caller]) != 1:
              revert with 0, 'only priority'
          log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
          static call caller.unknown534015b3() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with ext_call.return_data[0 len return_data.size]
          require return_data.size >=′ 64
          require ext_call.return_data[0] == ext_call.return_data[12 len 20]
          require ext_call.return_data[32] == ext_call.return_data[44 len 20]
          if not ext_call.return_data[44 len 20]:
              revert with 0, 'not address(0)'
          if not ('cd', 100).length:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          Mask(112, 144, 'empty pools') >> 144
          if not address(cd[4]) != 1:
              if call.value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x11696e76616c6964206d73672e76616c7565
              call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
                   gas gas_remaining wei
                  args address(cd[4]), ext_call.return_data[0], address(('cd', 100)[0]), cd[36]
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x12636c61696d20746f6b656e206661696c6564
          else:
              if not (call.value < cd[36]) - 1:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x11696e76616c6964206d73672e76616c7565
              call ????????????????????????????????????????.deposit() with:
                 value cd[36] wei
                   gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x126465706f73697420455448206661696c6564
              call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
                   gas gas_remaining wei
                  args address(('cd', 100)[0]), cd[36]
          if 68 < (32 * ('cd', 100).length) + 36:
              static call address(('cd', 100)[0]).getReserves() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1472657365727665732063616c6c206661696c6564
              if not Mask(1, 255, ('cd', 100)[0]):
                  if not Mask(1, 252, ('cd', 100)[0]):
          else:
              if Mask(1, 254, ('cd', 100)[0]):
                  static call address(('cd', 100)[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  0x2000000000000000000000000000000000000000000000000000000000,
                                  0x1472657365727665732063616c6c206661696c6564
                  if Mask(1, 255, ('cd', 100)[0]):
              else:
                  if not Mask(1, 255, ('cd', 100)[0]):
                      if not Mask(1, 253, ('cd', 100)[0]):
                          static call address(('cd', 100)[0]).getReserves() with:
                                  gas gas_remaining wei
                      else:
                          static call address(('cd', 100)[0]).token1() with:
                                  gas gas_remaining wei
                          if ext_call.success:
                              static call ext_call.return_data[0].balanceOf(address account) with:
                                      gas gas_remaining wei
                                     args ext_call.return_data[32]
                  else:
                      if Mask(1, 252, ('cd', 100)[0]):
                          static call address(('cd', 100)[0]).token0() with:
                                  gas gas_remaining wei
                          if ext_call.success:
                              static call ext_call.return_data[0].balanceOf(address account) with:
                                      gas gas_remaining wei
                                     args ext_call.return_data[32]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def renounceOwnership(): # not payable
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  owner = 0
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=0)

def setOperator(address _operator): # not payable
  require calldata.size - 4 >=′ 32
  require _operator == _operator
  operator[caller] = _operator
  log OperatorChanged(
        address _oldOperator=_operator,
        address _newOperator=caller)

def unknown9a09b285(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  require _param1 == address(_param1)
  if adminAddress != caller:
      if owner != caller:
          revert with 0, 'na'
  adminAddress = address(_param1)
  log AdminChanged(address admin=address(_param1))

def unknown355b9718(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  if uint16(_param1) >> 240 > 10000:
      revert with 1272526005
  if not address(_param1):
      revert with 3523233884
  unknown1afca626 = _param1
  log 0x4e0c6a72: _param1, caller

def unknownf6932b0d(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  if uint16(_param1) >> 240 > 10000:
      revert with 1272526005
  if not address(_param1):
      revert with 3523233884
  unknown1afca626 = _param1
  log 0x4e0c6a72: _param1, caller

def transferOwnership(address newOwner): # not payable
  require calldata.size - 4 >=′ 32
  require newOwner == newOwner
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  if not newOwner:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
  owner = newOwner
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=newOwner)

def unknown779e45fc(uint256 _param1, uint256 _param2): # not payable
  require calldata.size - 4 >=′ 64
  require _param1 == address(_param1)
  require _param2 == bool(_param2)
  if adminAddress != caller:
      if owner != caller:
          revert with 0, 'na'
  stor4[address(_param1)] = uint8(bool(_param2))
  log 0xede97de7: address(_param1), bool(_param2)

def unknown0d5f0e3b(uint256 _param1, uint256 _param2, array _param3) payable: 
  require calldata.size - 4 >=′ 128
  require _param3 <= LOCK8605463013()
  require _param3 + 35 <′ calldata.size
  require _param3.length <= LOCK8605463013()
  require _param3 + (32 * _param3.length) + 36 <= calldata.size
  log 0x6c772439: (Mask(96, 0, _param1) >> 160)
  if not _param3.length:
      revert with EmptyPools()
  if call.value > 0:
      if not (call.value < _param2) - 1:
          revert with InvalidMsgValue()
      call ???????????????????????????????????????? with:
         value _param2 wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x1357455448206465706f736974206661696c6564
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknownf3e144b6(uint256 _param1, uint256 _param2, uint256 _param3, array _param4, array _param5): # not payable
  require calldata.size - 4 >=′ 192
  require _param2 == address(_param2)
  require _param4 <= LOCK8605463013()
  require _param4 + 35 <′ calldata.size
  require _param4.length <= LOCK8605463013()
  require _param4 + (32 * _param4.length) + 36 <= calldata.size
  require _param5 <= LOCK8605463013()
  require _param5 + 35 <′ calldata.size
  require _param5.length <= LOCK8605463013()
  require _param5 + _param5.length + 36 <= calldata.size
  log 0x6c772439: (Mask(96, 0, _param1) >> 160)
  if _param5.length:
      if -_param5.length + 224:
          if -_param5.length + 256:
              revert with 0, 'Wrong permit length'
  else:
      if not _param4.length:
          revert with EmptyPools()
      if call.value > 0:
          if not (call.value < _param3) - 1:
              revert with InvalidMsgValue()
          call ???????????????????????????????????????? with:
             value _param3 wei
               gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x1357455448206465706f736974206661696c6564
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknowne99bfa95(address _param1, uint256 _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8, uint256 _param9) payable: 
  require calldata.size - 4 >=′ 288
  require calldata.size - 4 >=′ 160
  require _param6 <= LOCK8605463013()
  require _param6 + 35 <′ calldata.size
  require _param6.length <= LOCK8605463013()
  require _param6 + (32 * _param6.length) + 36 <= calldata.size
  require _param7 <= LOCK8605463013()
  require _param7 + 35 <′ calldata.size
  require _param7.length <= LOCK8605463013()
  require _param7 + (32 * _param7.length) + 36 <= calldata.size
  require _param8 <= LOCK8605463013()
  require _param8 + 35 <′ calldata.size
  require _param8.length <= LOCK8605463013()
  require _param8 + (32 * _param8.length) + 36 <= calldata.size
  require _param9 == address(_param9)
  if _param5 < block.timestamp:
      revert with 0, 'Route: expired'
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  if not _param1 - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      revert with 0, 'Invalid source token'
  static call _param1.balanceOf(address account) with:
          gas gas_remaining wei
         args this.address
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 32
  require _param2 == address(_param2)
  if _param6.length > LOCK8605463013():
      revert with 0, 65
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data): # not payable
  require calldata.size - 4 >=′ 96
  require data <= LOCK8605463013()
  require data + 35 <′ calldata.size
  require data.length <= LOCK8605463013()
  require data + data.length + 36 <= calldata.size
  static call caller.token0() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  static call caller.token1() with:
          gas gas_remaining wei
  static call caller.fee() with:
          gas gas_remaining wei
  if address(sha3(1204786273842544410698595, sha3(ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0]), 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54)) != caller:
      revert with BadPool()
  if amount0Delta >′ 0 == 1:
      if cd[132] == this.address == 1:
          call ext_call.return_data[0] with:
               gas gas_remaining wei
              args caller, amount0Delta
      else:
          call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.token1() with:
               gas gas_remaining wei
              args ext_call.return_data[0], cd[132], caller, amount0Delta
  else:
      if cd[132] == this.address == 1:
          call ext_call.return_data[0] with:
               gas gas_remaining wei
              args caller, amount1Delta
      else:
          call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.token1() with:
               gas gas_remaining wei
              args ext_call.return_data[0], cd[132], caller, amount1Delta
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  if return_data.size and return_data.size <= 31 or ext_call.return_data[0] != 1:
      revert with ERC20TransferFailed()

def unknown41f4a959(uint256 _param1, uint256 _param2, uint256 _param3): # not payable
  require calldata.size - 4 >=′ 96
  require _param1 == address(_param1)
  require _param2 == address(_param2)
  if owner != caller:
      revert with 0, 'Ownable: caller is not the owner'
  if address(_param1) - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      call _param1.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args _param2, _param3
      if not ext_call.success:
          revert with SafeTransferFailed()
      if not return_data.size:
          if ext_code.size(_param1) <= 0:
              revert with SafeTransferFailed()
      else:
          if return_data.size <= 31 or ext_call.return_data[0] != 1:
              revert with SafeTransferFailed()
      stop
  call address(_param2) with:
     value _param3 wei
       gas gas_remaining wei
  if return_data.size:
      if not ext_call.success:
          revert with 0, 
                      32,
                      return_data.size,
                      ext_call.return_data[0 len return_data.size],
                      Mask(8 * ceil32(return_data.size) - return_data.size, -(8 * ceil32(return_data.size) + -ceil32(return_data.size) + 27) + 256, 32) >> -(8 * ceil32(return_data.size) + -ceil32(return_data.size) + 27) + 256
      stop
  if ext_call.success:
      stop
  mem[164 len 0x8c379a000000000000000000000000000000000000000000000000000000000] = 32, 0x8c379a000000000000000000000000000000000000000000000000000000000, mem[164 len 0x8c3799fffffffffffffffffffffffffffffffffffffffffffffffffffffffdc]
  revert with 0, 
              32,
              0x8c379a000000000000000000000000000000000000000000000000000000000,
              mem[164 len 0x8c379a000000000000000000000000000000000000000000000000000000000]

def unknownb80c2f09(uint256 _param1, address _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8) payable: 
  require calldata.size - 4 >=′ 288
  require calldata.size - 36 >=′ 160
  require _param7 <= LOCK8605463013()
  require _param7 + 35 <′ calldata.size
  require _param7.length <= LOCK8605463013()
  require _param7 + (32 * _param7.length) + 36 <= calldata.size
  require _param8 <= LOCK8605463013()
  require _param8 + 35 <′ calldata.size
  require _param8.length <= LOCK8605463013()
  require _param8 + (32 * _param8.length) + 36 <= calldata.size
  require cd[260] <= LOCK8605463013()
  require cd[260] + 35 <′ calldata.size
  require ('cd', 260).length <= LOCK8605463013()
  require cd[260] + (32 * ('cd', 260).length) + 36 <= calldata.size
  if _param6 < block.timestamp:
      revert with 0, 'Route: expired'
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  log 0x6c772439: _param1
  require calldata.size - 36 >=′ 160
  require _param3 == address(_param3)
  if not _param4:
      revert with 0, 'Route: fromTokenAmount must be > 0'
  if address(_param3) != 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      static call address(_param3).balanceOf(address account) with:
              gas gas_remaining wei
             args caller
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
  if 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee == _param2:
      require ext_code.size(0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call 0x00c02aaa39b223fe8d0a0e5c4f27ead9083c756c.deposit() with:
         value _param4 wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown9871efa4() payable: 
  require calldata.size - 4 >=′ 128
  require cd[100] <= LOCK8605463013()
  require cd[100] + 35 <′ calldata.size
  require ('cd', 100).length <= LOCK8605463013()
  require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
  if not ('cd', 100).length:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  0x2000000000000000000000000000000000000000000000000000000000,
                  Mask(112, 144, 'empty pools') >> 144
  if not address(cd[4]) != 1:
      if call.value:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
           gas gas_remaining wei
          args address(cd[4]), caller, address(('cd', 100)[0]), cd[36]
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x12636c61696d20746f6b656e206661696c6564
  else:
      if not (call.value < cd[36]) - 1:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call ????????????????????????????????????????.deposit() with:
         value cd[36] wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x126465706f73697420455448206661696c6564
      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args address(('cd', 100)[0]), cd[36]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown03b87e5f(uint256 _param1, uint256 _param2, address _param3, uint256 _param4, uint256 _param5, uint256 _param6, array _param7, array _param8, array _param9) payable: 
  require calldata.size - 4 >=′ 320
  require _param2 == address(_param2)
  require calldata.size - 68 >=′ 160
  require _param7 <= LOCK8605463013()
  require _param7 + 35 <′ calldata.size
  require _param7.length <= LOCK8605463013()
  require _param7 + (32 * _param7.length) + 36 <= calldata.size
  require _param8 <= LOCK8605463013()
  require _param8 + 35 <′ calldata.size
  require _param8.length <= LOCK8605463013()
  require _param8 + (32 * _param8.length) + 36 <= calldata.size
  require _param9 <= LOCK8605463013()
  require _param9 + 35 <′ calldata.size
  require _param9.length <= LOCK8605463013()
  require _param9 + (32 * _param9.length) + 36 <= calldata.size
  if _param6 < block.timestamp:
      revert with 0, 'Route: expired'
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  log 0x6c772439: _param1
  if not address(_param2):
      revert with 0, 'not addr(0)'
  require calldata.size - 68 >=′ 160
  require _param4 == address(_param4)
  if not _param5:
      revert with 0, 'Route: fromTokenAmount must be > 0'
  if address(_param4) != 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      static call address(_param4).balanceOf(address account) with:
              gas gas_remaining wei
             args address(_param2)
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
  if 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee == _param3:
      require ext_code.size(0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call 0x00c02aaa39b223fe8d0a0e5c4f27ead9083c756c.deposit() with:
         value _param5 wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown08298b5a() payable: 
  require calldata.size - 4 >=′ 160
  require cd[100] == address(cd[100])
  require cd[132] <= LOCK8605463013()
  require cd[132] + 35 <′ calldata.size
  require ('cd', 132).length <= LOCK8605463013()
  require cd[132] + (32 * ('cd', 132).length) + 36 <= calldata.size
  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
  if not address(cd[100]):
      revert with 0, 'not addr(0)'
  if not ('cd', 132).length:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  0x2000000000000000000000000000000000000000000000000000000000,
                  Mask(112, 144, 'empty pools') >> 144
  if not address(cd[4]) != 1:
      if call.value:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
           gas gas_remaining wei
          args address(cd[4]), caller, address(('cd', 132)[0]), cd[36]
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x12636c61696d20746f6b656e206661696c6564
  else:
      if not (call.value < cd[36]) - 1:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call ????????????????????????????????????????.deposit() with:
         value cd[36] wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x126465706f73697420455448206661696c6564
      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args address(('cd', 132)[0]), cd[36]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknownd1b260d4(uint256 _param1, address _param2, uint256 _param3, uint256 _param4, uint256 _param5, array _param6, array _param7, array _param8) payable: 
  require calldata.size - 4 >=′ 288
  require calldata.size - 36 >=′ 160
  require _param7 <= LOCK8605463013()
  require _param7 + 35 <′ calldata.size
  require _param7.length <= LOCK8605463013()
  require _param7 + (32 * _param7.length) + 36 <= calldata.size
  require _param8 <= LOCK8605463013()
  require _param8 + 35 <′ calldata.size
  require _param8.length <= LOCK8605463013()
  require _param8 + (32 * _param8.length) + 36 <= calldata.size
  require cd[260] <= LOCK8605463013()
  require cd[260] + 35 <′ calldata.size
  require ('cd', 260).length <= LOCK8605463013()
  require cd[260] + (32 * ('cd', 260).length) + 36 <= calldata.size
  if _param6 < block.timestamp:
      revert with 0, 'Route: expired'
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  if bool(stor4[caller]) != 1:
      revert with 0, 'only priority'
  log 0x6c772439: _param1
  static call caller.unknown534015b3() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 64
  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
  require ext_call.return_data[32] == ext_call.return_data[44 len 20]
  if not ext_call.return_data[44 len 20]:
      revert with 0, 'not address(0)'
  require calldata.size - 36 >=′ 160
  if not bool(ceil32(return_data.size) + 256 <= LOCK8605463013()):
      revert with 0, 65
  require _param3 == address(_param3)
  if not _param4:
      revert with 0, 'Route: fromTokenAmount must be > 0'
  if address(_param3) != 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      static call address(_param3).balanceOf(address account) with:
              gas gas_remaining wei
             args address(ext_call.return_data[32])
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
  if 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee == _param2:
      require ext_code.size(0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call 0x00c02aaa39b223fe8d0a0e5c4f27ead9083c756c.deposit() with:
         value _param4 wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown01617fab(uint256 _param1, uint128 _param2) payable: 
  require calldata.size - 4 >=′ 64
  if not _param2:
      revert with 0, 'amount must be > 0'
  if not Mask(1, 255, _param2):
      if _param2 != call.value:
          revert with 0, 'value not equal amount'
      require ext_code.size(0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call 0x00c02aaa39b223fe8d0a0e5c4f27ead9083c756c.deposit() with:
         value _param2 wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args caller, _param2
      if not return_data.size:
          if ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c) <= 0:
              revert with SafeTransferFailed()
      else:
          if return_data.size <= 31 or ext_call.return_data[0] != 1:
              revert with SafeTransferFailed()
      log 0x6c772439: _param1
      if Mask(1, 255, _param2):
          log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c000000000000000000000000, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, _param2 << 128, _param2
      else:
          log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, _param2 << 128, _param2
  else:
      require ext_code.size(0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58)
      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
           gas gas_remaining wei
          args 0, 138179948, caller, this.address, _param2
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call ????????????????????????????????????????.withdraw(uint256 amount) with:
           gas gas_remaining wei
          args _param2
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      call caller with:
         value eth.balance(this.address) wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0, 'transfer native token failed'
      log 0x6c772439: _param1
      if not return_data.size:
          if Mask(1, 255, _param2):
              log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c000000000000000000000000, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, _param2 << 128, _param2
          else:
              log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, _param2 << 128, _param2
      else:
          if Mask(1, 255, _param2):
              log 0xc21bb43f: 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, caller, _param2 << 128, _param2
          else:
              log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xc02aaa39b223fe8d0a0e5c4f27ead9083c756c, caller, _param2 << 128, _param2

def unknown0c00e013(): # not payable
  require calldata.size - 4 >=′ 32
  require cd[4] <= LOCK8605463013()
  require cd[4] + 35 <′ calldata.size
  require ('cd', 4).length <= LOCK8605463013()
  require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
  if ('cd', 4).length > LOCK8605463013():
      revert with 0, 65
  mem[96] = ('cd', 4).length
  mem[64] = (32 * ('cd', 4).length) + 128
  if not ('cd', 4).length:
      idx = 0
      while idx < ('cd', 4).length:
          require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
          require cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)] == address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
          mem[0] = address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
          mem[32] = 31
          if idx >= ('cd', 4).length:
              revert with 0, 50
          require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
          if caller == operator[address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])]:
              mem[mem[64] + 32 len 288] = call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]
              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                  _178 = mem[64]
                  mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                  mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                  mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                  mem[mem[64] + 128] = chainid
                  mem[mem[64] + 160] = this.address
                  _179 = mem[64]
                  mem[mem[64]] = 160
                  mem[64] = mem[64] + 192
                  _181 = sha3(mem[_179 + 32 len mem[_179]])
                  mem[_178 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                  mem[_178 + 194] = _181
                  mem[_178 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                  if idx >= mem[96]:
                      revert with 0, 50
                  mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_181][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                  if idx >= mem[96]:
                      revert with 0, 50
                  if not unknown3ba7cadf[6401][_181][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                      revert with 593696918
                  mem[0] = sha3(6401, _181, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                  mem[32] = 32
                  unknown3ba7cadf[6401][_181][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
              else:
                  if chainid == 1:
                      mem[mem[64]] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[mem[64] + 2] = 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc
                      mem[mem[64] + 34] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
                  else:
                      _188 = mem[64]
                      mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                      mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                      mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                      mem[mem[64] + 128] = chainid
                      mem[mem[64] + 160] = this.address
                      _189 = mem[64]
                      mem[mem[64]] = 160
                      mem[64] = mem[64] + 192
                      _191 = sha3(mem[_189 + 32 len mem[_189]])
                      mem[_188 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[_188 + 194] = _191
                      mem[_188 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_191][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][_191][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, _191, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][_191][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
          else:
              require cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)] == address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
              if address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)]) != caller:
                  revert with InvalidCanceller()
              if idx >= ('cd', 4).length:
                  revert with 0, 50
              require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
              mem[mem[64] + 32 len 288] = call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]
              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                  _256 = mem[64]
                  mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                  mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                  mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                  mem[mem[64] + 128] = chainid
                  mem[mem[64] + 160] = this.address
                  _257 = mem[64]
                  mem[mem[64]] = 160
                  mem[64] = mem[64] + 192
                  _259 = sha3(mem[_257 + 32 len mem[_257]])
                  mem[_256 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                  mem[_256 + 194] = _259
                  mem[_256 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                  if idx >= mem[96]:
                      revert with 0, 50
                  mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_259][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                  if idx >= mem[96]:
                      revert with 0, 50
                  if not unknown3ba7cadf[6401][_259][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                      revert with 593696918
                  mem[0] = sha3(6401, _259, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                  mem[32] = 32
                  unknown3ba7cadf[6401][_259][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
              else:
                  if chainid == 1:
                      mem[mem[64]] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[mem[64] + 2] = 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc
                      mem[mem[64] + 34] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
                  else:
                      _266 = mem[64]
                      mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                      mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                      mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                      mem[mem[64] + 128] = chainid
                      mem[mem[64] + 160] = this.address
                      _267 = mem[64]
                      mem[mem[64]] = 160
                      mem[64] = mem[64] + 192
                      _269 = sha3(mem[_267 + 32 len mem[_267]])
                      mem[_266 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[_266 + 194] = _269
                      mem[_266 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_269][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][_269][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, _269, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][_269][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
          idx = idx + 1
          continue 
      _164 = mem[64]
      mem[mem[64]] = 64
      mem[mem[64] + 64] = ('cd', 4).length
      idx = 0
      s = cd[4] + 36
      t = mem[64] + (32 * ('cd', 4).length) + 96
      u = mem[64] + 96
      while idx < ('cd', 4).length:
          mem[u] = t + -_164 - 96
          require cd[s] <′ calldata.size + -cd[4] - 355
          mem[t] = cd[(cd[4] + cd[s] + 36)]
          require cd[(cd[4] + cd[s] + 68)] == address(cd[(cd[4] + cd[s] + 68)])
          mem[t + 32] = address(cd[(cd[4] + cd[s] + 68)])
          require cd[(cd[4] + cd[s] + 100)] == address(cd[(cd[4] + cd[s] + 100)])
          mem[t + 64] = address(cd[(cd[4] + cd[s] + 100)])
          require cd[(cd[4] + cd[s] + 132)] == address(cd[(cd[4] + cd[s] + 132)])
          mem[t + 96] = address(cd[(cd[4] + cd[s] + 132)])
          mem[t + 128] = cd[(cd[4] + cd[s] + 164)]
          mem[t + 160] = cd[(cd[4] + cd[s] + 196)]
          mem[t + 192] = cd[(cd[4] + cd[s] + 228)]
          mem[t + 224] = cd[(cd[4] + cd[s] + 260)]
          require cd[(cd[4] + cd[s] + 292)] == bool(cd[(cd[4] + cd[s] + 292)])
          mem[t + 256] = bool(cd[(cd[4] + cd[s] + 292)])
          require cd[(cd[4] + cd[s] + 324)] <′ calldata.size + -cd[4] + -cd[s] - 67
          require cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)] <= LOCK8605463013()
          require cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 68 <=′ calldata.size - cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]
          mem[t + 288] = 320
          mem[t + 320] = cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]
          mem[t + 352 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]] = call.data[cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 68 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]]
          mem[cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)] + t + 352] = 0
          idx = idx + 1
          s = s + 32
          t = t + ceil32(cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]) + 352
          u = u + 32
          continue 
      mem[_164 + 32] = (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 96
      _326 = mem[96]
      mem[_164 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 96] = mem[96]
      mem[_164 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 128 len 32 * _326] = mem[128 len 32 * _326]
      log 0x2d978b05: mem[mem[64] len _164 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + (32 * _326) + -mem[64] + 128], caller
  else:
      mem[128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
      idx = 0
      while idx < ('cd', 4).length:
          require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
          require cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)] == address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
          mem[0] = address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
          mem[32] = 31
          if idx >= ('cd', 4).length:
              revert with 0, 50
          require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
          if caller == operator[address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])]:
              mem[mem[64] + 32 len 288] = call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]
              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                  _182 = mem[64]
                  mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                  mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                  mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                  mem[mem[64] + 128] = chainid
                  mem[mem[64] + 160] = this.address
                  _183 = mem[64]
                  mem[mem[64]] = 160
                  mem[64] = mem[64] + 192
                  _185 = sha3(mem[_183 + 32 len mem[_183]])
                  mem[_182 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                  mem[_182 + 194] = _185
                  mem[_182 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                  if idx >= mem[96]:
                      revert with 0, 50
                  mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_185][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                  if idx >= mem[96]:
                      revert with 0, 50
                  if not unknown3ba7cadf[6401][_185][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                      revert with 593696918
                  mem[0] = sha3(6401, _185, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                  mem[32] = 32
                  unknown3ba7cadf[6401][_185][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
              else:
                  if chainid == 1:
                      mem[mem[64]] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[mem[64] + 2] = 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc
                      mem[mem[64] + 34] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
                  else:
                      _196 = mem[64]
                      mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                      mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                      mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                      mem[mem[64] + 128] = chainid
                      mem[mem[64] + 160] = this.address
                      _197 = mem[64]
                      mem[mem[64]] = 160
                      mem[64] = mem[64] + 192
                      _199 = sha3(mem[_197 + 32 len mem[_197]])
                      mem[_196 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[_196 + 194] = _199
                      mem[_196 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_199][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][_199][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, _199, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][_199][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
          else:
              require cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)] == address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)])
              if address(cd[(cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 68)]) != caller:
                  revert with InvalidCanceller()
              if idx >= ('cd', 4).length:
                  revert with 0, 50
              require cd[(cd[4] + (32 * idx) + 36)] <′ calldata.size + -cd[4] - 355
              mem[mem[64] + 32 len 288] = call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]
              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                  _260 = mem[64]
                  mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                  mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                  mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                  mem[mem[64] + 128] = chainid
                  mem[mem[64] + 160] = this.address
                  _261 = mem[64]
                  mem[mem[64]] = 160
                  mem[64] = mem[64] + 192
                  _263 = sha3(mem[_261 + 32 len mem[_261]])
                  mem[_260 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                  mem[_260 + 194] = _263
                  mem[_260 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                  if idx >= mem[96]:
                      revert with 0, 50
                  mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_263][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                  if idx >= mem[96]:
                      revert with 0, 50
                  if not unknown3ba7cadf[6401][_263][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                      revert with 593696918
                  mem[0] = sha3(6401, _263, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                  mem[32] = 32
                  unknown3ba7cadf[6401][_263][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
              else:
                  if chainid == 1:
                      mem[mem[64]] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[mem[64] + 2] = 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc
                      mem[mem[64] + 34] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
                  else:
                      _272 = mem[64]
                      mem[mem[64] + 32] = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
                      mem[mem[64] + 64] = 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de
                      mem[mem[64] + 96] = 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3
                      mem[mem[64] + 128] = chainid
                      mem[mem[64] + 160] = this.address
                      _273 = mem[64]
                      mem[mem[64]] = 160
                      mem[64] = mem[64] + 192
                      _275 = sha3(mem[_273 + 32 len mem[_273]])
                      mem[_272 + 192] = 0x1901000000000000000000000000000000000000000000000000000000000000
                      mem[_272 + 194] = _275
                      mem[_272 + 226] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288])
                      if idx >= mem[96]:
                          revert with 0, 50
                      mem[(32 * idx) + 128] = unknown3ba7cadf[6401][_275][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))]
                      if idx >= mem[96]:
                          revert with 0, 50
                      if not unknown3ba7cadf[6401][_275][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                          revert with 593696918
                      mem[0] = sha3(6401, _275, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[(cd[4] + (32 * idx) + 36)] + cd[4] + 36 len 288]))
                      mem[32] = 32
                      unknown3ba7cadf[6401][_275][('map', 42076668403137520790784131642524588708945596491949319431411130496559196418726, ('call.data', ('add', 36, ('cd', ('add', 36, ('cd', 4), ('mul', 32, ('var', 0)))), ('cd', 4)), 288))] = 0x8000000000000000000000000000000000000000000000000000000000000000
          idx = idx + 1
          continue 
      _165 = mem[64]
      mem[mem[64]] = 64
      mem[mem[64] + 64] = ('cd', 4).length
      idx = 0
      s = cd[4] + 36
      t = mem[64] + (32 * ('cd', 4).length) + 96
      u = mem[64] + 96
      while idx < ('cd', 4).length:
          mem[u] = t + -_165 - 96
          require cd[s] <′ calldata.size + -cd[4] - 355
          mem[t] = cd[(cd[4] + cd[s] + 36)]
          require cd[(cd[4] + cd[s] + 68)] == address(cd[(cd[4] + cd[s] + 68)])
          mem[t + 32] = address(cd[(cd[4] + cd[s] + 68)])
          require cd[(cd[4] + cd[s] + 100)] == address(cd[(cd[4] + cd[s] + 100)])
          mem[t + 64] = address(cd[(cd[4] + cd[s] + 100)])
          require cd[(cd[4] + cd[s] + 132)] == address(cd[(cd[4] + cd[s] + 132)])
          mem[t + 96] = address(cd[(cd[4] + cd[s] + 132)])
          mem[t + 128] = cd[(cd[4] + cd[s] + 164)]
          mem[t + 160] = cd[(cd[4] + cd[s] + 196)]
          mem[t + 192] = cd[(cd[4] + cd[s] + 228)]
          mem[t + 224] = cd[(cd[4] + cd[s] + 260)]
          require cd[(cd[4] + cd[s] + 292)] == bool(cd[(cd[4] + cd[s] + 292)])
          mem[t + 256] = bool(cd[(cd[4] + cd[s] + 292)])
          require cd[(cd[4] + cd[s] + 324)] <′ calldata.size + -cd[4] + -cd[s] - 67
          require cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)] <= LOCK8605463013()
          require cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 68 <=′ calldata.size - cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]
          mem[t + 288] = 320
          mem[t + 320] = cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]
          mem[t + 352 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]] = call.data[cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 68 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]]
          mem[cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)] + t + 352] = 0
          idx = idx + 1
          s = s + 32
          t = t + ceil32(cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 324)] + 36)]) + 352
          u = u + 32
          continue 
      mem[_165 + 32] = (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 96
      _327 = mem[96]
      mem[_165 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 96] = mem[96]
      mem[_165 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + 128 len 32 * _327] = mem[128 len 32 * _327]
      log 0x2d978b05: mem[mem[64] len _165 + (32 * ('cd', 4).length) + (352 * ('cd', 4).length) + (32 * _327) + -mem[64] + 128], caller

def unknown8575654f() payable: 
  require calldata.size - 4 >=′ 128
  require cd[100] <= LOCK8605463013()
  require cd[100] + 35 <′ calldata.size
  require ('cd', 100).length <= LOCK8605463013()
  require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
  if bool(stor4[caller]) != 1:
      revert with 0, 'only priority'
  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
  static call caller.unknown534015b3() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 64
  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
  require ext_call.return_data[32] == ext_call.return_data[44 len 20]
  if not ext_call.return_data[44 len 20]:
      revert with 0, 'not address(0)'
  if not ('cd', 100).length:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  0x2000000000000000000000000000000000000000000000000000000000,
                  Mask(112, 144, 'empty pools') >> 144
  if not address(cd[4]) != 1:
      if call.value:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call 0x70cbb871e8f30fc8ce23609e9e0ea87b6b222f58.claimTokens(address token, address who, address dest, uint256 amount) with:
           gas gas_remaining wei
          args address(cd[4]), ext_call.return_data[0], address(('cd', 100)[0]), cd[36]
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x12636c61696d20746f6b656e206661696c6564
  else:
      if not (call.value < cd[36]) - 1:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x11696e76616c6964206d73672e76616c7565
      call ????????????????????????????????????????.deposit() with:
         value cd[36] wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x126465706f73697420455448206661696c6564
      call ????????????????????????????????????????.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args address(('cd', 100)[0]), cd[36]
  idx = cd[100] + 68
  s = ('cd', 100)[0]
  t = cd[36]
  while idx < cd[100] + (32 * ('cd', 100).length) + 36:
      static call address(s).getReserves() with:
              gas gas_remaining wei
      mem[0 len 64] = ext_call.return_data[0 len 64]
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x1472657365727665732063616c6c206661696c6564
      if not Mask(1, 255, s):
          if Mask(1, 252, s):
              static call address(s).token0() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x12746f6b656e302063616c6c206661696c6564
              static call ext_call.return_data[0].balanceOf(address account) with:
                      gas gas_remaining wei
                     args address(s)
              mem[0] = ext_call.return_data[0]
          mem[ceil32(return_data.size) + 96] = 0x22c0d9f0902f1ac000000000000000000000000000000000000000000000000
          if not Mask(1, 255, s):
              mem[ceil32(return_data.size) + 100] = 0
              mem[ceil32(return_data.size) + 132] = 0 / 10^9 * ext_call.return_data[0]
              mem[ceil32(return_data.size) + 164] = address(cd[idx])
              mem[ceil32(return_data.size) + 196] = 128
              mem[ceil32(return_data.size) + 228] = 0
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0, 0 / 10^9 * ext_call.return_data[0], address(cd[idx]), 128, 0
          else:
              mem[ceil32(return_data.size) + 100] = 0 / 10^9 * ext_call.return_data[0]
              mem[ceil32(return_data.size) + 132] = 0
              mem[ceil32(return_data.size) + 164] = address(cd[idx])
              mem[ceil32(return_data.size) + 196] = 128
              mem[ceil32(return_data.size) + 228] = 0
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0 / 10^9 * ext_call.return_data[0], 0, address(cd[idx]), 128, 0
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x10737761702063616c6c206661696c6564
          idx = idx + 32
          s = cd[idx]
          t = 0 / 10^9 * ext_call.return_data[0]
          continue 
      if Mask(1, 253, s):
          static call address(s).token1() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x12746f6b656e312063616c6c206661696c6564
          static call ext_call.return_data[0].balanceOf(address account) with:
                  gas gas_remaining wei
                 args address(s)
          mem[0] = ext_call.return_data[0]
      mem[ceil32(return_data.size) + 96] = 0x22c0d9f0902f1ac000000000000000000000000000000000000000000000000
      if not Mask(1, 255, s):
          mem[ceil32(return_data.size) + 100] = 0
          mem[ceil32(return_data.size) + 132] = 0 / 10^9 * ext_call.return_data[32]
          mem[ceil32(return_data.size) + 164] = address(cd[idx])
          mem[ceil32(return_data.size) + 196] = 128
          mem[ceil32(return_data.size) + 228] = 0
          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
               gas gas_remaining wei
              args 0, 0 / 10^9 * ext_call.return_data[32], address(cd[idx]), 128, 0
      else:
          mem[ceil32(return_data.size) + 100] = 0 / 10^9 * ext_call.return_data[32]
          mem[ceil32(return_data.size) + 132] = 0
          mem[ceil32(return_data.size) + 164] = address(cd[idx])
          mem[ceil32(return_data.size) + 196] = 128
          mem[ceil32(return_data.size) + 228] = 0
          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
               gas gas_remaining wei
              args 0 / 10^9 * ext_call.return_data[32], 0, address(cd[idx]), 128, 0
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x10737761702063616c6c206661696c6564
      idx = idx + 32
      s = cd[idx]
      t = 0 / 10^9 * ext_call.return_data[32]
      continue 
  if Mask(1, 254, s):
      static call address(s).getReserves() with:
              gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x1472657365727665732063616c6c206661696c6564
      if Mask(1, 255, s):
          if not Mask(1, 253, s):
              if not Mask(1, 255, s):
                  call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                       gas gas_remaining wei
                      args 0, 0 / 10^9 * ext_call.return_data[32], this.address, 128, 0
              else:
                  call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                       gas gas_remaining wei
                      args 0 / 10^9 * ext_call.return_data[32], 0, this.address, 128, 0
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x10737761702063616c6c206661696c6564
              call ????????????????????????????????????????.withdraw(uint256 amount) with:
                   gas gas_remaining wei
                  args (0 / 10^9 * ext_call.return_data[32])
              call ext_call.return_data[32] with:
                 value 0 / 10^9 * ext_call.return_data[32] wei
                   gas gas_remaining wei
              if 0 / 10^9 * ext_call.return_data[32] < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              log 0xc21bb43f: address(cd[4]), 0, tx.origin, cd[36], 0 / 10^9 * ext_call.return_data[32]
              return (0 / 10^9 * ext_call.return_data[32])
          static call address(s).token1() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x12746f6b656e312063616c6c206661696c6564
          static call ext_call.return_data[0].balanceOf(address account) with:
                  gas gas_remaining wei
                 args address(s)
          if not Mask(1, 255, s):
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0, 0 / 10^9 * ext_call.return_data[32], this.address, 128, 0
          else:
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0 / 10^9 * ext_call.return_data[32], 0, this.address, 128, 0
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x10737761702063616c6c206661696c6564
          call ????????????????????????????????????????.withdraw(uint256 amount) with:
               gas gas_remaining wei
              args (0 / 10^9 * ext_call.return_data[32])
          call ext_call.return_data[32] with:
             value 0 / 10^9 * ext_call.return_data[32] wei
               gas gas_remaining wei
      else:
          if not Mask(1, 252, s):
              if not Mask(1, 255, s):
                  call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                       gas gas_remaining wei
                      args 0, 0 / 10^9 * ext_call.return_data[0], this.address, 128, 0
              else:
                  call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                       gas gas_remaining wei
                      args 0 / 10^9 * ext_call.return_data[0], 0, this.address, 128, 0
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x10737761702063616c6c206661696c6564
              call ????????????????????????????????????????.withdraw(uint256 amount) with:
                   gas gas_remaining wei
                  args (0 / 10^9 * ext_call.return_data[0])
              call ext_call.return_data[32] with:
                 value 0 / 10^9 * ext_call.return_data[0] wei
                   gas gas_remaining wei
              if 0 / 10^9 * ext_call.return_data[0] < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              log 0xc21bb43f: address(cd[4]), 0, tx.origin, cd[36], 0 / 10^9 * ext_call.return_data[0]
              return (0 / 10^9 * ext_call.return_data[0])
          static call address(s).token0() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x12746f6b656e302063616c6c206661696c6564
          static call ext_call.return_data[0].balanceOf(address account) with:
                  gas gas_remaining wei
                 args address(s)
          if not Mask(1, 255, s):
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0, 0 / 10^9 * ext_call.return_data[0], this.address, 128, 0
          else:
              call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                   gas gas_remaining wei
                  args 0 / 10^9 * ext_call.return_data[0], 0, this.address, 128, 0
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x10737761702063616c6c206661696c6564
          call ????????????????????????????????????????.withdraw(uint256 amount) with:
               gas gas_remaining wei
              args (0 / 10^9 * ext_call.return_data[0])
          call ext_call.return_data[32] with:
             value 0 / 10^9 * ext_call.return_data[0] wei
               gas gas_remaining wei
  else:
      if Mask(1, 255, s):
          if not Mask(1, 252, s):
              static call address(s).getReserves() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1472657365727665732063616c6c206661696c6564
              if not Mask(1, 255, s):
                  if not Mask(1, 252, s):
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if not Mask(1, 255, s):
                          static call address(s).token1() with:
                                  gas gas_remaining wei
                      else:
                          static call address(s).token0() with:
                                  gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1067657420746f6b656e206661696c6564
                  else:
                      static call address(s).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e302063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                  ('bool', 'ext_call.success')
              else:
                  if not Mask(1, 253, s):
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if not Mask(1, 255, s):
                          static call address(s).token1() with:
                                  gas gas_remaining wei
                      else:
                          static call address(s).token0() with:
                                  gas gas_remaining wei
                  else:
                      static call address(s).token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e312063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
          else:
              static call address(s).token0() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x12746f6b656e302063616c6c206661696c6564
              static call ext_call.return_data[0].balanceOf(address account) with:
                      gas gas_remaining wei
                     args ext_call.return_data[32]
              static call address(s).getReserves() with:
                      gas gas_remaining wei
              if not Mask(1, 255, s):
                  if Mask(1, 252, s):
                      static call address(s).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e302063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                  else:
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if 0 < ext_call.return_data[0] == 1:
                          static call ext_call.return_data[0].balanceOf(address account) with:
                                  gas gas_remaining wei
                                 args ext_call.return_data[32]
              else:
                  if Mask(1, 253, s):
                      static call address(s).token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e312063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                  else:
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if 0 < ext_call.return_data[0] == 1:
                          static call ext_call.return_data[0].balanceOf(address account) with:
                                  gas gas_remaining wei
                                 args ext_call.return_data[32]
      else:
          if not Mask(1, 253, s):
              static call address(s).getReserves() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1472657365727665732063616c6c206661696c6564
              if Mask(1, 255, s):
                  if not Mask(1, 253, s):
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if not Mask(1, 255, s):
                          static call address(s).token1() with:
                                  gas gas_remaining wei
                      else:
                          static call address(s).token0() with:
                                  gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1067657420746f6b656e206661696c6564
                  else:
                      static call address(s).token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e312063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
              else:
                  if not Mask(1, 252, s):
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if not Mask(1, 255, s):
                          static call address(s).token1() with:
                                  gas gas_remaining wei
                      else:
                          static call address(s).token0() with:
                                  gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1067657420746f6b656e206661696c6564
                  else:
                      static call address(s).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e302063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
              ('bool', 'ext_call.success')
          else:
              static call address(s).token1() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x12746f6b656e312063616c6c206661696c6564
              static call ext_call.return_data[0].balanceOf(address account) with:
                      gas gas_remaining wei
                     args ext_call.return_data[32]
              static call address(s).getReserves() with:
                      gas gas_remaining wei
              if Mask(1, 255, s):
                  if Mask(1, 253, s):
                      static call address(s).token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e312063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                  else:
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[32], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[32], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if 0 < ext_call.return_data[0] == 1:
                          static call ext_call.return_data[0].balanceOf(address account) with:
                                  gas gas_remaining wei
                                 args ext_call.return_data[32]
              else:
                  if Mask(1, 252, s):
                      static call address(s).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x12746f6b656e302063616c6c206661696c6564
                      static call ext_call.return_data[0].balanceOf(address account) with:
                              gas gas_remaining wei
                             args address(s)
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                  else:
                      if not Mask(1, 255, s):
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0, 0 / 10^9 * ext_call.return_data[0], ext_call.return_data[32], 128, 0
                      else:
                          call address(s).swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data) with:
                               gas gas_remaining wei
                              args 0 / 10^9 * ext_call.return_data[0], 0, ext_call.return_data[32], 128, 0
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x10737761702063616c6c206661696c6564
                      if 0 < ext_call.return_data[0] == 1:
                          static call ext_call.return_data[0].balanceOf(address account) with:
                                  gas gas_remaining wei
                                 args ext_call.return_data[32]
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x146765742062616c616e63654f66206661696c6564
                      else:
                          if not Mask(1, 255, s):
                              static call address(s).token1() with:
                                      gas gas_remaining wei
                          else:
                              static call address(s).token0() with:
                                      gas gas_remaining wei
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknownd8837daf() payable: 
  require calldata.size - 4 >=′ 128
  require cd[100] <= LOCK8605463013()
  require cd[100] + 35 <′ calldata.size
  require ('cd', 100).length <= LOCK8605463013()
  require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
  if bool(stor4[caller]) != 1:
      revert with 0, 'only priority'
  mem[0] = caller
  log 0x6c772439: (Mask(96, 0, cd[4]) >> 160)
  static call caller.unknown534015b3() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 64
  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
  require ext_call.return_data[32] == ext_call.return_data[44 len 20]
  if not ext_call.return_data[44 len 20]:
      revert with 0, 'not address(0)'
  if not ('cd', 100).length:
      revert with EmptyPools()
  if call.value <= 0:
      mem[96] = cd[36]
      idx = cd[100] + 36
      s = cd[36]
      t = ext_call.return_data[0]
      while idx < cd[100] + (32 * ('cd', 100).length) + 4:
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          mem[ceil32(return_data.size) + 96] = 0x128acb0800000000000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = this.address
          if not Mask(1, 255, cd[idx]) == 1:
              mem[ceil32(return_data.size) + 132] = 1
              mem[ceil32(return_data.size) + 164] = s
              mem[ceil32(return_data.size) + 196] = 4295128740
              mem[ceil32(return_data.size) + 228] = 160
              mem[ceil32(return_data.size) + 260] = 32
              mem[ceil32(return_data.size) + 292] = t
              call address(cd[idx]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, 1, s, 4295128740, 160, 32, t
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              mem[0] = ext_call.return_data[32]
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              idx = idx + 32
              s = !ext_call.return_data[32] + 1
              t = this.address
              continue 
          mem[ceil32(return_data.size) + 132] = 0
          mem[ceil32(return_data.size) + 164] = s
          mem[ceil32(return_data.size) + 196] = 0xfffd8963efd1fc6a506488495d951d5263988d25
          mem[ceil32(return_data.size) + 228] = 160
          mem[ceil32(return_data.size) + 260] = 32
          mem[ceil32(return_data.size) + 292] = t
          call address(cd[idx]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args this.address, 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, t
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          mem[0] = ext_call.return_data[0]
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
          idx = idx + 32
          s = !ext_call.return_data[0] + 1
          t = this.address
          continue 
      if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0 != 1:
          if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
              if 0 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], 0
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], 0
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], 0
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], 0
              return 0
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          mem[ceil32(return_data.size) + 96] = 0x128acb0800000000000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = ext_call.return_data[32]
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args ext_call.return_data[32], 1, s, 4295128740, 160, 32, t
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              if !ext_call.return_data[32] + 1 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              return (!ext_call.return_data[32] + 1)
          call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args ext_call.return_data[32], 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, t
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
      else:
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, 1, s, 4295128740, 160, 32, t
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              mem[ceil32(return_data.size) + 96] = 0x2e1a7d4da9059cbb000000000000000000000000000000000000000000000000
              mem[ceil32(return_data.size) + 100] = !ext_call.return_data[32] + 1
              call ????????????????????????????????????????.withdraw(uint256 amount) with:
                   gas gas_remaining wei
                  args (!ext_call.return_data[32] + 1)
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1477697468647261772077657468206661696c6564
              call ext_call.return_data[32] with:
                 value !ext_call.return_data[32] + 1 wei
                   gas gas_remaining wei
              if !ext_call.return_data[32] + 1 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              return (!ext_call.return_data[32] + 1)
          call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args this.address, 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, t
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
          mem[ceil32(return_data.size) + 96] = 0x2e1a7d4da9059cbb000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = !ext_call.return_data[0] + 1
          call ????????????????????????????????????????.withdraw(uint256 amount) with:
               gas gas_remaining wei
              args (!ext_call.return_data[0] + 1)
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x1477697468647261772077657468206661696c6564
          call ext_call.return_data[32] with:
             value !ext_call.return_data[0] + 1 wei
               gas gas_remaining wei
  else:
      if not (call.value < cd[36]) - 1:
          revert with InvalidMsgValue()
      mem[0] = caller
      call ???????????????????????????????????????? with:
         value cd[36] wei
           gas gas_remaining wei
      if not ext_call.success:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      0x2000000000000000000000000000000000000000000000000000000000,
                      0x1357455448206465706f736974206661696c6564
      mem[96] = cd[36]
      idx = cd[100] + 36
      s = cd[36]
      while idx < cd[100] + (32 * ('cd', 100).length) + 4:
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          mem[ceil32(return_data.size) + 96] = 0x128acb0800000000000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = this.address
          if not Mask(1, 255, cd[idx]) == 1:
              mem[ceil32(return_data.size) + 132] = 1
              mem[ceil32(return_data.size) + 164] = s
              mem[ceil32(return_data.size) + 196] = 4295128740
              mem[ceil32(return_data.size) + 228] = 160
              mem[ceil32(return_data.size) + 260] = 32
              mem[ceil32(return_data.size) + 292] = this.address
              call address(cd[idx]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, 1, s, 4295128740, 160, 32, this.address
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              mem[0] = ext_call.return_data[32]
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              idx = idx + 32
              s = !ext_call.return_data[32] + 1
              continue 
          mem[ceil32(return_data.size) + 132] = 0
          mem[ceil32(return_data.size) + 164] = s
          mem[ceil32(return_data.size) + 196] = 0xfffd8963efd1fc6a506488495d951d5263988d25
          mem[ceil32(return_data.size) + 228] = 160
          mem[ceil32(return_data.size) + 260] = 32
          mem[ceil32(return_data.size) + 292] = this.address
          call address(cd[idx]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args this.address, 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, this.address
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          mem[0] = ext_call.return_data[0]
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
          idx = idx + 32
          s = !ext_call.return_data[0] + 1
          continue 
      if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0 != 1:
          if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
              if 0 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], 0
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], 0
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], 0
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], 0
              return 0
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          mem[ceil32(return_data.size) + 96] = 0x128acb0800000000000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = ext_call.return_data[32]
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args ext_call.return_data[32], 1, s, 4295128740, 160, 32, this.address
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              if !ext_call.return_data[32] + 1 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              return (!ext_call.return_data[32] + 1)
          call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args ext_call.return_data[32], 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, this.address
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
      else:
          if 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff < s:
              revert with 3019349968
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, 1, s, 4295128740, 160, 32, this.address
              if not ext_call.success:
                  revert with memory
                    from 0
                     len 32
              if ext_call.return_data[32] < 0x8000000000000000000000000000000000000000000000000000000000000000:
                  revert with 2294869660
              mem[ceil32(return_data.size) + 96] = 0x2e1a7d4da9059cbb000000000000000000000000000000000000000000000000
              mem[ceil32(return_data.size) + 100] = !ext_call.return_data[32] + 1
              call ????????????????????????????????????????.withdraw(uint256 amount) with:
                   gas gas_remaining wei
                  args (!ext_call.return_data[32] + 1)
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1477697468647261772077657468206661696c6564
              call ext_call.return_data[32] with:
                 value !ext_call.return_data[32] + 1 wei
                   gas gas_remaining wei
              if !ext_call.return_data[32] + 1 < cd[68]:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x164d696e2072657475726e206e6f742072656163686564
              if call.value > 0:
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              else:
                  mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                  if not Mask(1, 255, ('cd', 100)[0]) == 1:
                      static call ('cd', 100)[0].token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e30206661696c6564
                  else:
                      static call ('cd', 100)[0].token1() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      0x2000000000000000000000000000000000000000000000000000000000,
                                      0x1167657420746f6b656e31206661696c65
                  ('bool', 'ext_call.success')
                  if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
                      log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[32] + 1
                  else:
                      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
                      if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e31206661696c65
                      else:
                          static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                                  gas gas_remaining wei
                          if not ext_call.success:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          0x2000000000000000000000000000000000000000000000000000000000,
                                          0x1167657420746f6b656e30206661696c6564
                      ('bool', 'ext_call.success')
                      log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[32] + 1
              return (!ext_call.return_data[32] + 1)
          call address(cd[(cd[100] + (32 * ('cd', 100).length) + 4)]).swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
               gas gas_remaining wei
              args this.address, 0, s, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 32, this.address
          if not ext_call.success:
              revert with memory
                from 0
                 len 32
          if ext_call.return_data[0] < 0x8000000000000000000000000000000000000000000000000000000000000000:
              revert with 2294869660
          mem[ceil32(return_data.size) + 96] = 0x2e1a7d4da9059cbb000000000000000000000000000000000000000000000000
          mem[ceil32(return_data.size) + 100] = !ext_call.return_data[0] + 1
          call ????????????????????????????????????????.withdraw(uint256 amount) with:
               gas gas_remaining wei
              args (!ext_call.return_data[0] + 1)
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x1477697468647261772077657468206661696c6564
          call ext_call.return_data[32] with:
             value !ext_call.return_data[0] + 1 wei
               gas gas_remaining wei
  if !ext_call.return_data[0] + 1 < cd[68]:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  0x2000000000000000000000000000000000000000000000000000000000,
                  0x164d696e2072657475726e206e6f742072656163686564
  if call.value > 0:
      if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
          log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[0] + 1
      else:
          mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1167657420746f6b656e31206661696c65
          else:
              static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1167657420746f6b656e30206661696c6564
          ('bool', 'ext_call.success')
          log 0xc21bb43f: 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[0] + 1
  else:
      mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
      if not Mask(1, 255, ('cd', 100)[0]) == 1:
          static call ('cd', 100)[0].token0() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x1167657420746f6b656e30206661696c6564
      else:
          static call ('cd', 100)[0].token1() with:
                  gas gas_remaining wei
          if not ext_call.success:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          0x2000000000000000000000000000000000000000000000000000000000,
                          0x1167657420746f6b656e31206661696c65
      ('bool', 'ext_call.success')
      if Mask(1, 253, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) > 0:
          log 0xc21bb43f: ext_call.return_data[0], 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, tx.origin, mem[96], !ext_call.return_data[0] + 1
      else:
          mem[ceil32(return_data.size) + 96] = 0xdfe1681d21220a7ddca3f43a9059cbb0a5ea466000000000000000000000000
          if not Mask(1, 255, cd[(cd[100] + (32 * ('cd', 100).length) + 4)]) == 1:
              static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token1() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1167657420746f6b656e31206661696c65
          else:
              static call cd[(cd[100] + (32 * ('cd', 100).length) + 4)].token0() with:
                      gas gas_remaining wei
              if not ext_call.success:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              0x2000000000000000000000000000000000000000000000000000000000,
                              0x1167657420746f6b656e30206661696c6564
          ('bool', 'ext_call.success')
          log 0xc21bb43f: ext_call.return_data[0], ext_call.return_data[0], tx.origin, mem[96], !ext_call.return_data[0] + 1
  return (!ext_call.return_data[0] + 1)

def unknown12a0ddc7() payable: 
  require calldata.size - 4 >=′ 224
  require calldata.size - 36 >=′ 160
  require cd[196] <= LOCK8605463013()
  require calldata.size + -cd[196] - 4 >=′ 320
  log 0x6c772439: cd[4]
  require calldata.size - 36 >=′ 160
  require cd[132] == bool(cd[132])
  require cd[164] == bool(cd[164])
  if not -cd[36]:
      revert with 2272534323
  if not cd[132]:
      if cd[164]:
          require ('cd', 196)[2] == address(('cd', 196)[2])
          if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with InvalidToToken()
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args caller
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  else:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                          else:
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          else:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
      else:
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args caller
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      require ('cd', 196)[0] == address(('cd', 196)[0])
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if ext_call.return_data[18 len 14]:
                  else:
                      if ext_call.return_data[18 len 14]:
                          if ext_call.return_data[50 len 14]:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if not address(('cd', 196)[16]):
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if ext_call.return_data[50 len 14]:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                          mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              if chainid == 1:
                                  mem[ceil32(return_data.size) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1206 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1206) >> 255) + 27, call.data[cd[196] + 260], uint255(_1206)) # precompiled
                          else:
                              mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1171 = mem[ceil32(return_data.size) + 576]
                              if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 512] = (bool(_1171) >> 255) + 27
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1171) >> 255) + 27, call.data[cd[196] + 260], uint255(_1171)) # precompiled
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1210 = mem[ceil32(return_data.size) + 576]
                              if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1210) >> 255) + 27, call.data[cd[196] + 260], uint255(_1210)) # precompiled
                          else:
                              if chainid == 1:
                                  mem[ceil32(return_data.size) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1285 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1285) >> 255) + 27, call.data[cd[196] + 260], uint255(_1285)) # precompiled
                  else:
                      if ext_call.return_data[50 len 14]:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1214 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1214) >> 255) + 27, call.data[cd[196] + 260], uint255(_1214)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[ceil32(return_data.size) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1289 = mem[ceil32(return_data.size) + 576]
                                      if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1289) >> 255) + 27, call.data[cd[196] + 260], uint255(_1289)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1293 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1293) >> 255) + 27, call.data[cd[196] + 260], uint255(_1293)) # precompiled
  else:
      if cd[36] != call.value:
          require ('cd', 196)[1] == address(('cd', 196)[1])
          if address(('cd', 196)[1]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with 2272534323
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if cd[164]:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      else:
              else:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args caller
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          static call address(ext_call.return_data[0]).getReserves() with:
                                  gas gas_remaining wei
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args caller
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
      else:
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args caller
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args caller
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if ext_call.return_data[18 len 14]:
                      else:
                          if ext_call.return_data[18 len 14]:
                              if ext_call.return_data[50 len 14]:
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if not address(('cd', 196)[16]):
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if not ext_call.return_data[50 len 14]:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                      if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                          revert with 0, 17
                                      if not ext_call.return_data[18 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                                  else:
                                      if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                          revert with 0, 17
                                      if not ext_call.return_data[50 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1244 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1244) >> 255) + 27, call.data[cd[196] + 260], uint255(_1244)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[ceil32(return_data.size) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1341 = mem[ceil32(return_data.size) + 576]
                                      if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1341) >> 255) + 27, call.data[cd[196] + 260], uint255(_1341)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1345 = mem[ceil32(return_data.size) + 576]
                                  if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1345) >> 255) + 27, call.data[cd[196] + 260], uint255(_1345)) # precompiled
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[ceil32(return_data.size) + 288 len 288] = call.data[cd[196] + 4 len 288]
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      if chainid == 1:
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      else:
                                          mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                          mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                          mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  else:
                                      mem[ceil32(return_data.size) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[ceil32(return_data.size) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[ceil32(return_data.size) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1349 = mem[ceil32(return_data.size) + 576]
                                      if uint255(mem[ceil32(return_data.size) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[ceil32(return_data.size) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[ceil32(return_data.size) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1349) >> 255) + 27, call.data[cd[196] + 260], uint255(_1349)) # precompiled
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown9989d481() payable: 
  require calldata.size - 4 >=′ 224
  require calldata.size - 36 >=′ 160
  require cd[196] <= LOCK8605463013()
  require calldata.size + -cd[196] - 4 >=′ 320
  if bool(stor4[caller]) != 1:
      revert with 0, 'only priority'
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  log 0x6c772439: cd[4]
  static call caller.unknown534015b3() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 64
  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
  require ext_call.return_data[32] == ext_call.return_data[44 len 20]
  require calldata.size - 36 >=′ 160
  if not bool(ceil32(return_data.size) + 256 <= LOCK8605463013()):
      revert with 0, 65
  require cd[132] == bool(cd[132])
  require cd[164] == bool(cd[164])
  if not -cd[36]:
      revert with 2272534323
  if not cd[132]:
      if cd[164]:
          require ('cd', 196)[2] == address(('cd', 196)[2])
          if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with InvalidToToken()
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args address(ext_call.return_data[32])
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  else:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                          else:
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          else:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
      else:
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args address(ext_call.return_data[32])
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      require ('cd', 196)[0] == address(('cd', 196)[0])
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if ext_call.return_data[18 len 14]:
                  else:
                      if ext_call.return_data[18 len 14]:
                          if ext_call.return_data[50 len 14]:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if not address(('cd', 196)[16]):
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if ext_call.return_data[50 len 14]:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  mem[ceil32(return_data.size) + 256 len 96] = ext_call.return_data[0 len 96]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                          mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              if chainid == 1:
                                  mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1216 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1216) >> 255) + 27, call.data[cd[196] + 260], uint255(_1216)) # precompiled
                          else:
                              mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1181 = mem[(2 * ceil32(return_data.size)) + 576]
                              if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 512] = (bool(_1181) >> 255) + 27
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1181) >> 255) + 27, call.data[cd[196] + 260], uint255(_1181)) # precompiled
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1220 = mem[(2 * ceil32(return_data.size)) + 576]
                              if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1220) >> 255) + 27, call.data[cd[196] + 260], uint255(_1220)) # precompiled
                          else:
                              if chainid == 1:
                                  mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1295 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1295) >> 255) + 27, call.data[cd[196] + 260], uint255(_1295)) # precompiled
                  else:
                      if ext_call.return_data[50 len 14]:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1224 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1224) >> 255) + 27, call.data[cd[196] + 260], uint255(_1224)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1299 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1299) >> 255) + 27, call.data[cd[196] + 260], uint255(_1299)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1303 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1303) >> 255) + 27, call.data[cd[196] + 260], uint255(_1303)) # precompiled
  else:
      if cd[36] != call.value:
          require ('cd', 196)[1] == address(('cd', 196)[1])
          if address(('cd', 196)[1]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with 2272534323
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if cd[164]:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      else:
              else:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(ext_call.return_data[32])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          static call address(ext_call.return_data[0]).getReserves() with:
                                  gas gas_remaining wei
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(ext_call.return_data[32])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
      else:
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(ext_call.return_data[32])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(ext_call.return_data[32])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if ext_call.return_data[18 len 14]:
                      else:
                          if ext_call.return_data[18 len 14]:
                              if ext_call.return_data[50 len 14]:
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * cd[36] / cd[36] and cd[36]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if not address(('cd', 196)[16]):
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                              else:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if not ext_call.return_data[50 len 14]:
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                      if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                          revert with 0, 17
                                      if not ext_call.return_data[18 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                                  else:
                                      if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                          revert with 0, 17
                                      if not ext_call.return_data[50 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      mem[ceil32(return_data.size) + 256 len 96] = ext_call.return_data[0 len 96]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] <= -1:
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1254 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1254) >> 255) + 27, call.data[cd[196] + 260], uint255(_1254)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1351 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1351) >> 255) + 27, call.data[cd[196] + 260], uint255(_1351)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1355 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1355) >> 255) + 27, call.data[cd[196] + 260], uint255(_1355)) # precompiled
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * cd[36] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * cd[36] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * cd[36] / cd[36] and cd[36]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * cd[36] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * cd[36] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ('cd', 196)[4] * cd[36] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      if chainid == 1:
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      else:
                                          mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                          mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                          mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1359 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1359) >> 255) + 27, call.data[cd[196] + 260], uint255(_1359)) # precompiled
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknownb07482d2() payable: 
  require calldata.size - 4 >=′ 224
  require cd[4] == address(cd[4])
  require calldata.size - 36 >=′ 160
  require cd[132] == bool(cd[132])
  require cd[164] == bool(cd[164])
  require cd[196] <= LOCK8605463013()
  require calldata.size + -cd[196] - 4 >=′ 320
  if not stor1 - 2:
      revert with 0, 'ReentrancyGuard: reentrant call'
  stor1 = 2
  require ('cd', 196)[1] == address(('cd', 196)[1])
  if not address(('cd', 196)[1]) - 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee:
      revert with 0, 'Invalid source token'
  require ('cd', 196)[1] == address(('cd', 196)[1])
  static call address(('cd', 196)[1]).balanceOf(address account) with:
          gas gas_remaining wei
         args this.address
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >=′ 32
  if not -ext_call.return_data[0]:
      revert with 2272534323
  if not cd[132]:
      if cd[164]:
          require ('cd', 196)[2] == address(('cd', 196)[2])
          if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with InvalidToToken()
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args address(cd[4])
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  else:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                          else:
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          require ('cd', 196)[0] == address(('cd', 196)[0])
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                          else:
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                          else:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
      else:
          if cd[100] < block.timestamp:
              revert with 724726077
          if not cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              static call address(('cd', 196)[2]).balanceOf(address account) with:
                      gas gas_remaining wei
                     args address(cd[4])
              if not ext_call.success:
                  revert with ext_call.return_data[0 len return_data.size]
              require return_data.size >=′ 32
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[16]):
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      require ('cd', 196)[0] == address(('cd', 196)[0])
                  else:
                      if not ext_call.return_data[50 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
              else:
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if ext_call.return_data[18 len 14]:
                  else:
                      if ext_call.return_data[18 len 14]:
                          if ext_call.return_data[50 len 14]:
          else:
              if ('cd', 196)[6] < block.timestamp:
                  revert with 0, 2
              if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                  revert with 0, 17
              if not ('cd', 196)[3]:
                  revert with 0, 18
              require ('cd', 196)[1] == address(('cd', 196)[1])
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if not address(('cd', 196)[16]):
                  static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                          gas gas_remaining wei
                         args address(('cd', 196)[1]), address(('cd', 196)[2])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).token0() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  static call address(ext_call.return_data[0]).getReserves() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if ext_call.return_data[50 len 14]:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                          else:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
              else:
                  static call address(('cd', 196)[16]).getReserves() with:
                          gas gas_remaining wei
                  mem[ceil32(return_data.size) + 256 len 96] = ext_call.return_data[0 len 96]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 96
                  require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                  require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                  require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                  if not ext_call.return_data[18 len 14]:
                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                          mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              if chainid == 1:
                                  mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1210 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1210) >> 255) + 27, call.data[cd[196] + 260], uint255(_1210)) # precompiled
                          else:
                              mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1175 = mem[(2 * ceil32(return_data.size)) + 576]
                              if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 512] = (bool(_1175) >> 255) + 27
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1175) >> 255) + 27, call.data[cd[196] + 260], uint255(_1175)) # precompiled
                      else:
                          log PriceProtected(
                                uint256 oldPrice=-1,
                                uint256 newPrice=-1)
                          mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                          if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                              mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                              mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                              require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                              mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                              mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              _1214 = mem[(2 * ceil32(return_data.size)) + 576]
                              if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                  mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                  signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1214) >> 255) + 27, call.data[cd[196] + 260], uint255(_1214)) # precompiled
                          else:
                              if chainid == 1:
                                  mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1289 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1289) >> 255) + 27, call.data[cd[196] + 260], uint255(_1289)) # precompiled
                  else:
                      if ext_call.return_data[50 len 14]:
                          if -(uint16(('cd', 196)[16]) >> 240) + 1:
                              if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[18 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                  revert with 0, 17
                              if not ext_call.return_data[50 len 14]:
                                  revert with 0, 18
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                        uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1218 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1218) >> 255) + 27, call.data[cd[196] + 260], uint255(_1218)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1293 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1293) >> 255) + 27, call.data[cd[196] + 260], uint255(_1293)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1297 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1297) >> 255) + 27, call.data[cd[196] + 260], uint255(_1297)) # precompiled
  else:
      if ext_call.return_data[0] != call.value:
          require ('cd', 196)[1] == address(('cd', 196)[1])
          if address(('cd', 196)[1]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
              revert with 2272534323
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if cd[164]:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      else:
              else:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(cd[4])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                      else:
                          if ext_call.return_data[50 len 14]:
                              if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          static call address(ext_call.return_data[0]).getReserves() with:
                                  gas gas_remaining wei
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(cd[4])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
      else:
          if cd[164]:
              require ('cd', 196)[2] == address(('cd', 196)[2])
              if address(('cd', 196)[2]) != 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c:
                  revert with InvalidToToken()
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(cd[4])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                          if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      if ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                              else:
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if not ext_call.return_data[50 len 14]:
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if not -(uint16(('cd', 196)[16]) >> 240) + 1:
                              else:
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
          else:
              if cd[100] < block.timestamp:
                  revert with 724726077
              if not cd[164]:
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  static call address(('cd', 196)[2]).balanceOf(address account) with:
                          gas gas_remaining wei
                         args address(cd[4])
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if address(('cd', 196)[16]):
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                              else:
                      else:
                          if not ext_call.return_data[50 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                                  if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                  else:
                              else:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if ext_call.return_data[18 len 14]:
                      else:
                          if ext_call.return_data[18 len 14]:
                              if ext_call.return_data[50 len 14]:
              else:
                  if ('cd', 196)[6] < block.timestamp:
                      revert with 0, 2
                  if ('cd', 196)[4] != ('cd', 196)[4] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                      revert with 0, 17
                  if not ('cd', 196)[3]:
                      revert with 0, 18
                  require ('cd', 196)[1] == address(('cd', 196)[1])
                  require ('cd', 196)[2] == address(('cd', 196)[2])
                  if not address(('cd', 196)[16]):
                      static call 0x5c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f.getPair(address , address ) with:
                              gas gas_remaining wei
                             args address(('cd', 196)[1]), address(('cd', 196)[2])
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).token0() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      static call address(ext_call.return_data[0]).getReserves() with:
                              gas gas_remaining wei
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[12 len 20] - address(('cd', 196)[2]):
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if ext_call.return_data[50 len 14]:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                              else:
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                                      if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  else:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                      else:
                          if not ext_call.return_data[18 len 14]:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                          else:
                              if not ext_call.return_data[50 len 14]:
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                      log PriceProtected(
                                            uint256 oldPrice=-1,
                                            uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              else:
                                  if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                      if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                          revert with 0, 17
                                      if not ext_call.return_data[18 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                                  else:
                                      if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                          revert with 0, 17
                                      if not ext_call.return_data[50 len 14]:
                                          revert with 0, 18
                                      if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                          log PriceProtected(
                                                uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                                uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                  else:
                      static call address(('cd', 196)[16]).getReserves() with:
                              gas gas_remaining wei
                      mem[ceil32(return_data.size) + 256 len 96] = ext_call.return_data[0 len 96]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 96
                      require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                      require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                      require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                      if not ext_call.return_data[18 len 14]:
                          if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] <= -1:
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if this.address != 0x3b3ae790df4f312e745d270119c6052904fb6790:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1248 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1248) >> 255) + 27, call.data[cd[196] + 260], uint255(_1248)) # precompiled
                              else:
                                  if chainid == 1:
                                      mem[(2 * ceil32(return_data.size)) + 290] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      if uint255(call.data[cd[196] + 100]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 288] = sha3(6401, 0x568575351b1514757989de9c786c66097e2ae26e38a5fd1b885ac2dd02b8b0bc, sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 320 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(call.data[cd[196] + 100]) >> 255) + 27, call.data[cd[196] + 68], uint255(call.data[cd[196] + 100])) # precompiled
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1345 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1345) >> 255) + 27, call.data[cd[196] + 260], uint255(_1345)) # precompiled
                          else:
                              log PriceProtected(
                                    uint256 oldPrice=-1,
                                    uint256 newPrice=-1)
                              mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                  if chainid == 1:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                  mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                  require ('cd', 196)[0] == address(('cd', 196)[0])
                                  require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                  require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                  require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                  mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  _1349 = mem[(2 * ceil32(return_data.size)) + 576]
                                  if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                      mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                      signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1349) >> 255) + 27, call.data[cd[196] + 260], uint255(_1349)) # precompiled
                      else:
                          if ext_call.return_data[50 len 14]:
                              if -(uint16(('cd', 196)[16]) >> 240) + 1:
                                  if ext_call.return_data[50 len 14] != ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[18 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[50 len 14] * ext_call.return_data[0] / ext_call.return_data[18 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[0]))
                              else:
                                  if ext_call.return_data[18 len 14] != ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0]:
                                      revert with 0, 17
                                  if not ext_call.return_data[50 len 14]:
                                      revert with 0, 18
                                  if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14]:
                                      log PriceProtected(
                                            uint256 oldPrice=ext_call.return_data[18 len 14] * ext_call.return_data[0] / ext_call.return_data[50 len 14],
                                            uint256 newPrice=Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / Mask(112, 0, ext_call.return_data[32]))
                              if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                              require ('cd', 196)[0] == address(('cd', 196)[0])
                          else:
                              if ('cd', 196)[4] * ext_call.return_data[0] / ('cd', 196)[3] > -1:
                                  log PriceProtected(
                                        uint256 oldPrice=-1,
                                        uint256 newPrice=-1)
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                              else:
                                  mem[(2 * ceil32(return_data.size)) + 288 len 288] = call.data[cd[196] + 4 len 288]
                                  if 0x3b3ae790df4f312e745d270119c6052904fb6790 == this.address:
                                      if chainid == 1:
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      else:
                                          mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                          require ('cd', 196)[0] == address(('cd', 196)[0])
                                          require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                          require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                          require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                          mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                          mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                  else:
                                      mem[(2 * ceil32(return_data.size)) + 450] = sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address)
                                      mem[(2 * ceil32(return_data.size)) + 482] = sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288])
                                      require ('cd', 196)[0] == address(('cd', 196)[0])
                                      require ('cd', 196)[8] <′ calldata.size + -cd[196] - 35
                                      require cd[(cd[196] + ('cd', 196)[8] + 4)] <= LOCK8605463013()
                                      require cd[196] + ('cd', 196)[8] + 36 <=′ calldata.size - cd[(cd[196] + ('cd', 196)[8] + 4)]
                                      mem[(2 * ceil32(return_data.size)) + 480 len cd[(cd[196] + ('cd', 196)[8] + 4)]] = call.data[cd[196] + ('cd', 196)[8] + 36 len cd[(cd[196] + ('cd', 196)[8] + 4)]]
                                      mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 480] = 0
                                      _1353 = mem[(2 * ceil32(return_data.size)) + 576]
                                      if uint255(mem[(2 * ceil32(return_data.size)) + 576]) < 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1:
                                          mem[(2 * ceil32(return_data.size)) + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + 480] = sha3(6401, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, 0x9569cad29571f225e7f2c73ecd677d78be383da74efd13f4af2bade05dc1a8de, 0xe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b3, chainid, this.address), sha3(0x5d068ce469dcf41137bcb6c3e1894e076ad915392f28fda19ba41601d33c32a6, call.data[cd[196] + 4 len 288]))
                                          signer = erecover(Mask(8 * -ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)]) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 32, 0, 0), mem[(2 * ceil32(return_data.size)) + cd[(cd[196] + ('cd', 196)[8] + 4)] + 512 len -cd[(cd[196] + ('cd', 196)[8] + 4)] + ceil32(cd[(cd[196] + ('cd', 196)[8] + 4)])], (bool(_1353) >> 255) + 27, call.data[cd[196] + 260], uint255(_1353)) # precompiled
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)


