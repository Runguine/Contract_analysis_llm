# Palkeoramix decompiler. 

def storage:
  stor0 is address at storage 0
  stor0 is uint256 at storage 0
  stor1 is address at storage 1

def destroy(): # not payable
  require caller == uint256(stor0)
  selfdestruct(address(stor0))

def _fallback(?) payable: # default function
  if calldata.size < 4:
      require not calldata.size
      log Received(
            address =caller,
            uint256 =call.value)
      stop
  if 179526576 == uint32(call.func_hash) >> 224:
      require calldata.size - 4 >=′ 32
      require cd[4] <= LOCK8605463013()
      require cd[4] + 35 <′ calldata.size
      if ('cd', 4).length > LOCK8605463013():
          revert with 0, 65
      if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > LOCK8605463013():
          revert with 0, 65
      mem[128] = ('cd', 4).length
      require cd[4] + ('cd', 4).length + 36 <= calldata.size
      mem[160 len ('cd', 4).length] = call.data[cd[4] + 36 len ('cd', 4).length]
      mem[('cd', 4).length + 160] = 0
      if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != caller:
          require caller == uint256(stor0)
      mem[ceil32(ceil32(('cd', 4).length)) + 133] = this.address
      static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
      mem[ceil32(ceil32(('cd', 4).length)) + 129] = ext_call.return_data[0]
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      if -(uint8(mem[200]) >> 248) + 3:
          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
  else:
      if uniswapV2Call(address sender, uint256 amount0, uint256 amount1, bytes data) == uint32(call.func_hash) >> 224:
          require not call.value
          require calldata.size - 4 >=′ 128
          require cd[4] == address(cd[4])
          require cd[100] <= LOCK8605463013()
          require cd[100] + 35 <′ calldata.size
          if ('cd', 100).length > LOCK8605463013():
              revert with 0, 65
          if ceil32(ceil32(('cd', 100).length)) + 129 < 128 or ceil32(ceil32(('cd', 100).length)) + 129 > LOCK8605463013():
              revert with 0, 65
          require cd[100] + ('cd', 100).length + 36 <= calldata.size
          mem[160 len ('cd', 100).length] = call.data[cd[100] + 36 len ('cd', 100).length]
          mem[('cd', 100).length + 160] = 0
          if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
              mem[128] = ('cd', 100).length - 96
              if not cd[36]:
                  if this.address == address(('cd', 100).length[3]):
                      if ('cd', 100).length - 96 <= 106:
                          if ('cd', 100).length - 96 <= 106:
                              stop
                  else:
                      if not cd[36]:
                          static call caller.token1() with:
                                  gas gas_remaining wei
                          mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >=′ 32
                          require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[68]
                          call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                               gas gas_remaining wei
                              args ('cd', 100).length[3], cd[68]
                          require ext_call.success
                          if ('cd', 100).length - 96 <= 106:
                      else:
                          static call caller.token0() with:
                                  gas gas_remaining wei
                          mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >=′ 32
                          require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[68]
                          call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                               gas gas_remaining wei
                              args ('cd', 100).length[3], cd[68]
                          require ext_call.success
                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                              if ('cd', 100).length - 96 <= 106:
              else:
                  if this.address == address(('cd', 100).length[3]):
                      if ('cd', 100).length - 96 <= 106:
                          if ('cd', 100).length - 96 <= 106:
                              stop
                  else:
                      if not cd[36]:
                          static call caller.token1() with:
                                  gas gas_remaining wei
                          mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >=′ 32
                          require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[36]
                          call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                               gas gas_remaining wei
                              args ('cd', 100).length[3], cd[36]
                          require ext_call.success
                          if ('cd', 100).length - 96 <= 106:
                      else:
                          static call caller.token0() with:
                                  gas gas_remaining wei
                          mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                          if not ext_call.success:
                              revert with ext_call.return_data[0 len return_data.size]
                          require return_data.size >=′ 32
                          require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                          mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[36]
                          call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                               gas gas_remaining wei
                              args ('cd', 100).length[3], cd[36]
                          require ext_call.success
                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                              if ('cd', 100).length - 96 <= 106:
          else:
              require tx.origin == uint256(stor0)
              mem[128] = ('cd', 100).length - 96
              if not cd[36]:
                  if this.address == address(('cd', 100).length[3]):
                      if ('cd', 100).length - 96 <= 106:
                          if ('cd', 100).length - 96 <= 106:
                              stop
                  else:
                      if not cd[36]:
                          static call caller.token1() with:
                                  gas gas_remaining wei
                      else:
                          static call caller.token0() with:
                                  gas gas_remaining wei
                      mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[68]
                      call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args ('cd', 100).length[3], cd[68]
                      require ext_call.success
              else:
                  if this.address == address(('cd', 100).length[3]):
                      if ('cd', 100).length - 96 <= 106:
                          if ('cd', 100).length - 96 <= 106:
                              stop
                  else:
                      if not cd[36]:
                          static call caller.token1() with:
                                  gas gas_remaining wei
                      else:
                          static call caller.token0() with:
                                  gas gas_remaining wei
                      mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 129] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 133] = ('cd', 100).length[3]
                      mem[ceil32(ceil32(('cd', 100).length)) + ceil32(return_data.size) + 165] = cd[36]
                      call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args ('cd', 100).length[3], cd[36]
                      require ext_call.success
      else:
          if 598122101 == uint32(call.func_hash) >> 224:
              require not call.value
              require calldata.size - 4 >=′ 96
              require cd[68] <= LOCK8605463013()
              require cd[68] + 35 <′ calldata.size
              require ('cd', 68).length <= LOCK8605463013()
              require cd[68] + ('cd', 68).length + 36 <= calldata.size
              if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                  mem[160 len ('cd', 68).length] = call.data[cd[68] + 36 len ('cd', 68).length]
                  mem[('cd', 68).length + 160] = 0
                  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                      if ('cd', 68).length <= 106:
                          if ('cd', 68).length <= 106:
                              stop
                          if -(uint8(mem[200]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  else:
                      require tx.origin == uint256(stor0)
                      if ('cd', 68).length <= 106:
                          if ('cd', 68).length <= 106:
                              stop
              else:
                  require tx.origin == uint256(stor0)
                  mem[160 len ('cd', 68).length] = call.data[cd[68] + 36 len ('cd', 68).length]
                  mem[('cd', 68).length + 160] = 0
                  if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != tx.origin:
                      require tx.origin == uint256(stor0)
                  if ('cd', 68).length <= 106:
                      if ('cd', 68).length <= 106:
                          stop
          else:
              if 778649833 == uint32(call.func_hash) >> 224:
                  require calldata.size - 4 >=′ 32
                  require cd[4] <= LOCK8605463013()
                  require cd[4] + 35 <′ calldata.size
                  require ('cd', 4).length <= LOCK8605463013()
                  require cd[4] + ('cd', 4).length + 36 <= calldata.size
                  if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != caller:
                      require caller == uint256(stor0)
              else:
                  if destroy() == uint32(call.func_hash) >> 224:
                      require not call.value
                      require caller == uint256(stor0)
                      selfdestruct(address(stor0))
                  if uint32(call.func_hash) >> 224 != pancakeCall(address sender, uint256 _param2, uint256 _param3, bytes data):
                      if swapCallback(uint256 delRisky, uint256 delStable, bytes data) == uint32(call.func_hash) >> 224:
                          require not call.value
                          require calldata.size - 4 >=′ 96
                          require cd[68] <= LOCK8605463013()
                          require cd[68] + 35 <′ calldata.size
                          if ('cd', 68).length > LOCK8605463013():
                              revert with 0, 65
                          if ceil32(ceil32(('cd', 68).length)) + 129 < 128 or ceil32(ceil32(('cd', 68).length)) + 129 > LOCK8605463013():
                              revert with 0, 65
                          require cd[68] + ('cd', 68).length + 36 <= calldata.size
                          mem[160 len ('cd', 68).length] = call.data[cd[68] + 36 len ('cd', 68).length]
                          mem[('cd', 68).length + 160] = 0
                          if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                              require address(mem[180]) >> 96 == caller
                              if ('cd', 68).length <= 106:
                                  if ('cd', 68).length <= 106:
                                      stop
                          else:
                              require tx.origin == uint256(stor0)
                              require address(mem[180]) >> 96 == caller
                              if not (72 and mem[200] % unknown01000000() >> 232) - 72:
                                  if ('cd', 68).length <= 106:
                                      if ('cd', 68).length <= 106:
                                          stop
                              else:
                                  if ('cd', 68).length <= 106:
                                      if ('cd', 68).length <= 106:
                                          stop
                                      if not -(uint8(mem[200]) >> 248) + 3:
                      else:
                          if 3869950532 == uint32(call.func_hash) >> 224:
                              require not call.value
                              require calldata.size - 4 >=′ 32
                              require cd[4] == address(cd[4])
                              require caller == uint256(stor0)
                              stor1 = address(cd[4])
                              stop
                          if receiveFlashLoan(address[] _param1, uint256[] _amounts, uint256[] _fees, bytes _data) == uint32(call.func_hash) >> 224:
                              require not call.value
                              require calldata.size - 4 >=′ 128
                              require cd[4] <= LOCK8605463013()
                              require cd[4] + 35 <′ calldata.size
                              if ('cd', 4).length > LOCK8605463013():
                                  revert with 0, 65
                              if ceil32(32 * ('cd', 4).length) + 129 < 128 or ceil32(32 * ('cd', 4).length) + 129 > LOCK8605463013():
                                  revert with 0, 65
                              require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
                          else:
                              if uint32(call.func_hash) >> 224 != uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data):
                                  require withdrawWETH(uint256 amountMinimum) == uint32(call.func_hash) >> 224
                                  require not call.value
                                  require calldata.size - 4 >=′ 32
                                  if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != tx.origin:
                                      require tx.origin == uint256(stor0)
                                  require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
                                  call ????????????????????????????????????????.withdraw(uint256 amount) with:
                                       gas gas_remaining wei
                                      args cd[4]
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  stop
                              require not call.value
                              require calldata.size - 4 >=′ 96
                              require cd[68] <= LOCK8605463013()
                              require cd[68] + 35 <′ calldata.size
                              if ('cd', 68).length > LOCK8605463013():
                                  revert with 0, 65
                              if ceil32(ceil32(('cd', 68).length)) + 129 < 128 or ceil32(ceil32(('cd', 68).length)) + 129 > LOCK8605463013():
                                  revert with 0, 65
                              require cd[68] + ('cd', 68).length + 36 <= calldata.size
                              mem[160 len ('cd', 68).length] = call.data[cd[68] + 36 len ('cd', 68).length]
                              mem[('cd', 68).length + 160] = 0
                              if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != tx.origin:
                                  require tx.origin == uint256(stor0)
                                  if not (72 and mem[200] % unknown01000000() >> 232) - 72:
                              if ('cd', 68).length <= 106:
                                  if ('cd', 68).length <= 106:
                                      stop
                  else:
                      require not call.value
                      require calldata.size - 4 >=′ 128
                      require cd[4] == address(cd[4])
                      require cd[100] <= LOCK8605463013()
                      require cd[100] + 35 <′ calldata.size
                      require ('cd', 100).length <= LOCK8605463013()
                      require cd[100] + ('cd', 100).length + 36 <= calldata.size
                      if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                          mem[160 len ('cd', 100).length] = call.data[cd[100] + 36 len ('cd', 100).length]
                          mem[('cd', 100).length + 160] = 0
                          if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                              if not cd[36]:
                                  if this.address == address(('cd', 100).length[3]):
                                      if (72 and mem[200] % unknown01000000() >> 232) - 72:
                                          if ('cd', 100).length - 96 <= 106:
                                              if ('cd', 100).length - 96 <= 106:
                                                  stop
                                      else:
                                          if ('cd', 100).length - 96 <= 106:
                                              if ('cd', 100).length - 96 <= 106:
                                                  stop
                                              if not -(uint8(mem[200]) >> 248) + 3:
                                  else:
                                      if not cd[36]:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _235 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _235.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                      else:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _236 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _236.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                      require ext_call.success
                              else:
                                  if this.address == address(('cd', 100).length[3]):
                                      if (72 and mem[200] % unknown01000000() >> 232) - 72:
                                          if ('cd', 100).length - 96 <= 106:
                                              if ('cd', 100).length - 96 <= 106:
                                                  stop
                                      else:
                                          if ('cd', 100).length - 96 <= 106:
                                              if ('cd', 100).length - 96 <= 106:
                                                  stop
                                              if not -(uint8(mem[200]) >> 248) + 3:
                                  else:
                                      if not cd[36]:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _237 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _237.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                      else:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _238 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _238.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                      require ext_call.success
                          else:
                              require tx.origin == uint256(stor0)
                              if not cd[36]:
                                  if this.address == address(('cd', 100).length[3]):
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if cd[36]:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _271 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _271.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                          require ext_call.success
                                      else:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _270 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _270.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                          require ext_call.success
                                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                              else:
                                  if this.address == address(('cd', 100).length[3]):
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if cd[36]:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _273 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _273.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                          require ext_call.success
                                      else:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _272 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _272.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                          require ext_call.success
                                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                      else:
                          require tx.origin == uint256(stor0)
                          mem[160 len ('cd', 100).length] = call.data[cd[100] + 36 len ('cd', 100).length]
                          mem[('cd', 100).length + 160] = 0
                          if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
                              if not cd[36]:
                                  if this.address == address(('cd', 100).length[3]):
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if cd[36]:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _275 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _275.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                          require ext_call.success
                                      else:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _274 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _274.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                          require ext_call.success
                                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                              else:
                                  if this.address == address(('cd', 100).length[3]):
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if cd[36]:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _277 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _277.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                          require ext_call.success
                                      else:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _276 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _276.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                          require ext_call.success
                                          if (72 and mem[200] % unknown01000000() >> 232) - 72:
                          else:
                              require tx.origin == uint256(stor0)
                              if not cd[36]:
                                  if this.address == address(('cd', 100).length[3]):
                                      if not (72 and mem[200] % unknown01000000() >> 232) - 72:
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if not cd[36]:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _306 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _306.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                      else:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _307 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[68]
                                          call _307.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[68]
                                      require ext_call.success
                              else:
                                  if this.address == address(('cd', 100).length[3]):
                                      if not (72 and mem[200] % unknown01000000() >> 232) - 72:
                                      if ('cd', 100).length - 96 <= 106:
                                          if ('cd', 100).length - 96 <= 106:
                                              stop
                                  else:
                                      if not cd[36]:
                                          static call caller.token1() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _308 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _308.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                      else:
                                          static call caller.token0() with:
                                                  gas gas_remaining wei
                                          mem[ceil32(('cd', 100).length) + 160] = ext_call.return_data[0]
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >=′ 32
                                          _309 = Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          require Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 32, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)] == Mask(8 * -ceil32(('cd', 100).length) + ('cd', 100).length + 20, 0, 0), mem[('cd', 100).length + 192 len -('cd', 100).length + ceil32(('cd', 100).length)]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 160] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 164] = ('cd', 100).length[3]
                                          mem[ceil32(('cd', 100).length) + ceil32(return_data.size) + 196] = cd[36]
                                          call _309.transfer(address recipient, uint256 amount) with:
                                               gas gas_remaining wei
                                              args ('cd', 100).length[3], cd[36]
                                      require ext_call.success
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknowne6aac244(uint256 _param1): # not payable
  require calldata.size - 4 >=′ 32
  require _param1 == address(_param1)
  require caller == uint256(stor0)
  stor1 = address(_param1)

def withdrawWETH(uint256 amountMinimum): # not payable
  require calldata.size - 4 >=′ 32
  if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != tx.origin:
      require tx.origin == uint256(stor0)
  require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
  call ????????????????????????????????????????.withdraw(uint256 amount) with:
       gas gas_remaining wei
      args amountMinimum
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]

def unknown2e6940e9() payable: 
  require calldata.size - 4 >=′ 32
  require cd[4] <= LOCK8605463013()
  require cd[4] + 35 <′ calldata.size
  require ('cd', 4).length <= LOCK8605463013()
  require cd[4] + ('cd', 4).length + 36 <= calldata.size
  if 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3 != caller:
      require caller == uint256(stor0)
  s = 1
  while Mask(256, -8 * s, address(('cd', 36)[-1]) >> 96) >> 8 * s:
      s = s + 1
      continue 
  static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
          gas gas_remaining wei
         args this.address
  require ext_call.success
  mem[388 len cd[36]] = call.data[68 len cd[36]]
  if s < 5 == 1:
      if not cd[36] % 32:
          call ????????????????????????????????????????.flashLoan(address recipient, address[] tokens, uint256[] amounts, bytes userData) with:
               gas gas_remaining wei
              args this.address, 128, 192, 256, 1, Mask(256, -96, cd[68]) << 96, 1, Mask(256, -96, ('cd', 36)[-1]) << 96, cd[36], call.data[68 len cd[36]]
      else:
          call ????????????????????????????????????????.flashLoan(address recipient, address[] tokens, uint256[] amounts, bytes userData) with:
               gas gas_remaining wei
              args this.address, 128, 192, 256, 1, Mask(256, -96, cd[68]) << 96, 1, Mask(256, -96, ('cd', 36)[-1]) << 96, cd[36], call.data[68 len cd[36]], mem[cd[36] + 388 len -(cd[36] % 32) + 32]
  else:
      if not cd[36] % 32:
          call ????????????????????????????????????????.flashLoan(address recipient, address[] tokens, uint256[] amounts, bytes userData) with:
               gas gas_remaining wei
              args this.address, 128, 192, 256, 1, Mask(256, -96, cd[68]) << 96, 1, 1, cd[36], call.data[68 len cd[36]]
      else:
          call ????????????????????????????????????????.flashLoan(address recipient, address[] tokens, uint256[] amounts, bytes userData) with:
               gas gas_remaining wei
              args this.address, 128, 192, 256, 1, Mask(256, -96, cd[68]) << 96, 1, 1, cd[36], call.data[68 len cd[36]], mem[cd[36] + 388 len -(cd[36] % 32) + 32]
  require ext_call.success
  static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
          gas gas_remaining wei
         args this.address
  if uint8(('cd', 36)[0]) >> 248 < 100:
      require ext_call.return_data[0] >= ext_call.return_data[0] + (2 * 10^6 * block.gasprice) - (gas_remaining * block.gasprice)
  return ext_call.return_data[0], ext_call.return_data[0], -gas_remaining + 2 * 10^6

def unknown0ab35bb0() payable: 
  require calldata.size - 4 >=′ 32
  require cd[4] <= LOCK8605463013()
  require cd[4] + 35 <′ calldata.size
  if ('cd', 4).length > LOCK8605463013():
      revert with 0, 65
  if ceil32(ceil32(('cd', 4).length)) + 97 < 96 or ceil32(ceil32(('cd', 4).length)) + 97 > LOCK8605463013():
      revert with 0, 65
  mem[96] = ('cd', 4).length
  require cd[4] + ('cd', 4).length + 36 <= calldata.size
  mem[128 len ('cd', 4).length] = call.data[cd[4] + 36 len ('cd', 4).length]
  mem[('cd', 4).length + 128] = 0
  if caller == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      mem[ceil32(ceil32(('cd', 4).length)) + 101] = this.address
      static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
      mem[ceil32(ceil32(('cd', 4).length)) + 97] = ext_call.return_data[0]
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      mem[96] = cd[36] - 25
      if -(uint8(mem[168]) >> 248) + 3:
          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
      _17 = mem[148]
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 101] = address(('cd', 36)[0]) >> 96
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 133] = 0
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 165] = address(('cd', 36)[-1]) >> 96
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 229] = 160
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 261] = cd[36] - 25
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 293 len floor32(cd[36] + 6)] = mem[128 len floor32(cd[36] + 6)]
      call address(_17) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
           gas gas_remaining wei
          args Mask(256, -96, ('cd', 36)[0]) << 96, 0, Mask(256, -96, ('cd', 36)[-1]) << 96, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, cd[36] - 25, mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 293 len floor32(cd[36] + 6)]
  else:
      require caller == uint256(stor0)
      mem[ceil32(ceil32(('cd', 4).length)) + 101] = this.address
      static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
      mem[ceil32(ceil32(('cd', 4).length)) + 97] = ext_call.return_data[0]
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      mem[96] = cd[36] - 25
      if -(uint8(mem[168]) >> 248) + 3:
          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
      _22 = mem[148]
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 101] = address(('cd', 36)[0]) >> 96
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 133] = 0
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 165] = address(('cd', 36)[-1]) >> 96
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 229] = 160
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 261] = cd[36] - 25
      mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 293 len floor32(cd[36] + 6)] = mem[128 len floor32(cd[36] + 6)]
      call address(_22) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
           gas gas_remaining wei
          args Mask(256, -96, ('cd', 36)[0]) << 96, 0, Mask(256, -96, ('cd', 36)[-1]) << 96, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, cd[36] - 25, mem[ceil32(ceil32(('cd', 4).length)) + ceil32(return_data.size) + 293 len floor32(cd[36] + 6)]
  require ext_call.success
  if not Mask(64, 96, ('cd', 36)[-2]):
      static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
  else:
      static call Mask(64, 96, ('cd', 36)[-2]) >> 96.token0() with:
              gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
      static call Mask(64, 96, ('cd', 36)[-2]) >> 96.token1() with:
              gas gas_remaining wei
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      require ext_call.return_data[0] == ext_call.return_data[12 len 20]
      static call address(ext_call.return_data[0]).balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      if ext_call.return_data[0] != 995 * ext_call.return_data[0] / 995:
          revert with 0, 17
      s = 1
      while Mask(256, -8 * s, 995 * ext_call.return_data[0] / 1000) >> 8 * s:
          s = s + 1
          continue 
      if s < 5 == 1:
          if ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c == 1:
              call address(('cd', 36)[-2]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (995 * ext_call.return_data[0] / 1000) - 512, 4295128740, 160, 83, Mask(160, 96, ext_call.return_data[0]) >> 96, Mask(64, 96, ('cd', 36)[-2]), 0, 0, 0, mem[ceil32(ceil32(('cd', 4).length)) + (6 * ceil32(return_data.size)) + 388 len 1]
          else:
              call address(('cd', 36)[-2]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (995 * ext_call.return_data[0] / 1000) - 512, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 83, Mask(160, 96, ext_call.return_data[0]) >> 96, Mask(64, 96, ('cd', 36)[-2]), 0, 0, 0, mem[ceil32(ceil32(('cd', 4).length)) + (6 * ceil32(return_data.size)) + 388 len 1]
      else:
          if ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c == 1:
              call address(('cd', 36)[-2]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (Mask(256, -8 * s - 4, 995 * ext_call.return_data[0] / 1000) << -8 * s - 4) - 512, 4295128740, 160, 83, Mask(160, 96, ext_call.return_data[0]) >> 96, Mask(64, 96, ('cd', 36)[-2]), 0, 0, 0, mem[ceil32(ceil32(('cd', 4).length)) + (6 * ceil32(return_data.size)) + 388 len 1]
          else:
              call address(('cd', 36)[-2]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, ext_call.return_data[0] < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (Mask(256, -8 * s - 4, 995 * ext_call.return_data[0] / 1000) << -8 * s - 4) - 512, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 83, Mask(160, 96, ext_call.return_data[0]) >> 96, Mask(64, 96, ('cd', 36)[-2]), 0, 0, 0, mem[ceil32(ceil32(('cd', 4).length)) + (6 * ceil32(return_data.size)) + 388 len 1]
      require ext_call.success
      static call 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c.balanceOf(address account) with:
              gas gas_remaining wei
             args this.address
  require return_data.size >=′ 32
  if not Mask(256, -224, ('cd', 36)[0]):
      return ext_call.return_data[0], ext_call.return_data[0], uint32(('cd', 36)[0]) >> 224
  if 0 <= uint32(('cd', 36)[0]) >> 224:
      require ext_call.return_data[0] >= ext_call.return_data[0] + (uint32(('cd', 36)[0]) >> 224 * block.gasprice)
      if ext_call.return_data[0] - 1 > ext_call.return_data[0]:
          revert with 0, 17
      require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
      call ????????????????????????????????????????.withdraw(uint256 amount) with:
           gas gas_remaining wei
          args (ext_call.return_data[0] - 1)
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      if (uint8(('cd', 36)[0]) >> 248) - 255:
          call block.coinbase with:
             value -1 * uint32(('cd', 36)[0]) >> 224 * block.gasprice / uint8(('cd', 36)[0]) >> 248 wei
               gas 2300 wei
      else:
          call block.coinbase with:
             value -1 * uint32(('cd', 36)[0]) >> 224 * block.gasprice / 2 wei
               gas 2300 wei
      call ???????????????????????????????????????? with:
         value eth.balance(this.address) wei
           gas 2300 wei
      return ext_call.return_data[0], ext_call.return_data[0], uint32(('cd', 36)[0]) >> 224
  require ext_call.return_data[0] >= ext_call.return_data[0]
  if ext_call.return_data[0] - 1 > ext_call.return_data[0]:
      revert with 0, 17
  require ext_code.size(0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c)
  call ????????????????????????????????????????.withdraw(uint256 amount) with:
       gas gas_remaining wei
      args (ext_call.return_data[0] - 1)
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  if (uint8(('cd', 36)[0]) >> 248) - 255:
      call block.coinbase with:
         value 0 / uint8(('cd', 36)[0]) >> 248 wei
           gas 2300 wei
  else:
      call block.coinbase with:
           gas 2300 wei
  call ???????????????????????????????????????? with:
     value eth.balance(this.address) wei
       gas 2300 wei
  return ext_call.return_data[0], ext_call.return_data[0], 0

def receiveFlashLoan(address[] _param1, uint256[] _amounts, uint256[] _fees, bytes _data): # not payable
  require calldata.size - 4 >=′ 128
  require _param1 <= LOCK8605463013()
  require _param1 + 35 <′ calldata.size
  if _param1.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(32 * _param1.length) + 97 < 96 or ceil32(32 * _param1.length) + 97 > LOCK8605463013():
      revert with 0, 65
  mem[96] = _param1.length
  require _param1 + (32 * _param1.length) + 36 <= calldata.size
  s = 128
  idx = _param1 + 36
  while idx < _param1 + (32 * _param1.length) + 36:
      require cd[idx] == address(cd[idx])
      mem[s] = cd[idx]
      s = s + 32
      idx = idx + 32
      continue 
  require _amounts <= LOCK8605463013()
  require _amounts + 35 <′ calldata.size
  if _amounts.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(32 * _amounts.length) + 98 < 97 or ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + 98 > LOCK8605463013():
      revert with 0, 65
  mem[ceil32(32 * _param1.length) + 97] = _amounts.length
  require _amounts + (32 * _amounts.length) + 36 <= calldata.size
  idx = _amounts + 36
  s = ceil32(32 * _param1.length) + 129
  while idx < _amounts + (32 * _amounts.length) + 36:
      mem[s] = cd[idx]
      idx = idx + 32
      s = s + 32
      continue 
  require _fees <= LOCK8605463013()
  require _fees + 35 <′ calldata.size
  if _fees.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(32 * _fees.length) + 99 < 98 or ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 99 > LOCK8605463013():
      revert with 0, 65
  mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + 98] = _fees.length
  require _fees + (32 * _fees.length) + 36 <= calldata.size
  idx = _fees + 36
  s = ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + 130
  while idx < _fees + (32 * _fees.length) + 36:
      mem[s] = cd[idx]
      idx = idx + 32
      s = s + 32
      continue 
  require _data <= LOCK8605463013()
  require _data + 35 <′ calldata.size
  if _data.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(ceil32(_data.length)) + 100 < 99 or ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 100 > LOCK8605463013():
      revert with 0, 65
  mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 99] = _data.length
  require _data + _data.length + 36 <= calldata.size
  mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 131 len _data.length] = _data[all]
  mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + _data.length + 131] = 0
  if caller != 0x2f000000000000000000000000ba12222222228d8ba445958a75a0704d566bf2:
      revert with 0, 'RouterProxyV6 receiveFlashLoan: INVALID_SENDER'
  if 0 >= _param1.length:
      revert with 0, 50
  _105 = mem[128]
  if 0 >= _amounts.length:
      revert with 0, 50
  _108 = mem[ceil32(32 * _param1.length) + 129]
  if 0 >= _fees.length:
      revert with 0, 50
  _110 = mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + 130]
  if mem[ceil32(32 * _param1.length) + 129] > mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + 130] + mem[ceil32(32 * _param1.length) + 129]:
      revert with 0, 17
  mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 99] = cd[324] - 41
  s = 1
  while Mask(256, -8 * s, address(('cd', 324)[8]) >> 96) >> 8 * s:
      s = s + 1
      continue 
  if -(uint8(mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 171]) >> 248) + 3:
      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
  if s < 5 == 1:
      _133 = mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 151]
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 100] = 0x128acb0800000000000000000000000000000000000000000000000000000000
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 104] = address(('cd', 324)[9]) >> 96
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 136] = 0
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 168] = address(('cd', 324)[8]) >> 96
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 200] = 0xfffd8963efd1fc6a506488495d951d5263988d25
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 232] = 160
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 264] = cd[324] - 41
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 296 len floor32(cd[324] - 10)] = mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 131 len floor32(cd[324] - 10)]
      call address(_133) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
           gas gas_remaining wei
          args Mask(256, -96, ('cd', 324)[9]) << 96, 0, Mask(256, -96, ('cd', 324)[8]) << 96, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, cd[324] - 41, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 296 len floor32(cd[324] - 10)]
  else:
      _137 = mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 151]
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 100] = 0x128acb0800000000000000000000000000000000000000000000000000000000
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 104] = address(('cd', 324)[9]) >> 96
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 136] = 0
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 168] = 0 << 8 * s - 4
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 200] = 0xfffd8963efd1fc6a506488495d951d5263988d25
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 232] = 160
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 264] = cd[324] - 41
      mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 296 len floor32(cd[324] - 10)] = mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + 131 len floor32(cd[324] - 10)]
      call address(_137) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
           gas gas_remaining wei
          args Mask(256, -96, ('cd', 324)[9]) << 96, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, cd[324] - 41, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + 296 len floor32(cd[324] - 10)]
  require ext_call.success
  s = 1
  while Mask(256, -8 * s, _110 + _108) >> 8 * s:
      s = s + 1
      continue 
  if s < 5 == 1:
      call _105.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args 0x2f000000000000000000000000ba12222222228d8ba445958a75a0704d566bf2, _110 + _108
  else:
      call _105.transfer(address recipient, uint256 amount) with:
           gas gas_remaining wei
          args 0x2f000000000000000000000000ba12222222228d8ba445958a75a0704d566bf2, (Mask(256, -8 * s - 4, _110 + _108) << -8 * s - 4) + 1 << 8 * s - 4
  require ext_call.success
  if Mask(64, 96, ('cd', 324)[7]):
      static call address(_105).balanceOf(address account) with:
              gas gas_remaining wei
             args address(this.address)
      if not ext_call.success:
          revert with ext_call.return_data[0 len return_data.size]
      require return_data.size >=′ 32
      if ext_call.return_data[0] != 995 * ext_call.return_data[0] / 995:
          revert with 0, 17
      s = 1
      while Mask(256, -8 * s, 995 * ext_call.return_data[0] / 1000) >> 8 * s:
          s = s + 1
          continue 
      if s < 5 == 1:
          if _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c == 1:
              call address(('cd', 324)[7]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (995 * ext_call.return_data[0] / 1000) - 512, 4295128740, 160, 83, Mask(160, 96, _105) >> 96, Mask(64, 96, ('cd', 324)[7]), 0, 0, 0, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + ceil32(return_data.size) + 391 len 1]
          else:
              call address(('cd', 324)[7]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (995 * ext_call.return_data[0] / 1000) - 512, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 83, Mask(160, 96, _105) >> 96, Mask(64, 96, ('cd', 324)[7]), 0, 0, 0, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + ceil32(return_data.size) + 391 len 1]
      else:
          if _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c == 1:
              call address(('cd', 324)[7]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (Mask(256, -8 * s - 4, 995 * ext_call.return_data[0] / 1000) << -8 * s - 4) - 512, 4295128740, 160, 83, Mask(160, 96, _105) >> 96, Mask(64, 96, ('cd', 324)[7]), 0, 0, 0, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + ceil32(return_data.size) + 391 len 1]
          else:
              call address(('cd', 324)[7]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                   gas gas_remaining wei
                  args this.address, _105 < 0xfe000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756c, (Mask(256, -8 * s - 4, 995 * ext_call.return_data[0] / 1000) << -8 * s - 4) - 512, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, 83, Mask(160, 96, _105) >> 96, Mask(64, 96, ('cd', 324)[7]), 0, 0, 0, mem[ceil32(32 * _param1.length) + ceil32(32 * _amounts.length) + ceil32(32 * _fees.length) + ceil32(ceil32(_data.length)) + ceil32(return_data.size) + 391 len 1]
      require ext_call.success

def swapCallback(uint256 delRisky, uint256 delStable, bytes data): # not payable
  require calldata.size - 4 >=′ 96
  require data <= LOCK8605463013()
  require data + 35 <′ calldata.size
  if data.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(ceil32(data.length)) + 97 < 96 or ceil32(ceil32(data.length)) + 97 > LOCK8605463013():
      revert with 0, 65
  mem[96] = data.length
  require data + data.length + 36 <= calldata.size
  mem[128 len data.length] = data[all]
  mem[data.length + 128] = 0
  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      require address(mem[148]) >> 96 == caller
      if (72 and mem[168] % unknown01000000() >> 232) - 72:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, delRisky, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, delStable) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _122 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = delStable
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_122) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, delStable, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _138 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_138) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
      else:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, delRisky, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, delStable) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _126 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = delStable
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_126) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, delStable, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _142 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_142) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
  else:
      require tx.origin == uint256(stor0)
      require address(mem[148]) >> 96 == caller
      if (72 and mem[168] % unknown01000000() >> 232) - 72:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, delRisky, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, delStable) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _130 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = delStable
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_130) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, delStable, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _146 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_146) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
      else:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, delRisky, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, delStable) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _134 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = delStable
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_134) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, delStable, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _150 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_150) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success

def uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes data): # not payable
  require calldata.size - 4 >=′ 96
  require data <= LOCK8605463013()
  require data + 35 <′ calldata.size
  if data.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(ceil32(data.length)) + 97 < 96 or ceil32(ceil32(data.length)) + 97 > LOCK8605463013():
      revert with 0, 65
  mem[96] = data.length
  require data + data.length + 36 <= calldata.size
  mem[128 len data.length] = data[all]
  mem[data.length + 128] = 0
  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      if (72 and mem[168] % unknown01000000() >> 232) - 72:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, amount1Delta, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, !amount0Delta + 1) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _120 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = !amount0Delta + 1
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_120) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, !amount0Delta + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _136 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_136) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
      else:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, amount1Delta, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, !amount0Delta + 1) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _124 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = !amount0Delta + 1
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_124) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, !amount0Delta + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _140 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_140) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
  else:
      require tx.origin == uint256(stor0)
      if (72 and mem[168] % unknown01000000() >> 232) - 72:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, amount1Delta, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, !amount0Delta + 1) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _128 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = !amount0Delta + 1
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_128) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, !amount0Delta + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _144 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_144) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
      else:
          if data.length <= 106:
              if data.length > 106:
                  if -(uint8(mem[168]) >> 248) + 3:
                      revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                  call address(mem[148]) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                       gas gas_remaining wei
                      args this.address, 0, amount1Delta, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length, data[all], Mask(8 * ceil32(data.length) - data.length, -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256, this.address) >> -(8 * ceil32(data.length) + -ceil32(ceil32(data.length)) + 27) + 256
                  require ext_call.success
          else:
              mem[139] = data.length - 43
              s = 1
              while Mask(256, -8 * s, !amount0Delta + 1) >> 8 * s:
                  s = s + 1
                  continue 
              if s < 5 == 1:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _132 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = !amount0Delta + 1
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_132) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, !amount0Delta + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success
              else:
                  if data.length > 106:
                      if -(uint8(mem[211]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _148 = mem[191]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = 0
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 43
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)] = mem[171 len floor32(data.length - 12)]
                      call address(_148) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 43, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 12)]
                      require ext_call.success

def pancakeCall(address sender, uint256 _param2, uint256 _param3, bytes data): # not payable
  require calldata.size - 4 >=′ 128
  require sender == sender
  require data <= LOCK8605463013()
  require data + 35 <′ calldata.size
  require data.length <= LOCK8605463013()
  require data + data.length + 36 <= calldata.size
  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      mem[128 len data.length] = data[all]
      mem[data.length + 128] = 0
      if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
          if not _param2:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _53 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _53.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _54 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _54.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                  require ext_call.success
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
          else:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _55 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _55.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _56 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _56.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                  require ext_call.success
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
      else:
          require tx.origin == uint256(stor0)
          if not _param2:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _79 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _79.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _80 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _80.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
          else:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _81 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _81.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _82 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _82.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
  else:
      require tx.origin == uint256(stor0)
      mem[128 len data.length] = data[all]
      mem[data.length + 128] = 0
      if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
          if not _param2:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _83 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _83.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _84 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _84.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
          else:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if not _param2:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _85 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _85.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _86 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _86.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
      else:
          require tx.origin == uint256(stor0)
          if not _param2:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if _param2:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _94 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _94.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _93 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param3
                      call _93.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param3
                      require ext_call.success
                      if not (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
          else:
              if this.address == address(data.length[3]):
                  if data.length - 96 <= 106:
                      if data.length - 96 <= 106:
                          stop
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
              else:
                  if _param2:
                      static call caller.token0() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _96 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _96.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if data.length - 96 <= 106:
                          if data.length - 96 <= 106:
                              stop
                  else:
                      static call caller.token1() with:
                              gas gas_remaining wei
                      mem[ceil32(data.length) + 128] = ext_call.return_data[0]
                      if not ext_call.success:
                          revert with ext_call.return_data[0 len return_data.size]
                      require return_data.size >=′ 32
                      _95 = Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      require Mask(8 * -ceil32(data.length) + data.length + 32, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)] == Mask(8 * -ceil32(data.length) + data.length + 20, 0, 0), mem[data.length + 160 len -data.length + ceil32(data.length)]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                      mem[ceil32(data.length) + ceil32(return_data.size) + 132] = data.length[3]
                      mem[ceil32(data.length) + ceil32(return_data.size) + 164] = _param2
                      call _95.transfer(address recipient, uint256 amount) with:
                           gas gas_remaining wei
                          args data.length[3], _param2
                      require ext_call.success
                      if not (72 and mem[168] % unknown01000000() >> 232) - 72:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                      else:
                          if data.length - 96 <= 106:
                              if data.length - 96 <= 106:
                                  stop
                              if not -(uint8(mem[168]) >> 248) + 3:
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def unknown23a69e75(uint256 _param1, uint256 _param2, array _param3): # not payable
  require calldata.size - 4 >=′ 96
  require _param3 <= LOCK8605463013()
  require _param3 + 35 <′ calldata.size
  require _param3.length <= LOCK8605463013()
  require _param3 + _param3.length + 36 <= calldata.size
  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      mem[128 len _param3.length] = _param3[all]
      mem[_param3.length + 128] = 0
      if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
          if (72 and mem[168] % unknown01000000() >> 232) - 72:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _52 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_52) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _241 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_241) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _273 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_273) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
          else:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _61 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_61) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _245 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_245) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _277 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_277) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
      else:
          require tx.origin == uint256(stor0)
          if (72 and mem[168] % unknown01000000() >> 232) - 72:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _69 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_69) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _249 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_249) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _281 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_281) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
          else:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _79 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_79) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _253 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_253) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _285 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_285) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
  else:
      require tx.origin == uint256(stor0)
      mem[128 len _param3.length] = _param3[all]
      mem[_param3.length + 128] = 0
      if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
          if (72 and mem[168] % unknown01000000() >> 232) - 72:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _73 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_73) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _257 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_257) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _289 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_289) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
          else:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _83 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_83) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _261 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_261) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _293 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_293) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
      else:
          require tx.origin == uint256(stor0)
          if (72 and mem[168] % unknown01000000() >> 232) - 72:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _91 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_91) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _265 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_265) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _297 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_297) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
          else:
              if _param3.length <= 106:
                  if _param3.length > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _97 = mem[148]
                      mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      call address(_97) >> 96 with:
                           gas gas_remaining wei
                          args this.address, 0, _param2, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length, _param3[all], mem[_param3.length + 128 len ceil32(_param3.length) - _param3.length]
                      require ext_call.success
              else:
                  mem[139] = _param3.length - 43
                  s = 1
                  while Mask(256, -8 * s, !_param1 + 1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _269 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = !_param1 + 1
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_269) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, !_param1 + 1, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success
                  else:
                      if _param3.length > 106:
                          if -(uint8(mem[211]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _301 = mem[191]
                          mem[ceil32(_param3.length) + 128] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(_param3.length) + 132] = this.address
                          mem[ceil32(_param3.length) + 164] = 0
                          mem[ceil32(_param3.length) + 196] = 0
                          mem[ceil32(_param3.length) + 228] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(_param3.length) + 260] = 160
                          mem[ceil32(_param3.length) + 292] = _param3.length - 43
                          mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)] = mem[171 len floor32(_param3.length - 12)]
                          call address(_301) >> 96 with:
                               gas gas_remaining wei
                              args this.address, 0, 0, 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, _param3.length - 43, mem[ceil32(_param3.length) + 324 len floor32(_param3.length - 12)]
                          require ext_call.success

def uniswapV2Call(address sender, uint256 amount0, uint256 amount1, bytes data): # not payable
  require calldata.size - 4 >=′ 128
  require sender == sender
  require data <= LOCK8605463013()
  require data + 35 <′ calldata.size
  if data.length > LOCK8605463013():
      revert with 0, 65
  if ceil32(ceil32(data.length)) + 97 < 96 or ceil32(ceil32(data.length)) + 97 > LOCK8605463013():
      revert with 0, 65
  require data + data.length + 36 <= calldata.size
  mem[128 len data.length] = data[all]
  mem[data.length + 128] = 0
  if tx.origin == 0xc2000000000000000000000000fba0014d3a9dbe8a0cda6affd3da7b541a1ec3:
      mem[96] = data.length - 96
      if not amount0:
          if this.address == address(data.length[3]):
              if data.length - 96 > 106:
                  s = 1
                  while Mask(256, -8 * s, amount1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if data.length - 96 <= 106:
                          stop
                  else:
                      if data.length - 96 > 106:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if (72 and mem[168] % unknown01000000() >> 232) - 72:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _104 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_104) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
              else:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _116 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_116) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
          else:
              if not amount0:
                  static call caller.token1() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount1
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount1
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount1) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _246 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_246) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _276 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_276) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
              else:
                  static call caller.token0() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount1
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount1
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount1) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _280 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_280) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _308 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_308) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
      else:
          if this.address == address(data.length[3]):
              if data.length - 96 > 106:
                  s = 1
                  while Mask(256, -8 * s, amount0) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if data.length - 96 <= 106:
                          stop
                  else:
                      if data.length - 96 > 106:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if (72 and mem[168] % unknown01000000() >> 232) - 72:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _108 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_108) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
              else:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _120 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_120) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
          else:
              if not amount0:
                  static call caller.token1() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount0
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount0
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount0) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _256 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_256) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _288 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_288) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
              else:
                  static call caller.token0() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount0
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount0
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount0) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _292 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_292) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _312 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_312) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
  else:
      require tx.origin == uint256(stor0)
      mem[96] = data.length - 96
      if not amount0:
          if this.address == address(data.length[3]):
              if data.length - 96 > 106:
                  s = 1
                  while Mask(256, -8 * s, amount1) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if data.length - 96 <= 106:
                          stop
                  else:
                      if data.length - 96 > 106:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if (72 and mem[168] % unknown01000000() >> 232) - 72:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _128 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_128) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
              else:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _136 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_136) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
          else:
              if not amount0:
                  static call caller.token1() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount1
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount1
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount1) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _320 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_320) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _340 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_340) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
              else:
                  static call caller.token0() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount1
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount1
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount1) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _344 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_344) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _368 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_368) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
      else:
          if this.address == address(data.length[3]):
              if data.length - 96 > 106:
                  s = 1
                  while Mask(256, -8 * s, amount0) >> 8 * s:
                      s = s + 1
                      continue 
                  if s < 5 == 1:
                      if data.length - 96 <= 106:
                          stop
                  else:
                      if data.length - 96 > 106:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if (72 and mem[168] % unknown01000000() >> 232) - 72:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _132 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_132) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
              else:
                  if data.length - 96 > 106:
                      if -(uint8(mem[168]) >> 248) + 3:
                          revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                      _140 = mem[148]
                      mem[ceil32(ceil32(data.length)) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                      mem[ceil32(ceil32(data.length)) + 101] = this.address
                      mem[ceil32(ceil32(data.length)) + 133] = 0
                      mem[ceil32(ceil32(data.length)) + 165] = data.length[1]
                      mem[ceil32(ceil32(data.length)) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                      mem[ceil32(ceil32(data.length)) + 229] = 160
                      mem[ceil32(ceil32(data.length)) + 261] = data.length - 96
                      mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                      call address(_140) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                           gas gas_remaining wei
                          args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + 293 len floor32(data.length - 65)]
                      require ext_call.success
          else:
              if not amount0:
                  static call caller.token1() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount0
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount0
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount0) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _330 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_330) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _352 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_352) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
              else:
                  static call caller.token0() with:
                          gas gas_remaining wei
                  mem[ceil32(ceil32(data.length)) + 97] = ext_call.return_data[0]
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >=′ 32
                  require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = data.length[3]
                  mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = amount0
                  call ext_call.return_data[0].transfer(address recipient, uint256 amount) with:
                       gas gas_remaining wei
                      args data.length[3], amount0
                  require ext_call.success
                  if data.length - 96 > 106:
                      s = 1
                      while Mask(256, -8 * s, amount0) >> 8 * s:
                          s = s + 1
                          continue 
                      if s < 5 == 1:
                          if data.length - 96 <= 106:
                              stop
                      else:
                          if data.length - 96 > 106:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if (72 and mem[168] % unknown01000000() >> 232) - 72:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _356 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_356) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success
                  else:
                      if data.length - 96 > 106:
                          if -(uint8(mem[168]) >> 248) + 3:
                              revert with 0, 'RouterProxyV7: INVALID_EXACT_OUTPUT_DEX'
                          _372 = mem[148]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 97] = 0x128acb0800000000000000000000000000000000000000000000000000000000
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 101] = this.address
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 133] = 0
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 165] = data.length[1]
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 197] = 0xfffd8963efd1fc6a506488495d951d5263988d25
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 229] = 160
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 261] = data.length - 96
                          mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)] = mem[128 len floor32(data.length - 65)]
                          call address(_372) >> 96.swap(address recipient, bool zeroForOne, int256 amountSpecified, uint160 sqrtPriceLimitX96, bytes data) with:
                               gas gas_remaining wei
                              args this.address, 0, data.length[1], 0xfffd8963efd1fc6a506488495d951d5263988d25, 160, data.length - 96, mem[ceil32(ceil32(data.length)) + ceil32(return_data.size) + 293 len floor32(data.length - 65)]
                          require ext_call.success


