# Palkeoramix decompiler. 

def storage:
  functionImplementation is mapping of address at storage 0x100000000000000000000000000000000

def getFunctionImplementation(bytes4 selector): # not payable
  require calldata.size - 4 >=â€² 32
  require selector == Mask(32, 224, selector)
  return functionImplementation[Mask(32, 224, selector)]

#
#  Regular functions
#

def _fallback(?) payable: # default function
  mem[128 len calldata.size] = call.data[0 len calldata.size]
  mem[calldata.size + 128] = 0
  if calldata.size < 4:
      revert with 671114645, 0, 3, calldata.size, 4
  if not functionImplementation[Mask(32, 224, mem[128])]:
      revert with Mask(32, 224, sha3('NotImplementedError(bytes4)')) >> 224, Mask(32, 224, mem[128]) >> 32, 0
  delegate functionImplementation[Mask(32, 224, mem[128])] with:
     funct call.data[0 len 4]
       gas gas_remaining wei
      args call.data[4 len calldata.size - 4]
  if not return_data.size:
      if not delegate.return_code:
          revert with call.data[0 len calldata.size]
      return call.data[0 len calldata.size]
  if not delegate.return_code:
      revert with ext_call.return_data[0 len return_data.size]
  return ext_call.return_data[0 len return_data.size]


