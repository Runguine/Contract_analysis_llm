# Palkeoramix decompiler. 

const INITIAL_SUPPLY = 1000000000 * 10^18
const PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
const DOMAIN_SEPARATOR = 0x17e76dd75f3dfe3e50d31322433cc1405e898404a5724da2d4804cab81e0a88a
const DELEGATE_TYPEHASH = 0x9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d
const MINT_MAX_PERCENT = 2
const MINT_MIN_INTERVAL = (8760 * 24 * 3600)
const DELEGATE_BY_TYPE_TYPEHASH = 0x10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e5
const TRANSFER_RESTRICTION_LIFTED_NO_LATER_THAN = (453327 * 3600)
const EIP712_DOMAIN = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
const EIP712_VERSION = ''

def storage:
  balanceOf is mapping of uint256 at storage 0
  allowance is mapping of uint256 at storage 1
  stor2 is uint128 at storage 2
  totalSupply is uint256 at storage 2
  name is array of uint256 at storage 3
  symbol is array of uint256 at storage 4
  decimals is uint8 at storage 5
  owner is address at storage 5 offset 8
  nonces is mapping of uint256 at storage 6
  _votingSnapshots is mapping of struct at storage 7
  _votingSnapshotsCounts is mapping of uint256 at storage 8
  _votingDelegates is mapping of address at storage 9
  _propositionPowerSnapshots is mapping of struct at storage 10
  _propositionPowerSnapshotsCounts is mapping of uint256 at storage 11
  _propositionPowerDelegates is mapping of address at storage 12
  _totalSupplySnapshots is mapping of struct at storage 13
  _totalSupplySnapshotsCount is uint256 at storage 14
  stor15 is mapping of uint8 at storage 15
  _mintingRestrictedBefore is uint256 at storage 16
  _transfersRestrictedBefore is uint256 at storage 17

def name() payable: 
  return name[0 len name.length]

def _totalSupplySnapshots(uint256 _param1) payable: 
  require calldata.size - 4 >= 32
  return _totalSupplySnapshots[_param1].field_0, _totalSupplySnapshots[_param1].field_128

def totalSupply() payable: 
  return uint256(totalSupply)

def _transfersRestrictedBefore() payable: 
  return _transfersRestrictedBefore

def _totalSupplySnapshotsCount() payable: 
  return _totalSupplySnapshotsCount

def decimals() payable: 
  return decimals

def _tokenTransferAllowlist(address _param1) payable: 
  require calldata.size - 4 >= 32
  return bool(stor15[_param1])

def _votingDelegates(address _param1) payable: 
  require calldata.size - 4 >= 32
  return _votingDelegates[_param1]

def _propositionPowerSnapshotsCounts(address _param1) payable: 
  require calldata.size - 4 >= 32
  return _propositionPowerSnapshotsCounts[_param1]

def _votingSnapshots(address _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 64
  return _votingSnapshots[_param1][_param2].field_0, _votingSnapshots[_param1][_param2].field_128

def _propositionPowerSnapshots(address _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 64
  return _propositionPowerSnapshots[_param1][_param2].field_0, _propositionPowerSnapshots[_param1][_param2].field_128

def balanceOf(address account) payable: 
  require calldata.size - 4 >= 32
  return balanceOf[address(account)]

def _votingSnapshotsCounts(address _param1) payable: 
  require calldata.size - 4 >= 32
  return _votingSnapshotsCounts[_param1]

def nonces(address _param1) payable: 
  require calldata.size - 4 >= 32
  return nonces[address(_param1)]

def owner() payable: 
  return owner

def symbol() payable: 
  return symbol[0 len symbol.length]

def _mintingRestrictedBefore() payable: 
  return _mintingRestrictedBefore

def allowance(address owner, address spender) payable: 
  require calldata.size - 4 >= 64
  return allowance[address(owner)][address(spender)]

def _propositionPowerDelegates(address _param1) payable: 
  require calldata.size - 4 >= 32
  return _propositionPowerDelegates[_param1]

#
#  Regular functions
#

def _fallback(?) payable: # default function
  revert

def renounceOwnership() payable: 
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=0)
  owner = 0

def transferOwnership(address newOwner) payable: 
  require calldata.size - 4 >= 32
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if not newOwner:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  38,
                  0x734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                  mem[202 len 26]
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=newOwner)
  owner = newOwner

def getDelegateeByType(address delegator, uint8 delegationType) payable: 
  require calldata.size - 4 >= 64
  require delegationType <= 1
  if delegationType:
      if _propositionPowerDelegates[address(delegator)]:
          return _propositionPowerDelegates[address(delegator)]
  else:
      if _votingDelegates[address(delegator)]:
          return _votingDelegates[address(delegator)]
  return delegator

def updateTransfersRestrictedBefore(uint256 transfersRestrictedBefore) payable: 
  require calldata.size - 4 >= 32
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if _transfersRestrictedBefore <= block.timestamp:
      revert with 0, 'TRANSFER_RESTRICTION_ENDED'
  if _transfersRestrictedBefore > transfersRestrictedBefore:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  34,
                  0x544e45575f5452414e534645525f5245535452494354494f4e5f544f4f5f4541524c,
                  mem[198 len 30]
  if transfersRestrictedBefore > 453327 * 3600:
      revert with 0, 'AFTER_MAX_TRANSFER_RESTRICTION'
  _transfersRestrictedBefore = transfersRestrictedBefore
  log TransfersRestrictedBeforeUpdated(uint256 transfersRestrictedBefore=transfersRestrictedBefore)

def approve(address spender, uint256 amount) payable: 
  require calldata.size - 4 >= 64
  if not caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x5445524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                  mem[200 len 28]
  if not spender:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  34,
                  0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                  mem[198 len 30]
  allowance[caller][address(spender)] = amount
  log Approval(
        address owner=amount,
        address spender=caller,
        uint256 value=spender)
  return 1

def decreaseAllowance(address spender, uint256 subtractedValue) payable: 
  require calldata.size - 4 >= 64
  if subtractedValue > allowance[caller][address(spender)]:
      revert with 0, 
                  32,
                  37,
                  0x5945524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572,
                  mem[165 len 27],
                  mem[219 len 5]
  if not caller:
      revert with 0, 32, 36, 0x5445524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
  if not spender:
      revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
  allowance[caller][address(spender)] -= subtractedValue
  log Approval(
        address owner=(allowance[caller][address(spender)] - subtractedValue),
        address spender=caller,
        uint256 value=spender)
  return 1

def increaseAllowance(address spender, uint256 addedValue) payable: 
  require calldata.size - 4 >= 64
  if addedValue + allowance[caller][address(spender)] < allowance[caller][address(spender)]:
      revert with 0, 'SafeMath: addition overflow'
  if not caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x5445524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                  mem[200 len 28]
  if not spender:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  34,
                  0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                  mem[198 len 30]
  allowance[caller][address(spender)] += addedValue
  log Approval(
        address owner=(addedValue + allowance[caller][address(spender)]),
        address spender=caller,
        uint256 value=spender)
  return 1

def addToTokenTransferAllowlist(address[] addressesToAdd) payable: 
  require calldata.size - 4 >= 32
  require addressesToAdd <= unknown10000000()
  require addressesToAdd + 36 <= calldata.size
  require addressesToAdd.length <= unknown10000000() and addressesToAdd + (32 * addressesToAdd.length) + 36 <= calldata.size
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  idx = 0
  while idx < addressesToAdd.length:
      if stor15[address(cd[((32 * idx) + addressesToAdd + 36)])]:
          revert with 0, 32, 36, 0x73414444524553535f4558495354535f494e5f5452414e534645525f414c4c4f574c4953, mem[200 len 28]
      require idx < addressesToAdd.length
      mem[0] = address(cd[((32 * idx) + addressesToAdd + 36)])
      mem[32] = 15
      stor15[address(cd[((32 * idx) + addressesToAdd + 36)])] = 1
      mem[96] = address(cd[((32 * idx) + addressesToAdd + 36)])
      mem[128] = 1
      log TransferAllowlistUpdated(
            address account=address(cd[((32 * idx) + addressesToAdd + 36)]),
            bool isAllowed=1)
      idx = idx + 1
      continue 

def removeFromTokenTransferAllowlist(address[] addressesToRemove) payable: 
  require calldata.size - 4 >= 32
  require addressesToRemove <= unknown10000000()
  require addressesToRemove + 36 <= calldata.size
  require addressesToRemove.length <= unknown10000000() and addressesToRemove + (32 * addressesToRemove.length) + 36 <= calldata.size
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  idx = 0
  while idx < addressesToRemove.length:
      if not stor15[address(cd[((32 * idx) + addressesToRemove + 36)])]:
          revert with 0, 32, 44, 0x73414444524553535f444f45535f4e4f545f45584953545f494e5f5452414e534645525f414c4c4f574c4953, mem[208 len 20]
      require idx < addressesToRemove.length
      mem[0] = address(cd[((32 * idx) + addressesToRemove + 36)])
      mem[32] = 15
      stor15[address(cd[((32 * idx) + addressesToRemove + 36)])] = 0
      mem[96] = address(cd[((32 * idx) + addressesToRemove + 36)])
      mem[128] = 0
      log TransferAllowlistUpdated(
            address account=address(cd[((32 * idx) + addressesToRemove + 36)]),
            bool isAllowed=0)
      idx = idx + 1
      continue 

def permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable: 
  require calldata.size - 4 >= 224
  if not owner:
      revert with 0, 'INVALID_OWNER'
  if block.timestamp > deadline:
      revert with 0, 'INVALID_EXPIRATION'
  signer = erecover(sha3(0, 0x17e76dd75f3dfe3e50d31322433cc1405e898404a5724da2d4804cab81e0a88a, sha3(0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9, address(owner), address(spender), value, nonces[address(owner)], deadline)), v << 248, r, s) # precompiled
  if not erecover.result:
      revert with ext_call.return_data[0 len return_data.size]
  if owner != address(signer):
      revert with 0, 'INVALID_SIGNATURE'
  if nonces[address(owner)] + 1 < nonces[address(owner)]:
      revert with 0, 'SafeMath: addition overflow'
  nonces[address(owner)]++
  if not owner:
      revert with 0, 32, 36, 0x5445524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, Mask(192, 0, s), mem[578 len 4]
  if not spender:
      revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, Mask(208, 0, s), mem[578 len 4]
  allowance[address(owner)][address(spender)] = value
  log Approval(
        address owner=value,
        address spender=owner,
        uint256 value=spender)

def getPowerCurrent(address user, uint8 delegationType) payable: 
  mem[64] = 96
  require calldata.size - 4 >= 64
  require delegationType <= 1
  if block.number > block.number:
      revert with 0, 'INVALID_BLOCK_NUMBER'
  if delegationType:
      if not _propositionPowerSnapshotsCounts[address(user)]:
          return balanceOf[address(user)]
      if block.number >= _propositionPowerSnapshots[address(user)][stor11[address(user)] - 1].field_0:
          return _propositionPowerSnapshots[address(user)][stor11[address(user)] - 1].field_128
      if block.number < _propositionPowerSnapshots[address(user)][0].field_0:
          return 0
      idx = 0
      while _propositionPowerSnapshotsCounts[address(user)] - 1 > idx:
          _61 = mem[64]
          mem[64] = mem[64] + 64
          mem[_61] = 0
          mem[_61 + 32] = 0
          mem[0] = _propositionPowerSnapshotsCounts[address(user)] + -(_propositionPowerSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
          mem[32] = sha3(address(user), 10)
          _67 = mem[64]
          mem[64] = mem[64] + 64
          mem[_67] = _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0
          mem[_67 + 32] = _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_128
          if block.number == _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0:
              return _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_128
          if block.number <= _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0:
              idx = idx
              continue 
          idx = _propositionPowerSnapshotsCounts[address(user)] + -(_propositionPowerSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
          continue 
      return _propositionPowerSnapshots[address(user)][idx].field_128
  if not _votingSnapshotsCounts[address(user)]:
      return balanceOf[address(user)]
  if block.number >= _votingSnapshots[address(user)][stor8[address(user)] - 1].field_0:
      return _votingSnapshots[address(user)][stor8[address(user)] - 1].field_128
  if block.number < _votingSnapshots[address(user)][0].field_0:
      return 0
  idx = 0
  while _votingSnapshotsCounts[address(user)] - 1 > idx:
      _62 = mem[64]
      mem[64] = mem[64] + 64
      mem[_62] = 0
      mem[_62 + 32] = 0
      mem[0] = _votingSnapshotsCounts[address(user)] + -(_votingSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
      mem[32] = sha3(address(user), 7)
      _72 = mem[64]
      mem[64] = mem[64] + 64
      mem[_72] = _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0
      mem[_72 + 32] = _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_128
      if block.number == _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0:
          return _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_128
      if block.number <= _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0:
          idx = idx
          continue 
      idx = _votingSnapshotsCounts[address(user)] + -(_votingSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
      continue 
  return _votingSnapshots[address(user)][idx].field_128

def getPowerAtBlock(address user, uint256 blockNumber, uint8 delegationType) payable: 
  mem[64] = 96
  require calldata.size - 4 >= 96
  require delegationType <= 1
  if blockNumber > block.number:
      revert with 0, 'INVALID_BLOCK_NUMBER'
  if delegationType:
      if not _propositionPowerSnapshotsCounts[address(user)]:
          return balanceOf[address(user)]
      if blockNumber >= _propositionPowerSnapshots[address(user)][stor11[address(user)] - 1].field_0:
          return _propositionPowerSnapshots[address(user)][stor11[address(user)] - 1].field_128
      if blockNumber < _propositionPowerSnapshots[address(user)][0].field_0:
          return 0
      idx = 0
      while _propositionPowerSnapshotsCounts[address(user)] - 1 > idx:
          _61 = mem[64]
          mem[64] = mem[64] + 64
          mem[_61] = 0
          mem[_61 + 32] = 0
          mem[0] = _propositionPowerSnapshotsCounts[address(user)] + -(_propositionPowerSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
          mem[32] = sha3(address(user), 10)
          _67 = mem[64]
          mem[64] = mem[64] + 64
          mem[_67] = _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0
          mem[_67 + 32] = _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_128
          if blockNumber == _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0:
              return _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_128
          if blockNumber <= _propositionPowerSnapshots[address(user)][stor11[address(user)] + -(0.5 / stor11[address(user)] + -idx - 1) - 1].field_0:
              idx = idx
              continue 
          idx = _propositionPowerSnapshotsCounts[address(user)] + -(_propositionPowerSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
          continue 
      return _propositionPowerSnapshots[address(user)][idx].field_128
  if not _votingSnapshotsCounts[address(user)]:
      return balanceOf[address(user)]
  if blockNumber >= _votingSnapshots[address(user)][stor8[address(user)] - 1].field_0:
      return _votingSnapshots[address(user)][stor8[address(user)] - 1].field_128
  if blockNumber < _votingSnapshots[address(user)][0].field_0:
      return 0
  idx = 0
  while _votingSnapshotsCounts[address(user)] - 1 > idx:
      _62 = mem[64]
      mem[64] = mem[64] + 64
      mem[_62] = 0
      mem[_62 + 32] = 0
      mem[0] = _votingSnapshotsCounts[address(user)] + -(_votingSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
      mem[32] = sha3(address(user), 7)
      _72 = mem[64]
      mem[64] = mem[64] + 64
      mem[_72] = _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0
      mem[_72 + 32] = _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_128
      if blockNumber == _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0:
          return _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_128
      if blockNumber <= _votingSnapshots[address(user)][stor8[address(user)] + -(0.5 / stor8[address(user)] + -idx - 1) - 1].field_0:
          idx = idx
          continue 
      idx = _votingSnapshotsCounts[address(user)] + -(_votingSnapshotsCounts[address(user)] + -idx - 1 / 2) - 1
      continue 
  return _votingSnapshots[address(user)][idx].field_128

def transfer(address recipient, uint256 amount) payable: 
  require calldata.size - 4 >= 64
  if block.timestamp >= 453327 * 3600:
      if not caller:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      37,
                      0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                      mem[201 len 27]
      if not recipient:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      35,
                      0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                      mem[199 len 29]
      if not _votingDelegates[caller]:
          if _votingDelegates[address(recipient)]:
              if caller == _votingDelegates[address(recipient)]:
                  if _propositionPowerDelegates[caller]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerSnapshotsCounts[stor12[caller]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[caller] != recipient:
                              if not _propositionPowerDelegates[caller]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if recipient != caller:
                              if not caller:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[address(recipient)] != caller:
                              if not caller:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
              else:
                  if not caller:
                      if not _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                              if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[stor9[address(recipient)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                          else:
                              if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(recipient)])
                  else:
                      if not _votingSnapshotsCounts[caller]:
                          if amount <= balanceOf[caller]:
                              if not _votingSnapshotsCounts[caller]:
                                  _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                  _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                  _votingSnapshotsCounts[caller]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=caller)
                              else:
                                  if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(balanceOf[caller] - amount)
                                  else:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                      _votingSnapshotsCounts[caller]++
                      else:
                          if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                              if not _votingSnapshotsCounts[caller]:
                                  _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                  _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[caller]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=caller)
                                  if _votingDelegates[address(recipient)]:
                              else:
                                  if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=caller)
                                  else:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[caller]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=caller)
          else:
              if caller == recipient:
                  if not _propositionPowerDelegates[caller]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(recipient)] != caller:
                              if not caller:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if recipient != caller:
                              if not caller:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller] != recipient:
                              if not _propositionPowerDelegates[caller]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
              else:
                  if caller:
                      if not _votingSnapshotsCounts[caller]:
                          if amount <= balanceOf[caller]:
                              if not _votingSnapshotsCounts[caller]:
                                  _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                  _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                  _votingSnapshotsCounts[caller]++
                              else:
                                  if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(balanceOf[caller] - amount)
                                  else:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                      _votingSnapshotsCounts[caller]++
                      else:
                          if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                              if not _votingSnapshotsCounts[caller]:
                                  _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                  _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[caller]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=caller)
                              else:
                                  if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                  else:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[caller]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=caller)
                  else:
                      if not recipient:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[address(recipient)]:
                              if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[address(recipient)],
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                          else:
                              if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=recipient)
      else:
          if not _votingDelegates[address(recipient)]:
              if _votingDelegates[caller] == recipient:
                  if _propositionPowerDelegates[caller]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerSnapshotsCounts[stor12[caller]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[caller] != recipient:
                              if not _propositionPowerDelegates[caller]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if recipient != caller:
                              if not caller:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[address(recipient)] != caller:
                              if not caller:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
              else:
                  if not _votingDelegates[caller]:
                      if not recipient:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[address(recipient)]:
                              if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[address(recipient)],
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[address(recipient)],
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                          else:
                              if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=recipient)
                  else:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          if amount <= balanceOf[stor9[caller]]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                  _votingSnapshotsCounts[stor9[caller]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[caller]] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[caller])
                              else:
                                  if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                  else:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                      else:
                          if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[stor9[caller]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[caller])
                                  if recipient:
                              else:
                                  if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                  else:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
          else:
              if _votingDelegates[caller] == _votingDelegates[address(recipient)]:
                  if _propositionPowerDelegates[caller]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerSnapshotsCounts[stor12[caller]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                                          if amount + _propositionPowerSnapshots[stor12[address(recipient)]][stor11[stor12[address(recipient)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(recipient)]][stor11[stor12[address(recipient)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[caller] != recipient:
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerSnapshotsCounts[stor12[caller]]:
                              else:
                                  if recipient:
                                      if _propositionPowerSnapshotsCounts[address(recipient)]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                  else:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(recipient)] != caller:
                              if caller:
                                  if _propositionPowerSnapshotsCounts[caller]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
                      else:
                          if recipient != caller:
                              if not caller:
                                  if recipient:
                          else:
                              if amount <= balanceOf[caller]:
                                  balanceOf[caller] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=caller,
                                        uint256 value=recipient)
              else:
                  if not _votingDelegates[caller]:
                      if not _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[caller]:
                              if not _propositionPowerDelegates[address(recipient)]:
                          else:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] == _propositionPowerDelegates[address(recipient)]:
                      else:
                          if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                              if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                              log DelegatedPowerChanged(
                                    address user=amount + balanceOf[stor9[address(recipient)]],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(recipient)])
                          else:
                              if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                  else:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          if amount <= balanceOf[stor9[caller]]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                  _votingSnapshotsCounts[stor9[caller]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[caller]] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[caller])
                              else:
                                  if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                  else:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[caller]] - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                      else:
                          if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[stor9[caller]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[caller])
                                  if _votingDelegates[address(recipient)]:
                              else:
                                  if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                  else:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                      if _votingDelegates[address(recipient)]:
  else:
      if block.timestamp >= _transfersRestrictedBefore:
          if not caller:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          37,
                          0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                          mem[201 len 27]
          if not recipient:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          35,
                          0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                          mem[199 len 29]
          if _votingDelegates[caller]:
              if _votingDelegates[address(recipient)]:
                  if _votingDelegates[caller] == _votingDelegates[address(recipient)]:
                      if _propositionPowerDelegates[caller]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerSnapshotsCounts[stor12[caller]]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                                          if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=caller,
                                            uint256 value=recipient)
                          else:
                              if _propositionPowerDelegates[caller] != recipient:
                                  if not _propositionPowerDelegates[caller]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=caller,
                                            uint256 value=recipient)
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if recipient != caller:
                                  if not caller:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[address(recipient)] != caller:
                                  if not caller:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=caller,
                                            uint256 value=recipient)
                  else:
                      if not _votingDelegates[caller]:
                          if not _votingDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + balanceOf[stor9[address(recipient)]],
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                      else:
                          if not _votingSnapshotsCounts[stor9[caller]]:
                              if amount <= balanceOf[stor9[caller]]:
                                  if not _votingSnapshotsCounts[stor9[caller]]:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[caller]] - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                  else:
                                      if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      else:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                  if not _votingSnapshotsCounts[stor9[caller]]:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                      if _votingDelegates[address(recipient)]:
                                  else:
                                      if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[caller])
                                      else:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[caller])
              else:
                  if _votingDelegates[caller] == recipient:
                      if not _propositionPowerDelegates[caller]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(recipient)] != caller:
                                  if not caller:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if recipient != caller:
                                  if not caller:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller] != recipient:
                                  if not _propositionPowerDelegates[caller]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=caller,
                                            uint256 value=recipient)
                  else:
                      if _votingDelegates[caller]:
                          if not _votingSnapshotsCounts[stor9[caller]]:
                              if amount <= balanceOf[stor9[caller]]:
                                  if not _votingSnapshotsCounts[stor9[caller]]:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                  else:
                                      if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                      else:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                  if not _votingSnapshotsCounts[stor9[caller]]:
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[caller])
                                  else:
                                      if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[caller])
                      else:
                          if not recipient:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[address(recipient)],
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
          else:
              if _votingDelegates[address(recipient)]:
                  if caller == _votingDelegates[address(recipient)]:
                      if not _propositionPowerDelegates[caller]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(recipient)] != caller:
                                  if not caller:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if recipient != caller:
                                  if not caller:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller] != recipient:
                                  if not _propositionPowerDelegates[caller]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=caller,
                                            uint256 value=recipient)
                  else:
                      if caller:
                          if not _votingSnapshotsCounts[caller]:
                              if amount <= balanceOf[caller]:
                                  if not _votingSnapshotsCounts[caller]:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                      _votingSnapshotsCounts[caller]++
                                  else:
                                      if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(balanceOf[caller] - amount)
                                      else:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                          _votingSnapshotsCounts[caller]++
                          else:
                              if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                                  if not _votingSnapshotsCounts[caller]:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[caller]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=caller)
                                  else:
                                      if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[caller]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=caller)
                      else:
                          if not _votingDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
              else:
                  if caller == recipient:
                      if _propositionPowerDelegates[caller]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[caller] != recipient:
                                  if not _propositionPowerDelegates[caller]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if recipient != caller:
                                  if caller:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                          else:
                              if _propositionPowerDelegates[address(recipient)] != caller:
                                  if not caller:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[caller]:
                                      balanceOf[caller] -= amount
                  else:
                      if caller:
                          if not _votingSnapshotsCounts[caller]:
                              if amount <= balanceOf[caller]:
                                  if not _votingSnapshotsCounts[caller]:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(balanceOf[caller] - amount)
                                      _votingSnapshotsCounts[caller]++
                          else:
                              if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                                  if not _votingSnapshotsCounts[caller]:
                                      _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                      _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[caller]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=caller)
                                  else:
                                      if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[caller]++
                      else:
                          if not recipient:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[caller]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=recipient)
      else:
          if stor15[caller]:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not recipient:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if not _votingDelegates[caller]:
                  if _votingDelegates[address(recipient)]:
                      if caller == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[caller]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if caller == recipient:
                              else:
                                  if _propositionPowerDelegates[address(recipient)] != caller:
                                      if caller:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] != recipient:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[caller]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if caller:
                              if not _votingSnapshotsCounts[caller]:
                                  if amount <= balanceOf[caller]:
                              else:
                                  if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                                      if not _votingSnapshotsCounts[caller]:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[caller]++
                                      else:
                                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                              _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[caller]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                  else:
                      if caller == recipient:
                          if not _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if caller == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if caller == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] == recipient:
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if caller:
                              if not _votingSnapshotsCounts[caller]:
                                  if amount <= balanceOf[caller]:
                              else:
                                  if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                                      if not _votingSnapshotsCounts[caller]:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[caller]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
              else:
                  if not _votingDelegates[address(recipient)]:
                      if _votingDelegates[caller] == recipient:
                          if not _propositionPowerDelegates[caller]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if caller == recipient:
                              else:
                                  if _propositionPowerDelegates[address(recipient)] != caller:
                                      if caller:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] != recipient:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[caller]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if _votingDelegates[caller]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  if amount <= balanceOf[stor9[caller]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[caller]]:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                                      else:
                                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[caller]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=recipient)
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
                  else:
                      if _votingDelegates[caller] == _votingDelegates[address(recipient)]:
                          if _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[caller]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                                          if amount + balanceOf[recipient] < balanceOf[recipient]:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerDelegates[caller] != recipient:
                                      if not _propositionPowerDelegates[caller]:
                                          if recipient:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if recipient != caller:
                                      if caller:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                              else:
                                  if _propositionPowerDelegates[address(recipient)] != caller:
                                      if not caller:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if _votingDelegates[caller]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  if amount <= balanceOf[stor9[caller]]:
                                      if not _votingSnapshotsCounts[stor9[caller]]:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                              else:
                                  if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[caller]]:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[caller])
                                      else:
                                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                                              log DelegatedPowerChanged(
                                                    address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                    uint256 amount=0,
                                                    uint8 delegationType=_votingDelegates[address(recipient)])
          else:
              if not stor15[address(recipient)]:
                  revert with 0, 'NON_ALLOWLIST_TRANSFERS_DISABLED'
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not recipient:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _votingDelegates[caller]:
                  if _votingDelegates[address(recipient)]:
                      if _votingDelegates[caller] == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[caller]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if caller == recipient:
                              else:
                                  if _propositionPowerDelegates[address(recipient)] != caller:
                                      if caller:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] != recipient:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[caller]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if _votingDelegates[caller]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  if amount <= balanceOf[stor9[caller]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[caller]]:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                                      else:
                                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                  else:
                      if _votingDelegates[caller] == recipient:
                          if not _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if caller == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if caller == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] == recipient:
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if _votingDelegates[caller]:
                              if not _votingSnapshotsCounts[stor9[caller]]:
                                  if amount <= balanceOf[stor9[caller]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[caller]]:
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[caller]]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
              else:
                  if not _votingDelegates[address(recipient)]:
                      if caller == recipient:
                          if _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if _propositionPowerDelegates[caller] == recipient:
                          else:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if caller == _propositionPowerDelegates[address(recipient)]:
                      else:
                          if caller:
                              if _votingSnapshotsCounts[caller]:
                                  if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                          else:
                              if recipient:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                  else:
                      if caller == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if caller == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if caller == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller] == recipient:
                              else:
                                  if _propositionPowerDelegates[caller] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[caller]:
                                  else:
                                      if amount <= balanceOf[caller]:
                                          balanceOf[caller] -= amount
                      else:
                          if caller:
                              if not _votingSnapshotsCounts[caller]:
                                  if amount <= balanceOf[caller]:
                              else:
                                  if amount <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                                      if not _votingSnapshotsCounts[caller]:
                                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[caller]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def mint(address _to, uint256 _amount) payable: 
  require calldata.size - 4 >= 64
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if block.timestamp < _mintingRestrictedBefore:
      revert with 0, 'MINT_TOO_EARLY'
  if not uint256(totalSupply):
      if _amount > 0:
          revert with 0, 'MAX_MINT_EXCEEDED'
      if block.timestamp + (8760 * 24 * 3600) < block.timestamp:
          revert with 0, 'SafeMath: addition overflow'
      _mintingRestrictedBefore = block.timestamp + (8760 * 24 * 3600)
      if not _to:
          revert with 0, 'ERC20: mint to the zero address'
      if _votingDelegates[0]:
          if _votingDelegates[address(_to)]:
              if _votingDelegates[0] != _votingDelegates[address(_to)]:
                  if not _votingDelegates[0]:
                      if not _votingDelegates[address(_to)]:
                          if not _propositionPowerDelegates[0]:
                              if _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[address(_to)]:
                                      if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _to:
                                      if _to:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[0] != _to:
                                      if not _propositionPowerDelegates[0]:
                                          if _to:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                      if not _propositionPowerDelegates[0]:
                                          if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(_to)] += _amount
                                      log Transfer(
                                            address from=_amount,
                                            address to=0,
                                            uint256 value=_to)
                      else:
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              if _amount + balanceOf[stor9[address(_to)]] < balanceOf[stor9[address(_to)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(_to)]]:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                                  if _propositionPowerDelegates[0]:
                              else:
                                  if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  else:
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                      _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                          else:
                              if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(_to)]]:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                              else:
                                  if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(_to)])
                                      if _propositionPowerDelegates[0]:
                                  else:
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(_to)]]++
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(_to)])
                  else:
                      if not _votingSnapshotsCounts[stor9[0]]:
                          if _amount <= balanceOf[stor9[0]]:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _votingDelegates[address(_to)]:
                                      if _votingSnapshotsCounts[stor9[address(_to)]]:
                                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[0]] - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _votingDelegates[address(_to)]:
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[0]] - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _votingDelegates[address(_to)]:
                                          if _votingSnapshotsCounts[stor9[address(_to)]]:
                      else:
                          if _amount <= _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if not _votingDelegates[address(_to)]:
                                      if _propositionPowerDelegates[0]:
                                  else:
                                      if not _votingSnapshotsCounts[stor9[address(_to)]]:
                                          if _amount + balanceOf[stor9[address(_to)]] < balanceOf[stor9[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _votingDelegates[address(_to)]:
                                      if _votingSnapshotsCounts[stor9[address(_to)]]:
                                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
              else:
                  if _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if not _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= balanceOf[stor12[0]]:
                                  else:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                                          if not _propositionPowerSnapshotsCounts[stor12[0]]:
                                              _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]]].field_128 = uint128(_propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128 - _amount)
                                              _propositionPowerSnapshotsCounts[stor12[0]]++
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(_to)] += _amount
                                      log Transfer(
                                            address from=_amount,
                                            address to=0,
                                            uint256 value=_to)
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                                          if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                              _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                                          else:
                                              if _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_0 == uint128(block.number):
                                                  _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                              else:
                                                  _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                                  _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                                  _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
                      else:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                                          if not _propositionPowerSnapshotsCounts[address(_to)]:
                                              _propositionPowerSnapshots[address(_to)][stor11[address(_to)]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[address(_to)][stor11[address(_to)]].field_128 = uint128(_amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128)
                                              _propositionPowerSnapshotsCounts[address(_to)]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                                  if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                      revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
          else:
              if _votingDelegates[0] != _to:
                  if not _votingDelegates[0]:
                      if not _to:
                          if _propositionPowerDelegates[0]:
                              if _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                      if not _propositionPowerDelegates[0]:
                                          if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerDelegates[0] != _to:
                                      if not _propositionPowerDelegates[0]:
                                          if _to:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                              else:
                                  if _propositionPowerDelegates[address(_to)]:
                                      if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                      else:
                          if not _votingSnapshotsCounts[address(_to)]:
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(_to)]:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[address(_to)],
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                              else:
                                  if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  else:
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                      _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[address(_to)],
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                          else:
                              if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(_to)]:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                  _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                              else:
                                  if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_to)
                                  else:
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                      _votingSnapshotsCounts[address(_to)]++
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_to)
                                      if _propositionPowerDelegates[0]:
                  else:
                      if not _votingSnapshotsCounts[stor9[0]]:
                          if _amount <= balanceOf[stor9[0]]:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                                      if _votingSnapshotsCounts[address(_to)]:
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                      else:
                          if _amount <= _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                                      if _votingSnapshotsCounts[address(_to)]:
                                          if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _to:
                                          if _votingSnapshotsCounts[address(_to)]:
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _to:
                                          if _votingSnapshotsCounts[address(_to)]:
                                              if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                                                  revert with 0, 'SafeMath: addition overflow'
              else:
                  if not _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                                          if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                              _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
      else:
          if not _votingDelegates[address(_to)]:
              if _to:
                  if not _to:
                      if not _propositionPowerDelegates[0]:
                          if not _propositionPowerDelegates[address(_to)]:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                      else:
                          if not _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0] != _to:
                                  if _propositionPowerDelegates[0]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                          else:
                              if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                  if not _propositionPowerDelegates[0]:
                                      if _propositionPowerDelegates[address(_to)]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                  else:
                      if not _votingSnapshotsCounts[address(_to)]:
                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(_to)]:
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                              _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[address(_to)],
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
                          else:
                              if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[address(_to)],
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                              else:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[address(_to)],
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                      else:
                          if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(_to)]:
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                              _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
                              if _propositionPowerDelegates[0]:
                          else:
                              if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                  _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
              else:
                  if _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                      else:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
          else:
              if _votingDelegates[address(_to)]:
                  if not _votingDelegates[address(_to)]:
                      if _propositionPowerDelegates[0]:
                          if _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                  if not _propositionPowerDelegates[0]:
                                      if _propositionPowerDelegates[address(_to)]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                                  if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                      revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[0] != _to:
                                  if not _propositionPowerDelegates[0]:
                                      if _to:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                      else:
                          if not _propositionPowerDelegates[address(_to)]:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                          else:
                              if _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[address(_to)]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                  else:
                      if not _votingSnapshotsCounts[stor9[address(_to)]]:
                          if _amount + balanceOf[stor9[address(_to)]] < balanceOf[stor9[address(_to)]]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                              _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[stor9[address(_to)]],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
                          else:
                              if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                              else:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[stor9[address(_to)]],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
                      else:
                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                              _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
                          else:
                              if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                              else:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                                  if _propositionPowerDelegates[0]:
              else:
                  if not _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                                          if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                              _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
  else:
      if 2 * uint256(totalSupply) / uint256(totalSupply) != 2:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      33,
                      0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                      mem[197 len 31]
      if _amount > 2 * uint256(totalSupply) / 100:
          revert with 0, 'MAX_MINT_EXCEEDED'
      if block.timestamp + (8760 * 24 * 3600) < block.timestamp:
          revert with 0, 'SafeMath: addition overflow'
      _mintingRestrictedBefore = block.timestamp + (8760 * 24 * 3600)
      if not _to:
          revert with 0, 'ERC20: mint to the zero address'
      if not _votingDelegates[0]:
          if _votingDelegates[address(_to)]:
              if _votingDelegates[address(_to)]:
                  if not _votingDelegates[address(_to)]:
                      if not _propositionPowerDelegates[0]:
                          if not _propositionPowerDelegates[address(_to)]:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                      else:
                          if not _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0] != _to:
                                  if _propositionPowerDelegates[0]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                          else:
                              if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                  if not _propositionPowerDelegates[0]:
                                      if _propositionPowerDelegates[address(_to)]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                  else:
                      if not _votingSnapshotsCounts[stor9[address(_to)]]:
                          if _amount + balanceOf[stor9[address(_to)]] < balanceOf[stor9[address(_to)]]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                              _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[stor9[address(_to)]],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
                          else:
                              if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                              else:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                      else:
                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                              _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
                              if _propositionPowerDelegates[0]:
                          else:
                              if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                              else:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(_to)])
              else:
                  if _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                      else:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
          else:
              if _to:
                  if not _to:
                      if not _propositionPowerDelegates[0]:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                          else:
                              if not _to:
                      else:
                          if not _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0] == _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[0]:
                              else:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                  else:
                      if not _votingSnapshotsCounts[address(_to)]:
                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(_to)]:
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                              _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[address(_to)],
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
                          else:
                              if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + balanceOf[address(_to)])
                              else:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + balanceOf[address(_to)],
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
                      else:
                          if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(_to)]:
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                              _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
                          else:
                              if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                  _votingSnapshotsCounts[address(_to)]++
                              log DelegatedPowerChanged(
                                    address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_to)
              else:
                  if not _propositionPowerDelegates[0]:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _to:
                              if _to:
                                  if _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                      else:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                      else:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
      else:
          if not _votingDelegates[address(_to)]:
              if _votingDelegates[0] != _to:
                  if not _votingDelegates[0]:
                      if not _to:
                          if not _propositionPowerDelegates[0]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[0] != _to:
                                      if _propositionPowerDelegates[0]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                              else:
                                  if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                      if not _propositionPowerDelegates[0]:
                                          if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                      else:
                          if not _votingSnapshotsCounts[address(_to)]:
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(_to)]:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                  _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[address(_to)],
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                              else:
                                  if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + balanceOf[address(_to)])
                                      log DelegatedPowerChanged(
                                            address user=_amount + balanceOf[address(_to)],
                                            uint256 amount=0,
                                            uint8 delegationType=_to)
                                  else:
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + balanceOf[address(_to)])
                                      _votingSnapshotsCounts[address(_to)]++
                                      log DelegatedPowerChanged(
                                            address user=_amount + balanceOf[address(_to)],
                                            uint256 amount=0,
                                            uint8 delegationType=_to)
                          else:
                              if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(_to)]:
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                  _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                                  if _propositionPowerDelegates[0]:
                              else:
                                  if _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(_to)][stor8[address(_to)]].field_128 = uint128(_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128)
                                      _votingSnapshotsCounts[address(_to)]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_to)
                  else:
                      if not _votingSnapshotsCounts[stor9[0]]:
                          if _amount <= balanceOf[stor9[0]]:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                      else:
                          if _amount <= _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _to:
                                      if _votingSnapshotsCounts[address(_to)]:
                                          if _amount + _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128 < _votingSnapshots[address(_to)][stor8[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _to:
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _to:
                                          if _votingSnapshotsCounts[address(_to)]:
              else:
                  if _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                      else:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
          else:
              if _votingDelegates[0] != _votingDelegates[address(_to)]:
                  if not _votingDelegates[0]:
                      if not _votingDelegates[address(_to)]:
                          if _propositionPowerDelegates[0]:
                              if _propositionPowerDelegates[address(_to)]:
                                  if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                                      if not _propositionPowerDelegates[0]:
                                          if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerDelegates[0] != _to:
                                      if not _propositionPowerDelegates[0]:
                                          if _to:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                          else:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                              else:
                                  if _propositionPowerDelegates[address(_to)]:
                                      if _propositionPowerDelegates[address(_to)]:
                                  else:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                      else:
                          if not _votingSnapshotsCounts[stor9[address(_to)]]:
                              if _amount + balanceOf[stor9[address(_to)]] < balanceOf[stor9[address(_to)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(_to)]]:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                              else:
                                  if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                  else:
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + balanceOf[stor9[address(_to)]])
                                      _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + balanceOf[stor9[address(_to)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                          else:
                              if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(_to)]]:
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(_to)]]++
                                  log DelegatedPowerChanged(
                                        address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(_to)])
                              else:
                                  if _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(_to)])
                                  else:
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]]].field_128 = uint128(_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(_to)]]++
                                      log DelegatedPowerChanged(
                                            address user=_amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(_to)])
                                      if _propositionPowerDelegates[0]:
                  else:
                      if not _votingSnapshotsCounts[stor9[0]]:
                          if _amount <= balanceOf[stor9[0]]:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _votingDelegates[address(_to)]:
                                      if _votingSnapshotsCounts[stor9[address(_to)]]:
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(balanceOf[stor9[0]] - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[0]] - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _votingDelegates[address(_to)]:
                      else:
                          if _amount <= _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[0]]:
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                  _votingSnapshotsCounts[stor9[0]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[0])
                                  if _votingDelegates[address(_to)]:
                                      if _votingSnapshotsCounts[stor9[address(_to)]]:
                                          if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _votingDelegates[address(_to)]:
                                          if _votingSnapshotsCounts[stor9[address(_to)]]:
                                  else:
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[0]][stor8[stor9[0]]].field_128 = uint128(_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount)
                                      _votingSnapshotsCounts[stor9[0]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[0]][stor8[stor9[0]] - 1].field_128 - _amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[0])
                                      if _votingDelegates[address(_to)]:
                                          if _votingSnapshotsCounts[stor9[address(_to)]]:
                                              if _amount + _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128 < _votingSnapshots[stor9[address(_to)]][stor8[stor9[address(_to)]] - 1].field_128:
                                                  revert with 0, 'SafeMath: addition overflow'
              else:
                  if not _propositionPowerDelegates[0]:
                      if _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[address(_to)]:
                              if not _propositionPowerDelegates[address(_to)]:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                      if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _to:
                              if not _to:
                                  if _amount + uint256(totalSupply) < uint256(totalSupply):
                                      revert with 0, 'SafeMath: addition overflow'
                                  uint256(totalSupply) += _amount
                              else:
                                  if not _propositionPowerSnapshotsCounts[address(_to)]:
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                  else:
                      if not _propositionPowerDelegates[address(_to)]:
                          if _propositionPowerDelegates[0] != _to:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _to:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                  else:
                                      if not _propositionPowerSnapshotsCounts[address(_to)]:
                                          if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128 < _propositionPowerSnapshots[address(_to)][stor11[address(_to)] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[0] != _propositionPowerDelegates[address(_to)]:
                              if _propositionPowerDelegates[0]:
                                  if _propositionPowerSnapshotsCounts[stor12[0]]:
                                      if _amount <= _propositionPowerSnapshots[stor12[0]][stor11[stor12[0]] - 1].field_128:
                              else:
                                  if not _propositionPowerDelegates[address(_to)]:
                                      if _amount + uint256(totalSupply) < uint256(totalSupply):
                                          revert with 0, 'SafeMath: addition overflow'
                                      uint256(totalSupply) += _amount
                                      if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                          if _amount + balanceOf[stor12[address(_to)]] < balanceOf[stor12[address(_to)]]:
                                              revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if _amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                                          if not _propositionPowerSnapshotsCounts[stor12[address(_to)]]:
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_0 = uint128(block.number)
                                              _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]]].field_128 = uint128(_amount + _propositionPowerSnapshots[stor12[address(_to)]][stor11[stor12[address(_to)]] - 1].field_128)
                                              _propositionPowerSnapshotsCounts[stor12[address(_to)]]++
                          else:
                              if _amount + uint256(totalSupply) < uint256(totalSupply):
                                  revert with 0, 'SafeMath: addition overflow'
                              uint256(totalSupply) += _amount
                              if _amount + balanceOf[address(_to)] < balanceOf[address(_to)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[address(_to)] += _amount
                              log Transfer(
                                    address from=_amount,
                                    address to=0,
                                    uint256 value=_to)
                              _totalSupplySnapshots[stor14].field_0 = uint128(block.number)
                              _totalSupplySnapshots[stor14].field_0 = uint128(stor2)
                              _totalSupplySnapshots[stor14].field_128 = 0
                              if _totalSupplySnapshotsCount + 1 < _totalSupplySnapshotsCount:
                                  revert with 0, 'SafeMath: addition overflow'
                              _totalSupplySnapshotsCount++
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def transferFrom(address sender, address recipient, uint256 amount) payable: 
  require calldata.size - 4 >= 96
  if block.timestamp >= 453327 * 3600:
      if not sender:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      37,
                      0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                      mem[201 len 27]
      if not recipient:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      35,
                      0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                      mem[199 len 29]
      if not _votingDelegates[address(sender)]:
          if _votingDelegates[address(recipient)]:
              if sender == _votingDelegates[address(recipient)]:
                  if _propositionPowerDelegates[address(sender)]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                                  if _propositionPowerSnapshotsCounts[stor12[address(sender)]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[address(sender)] != recipient:
                              if not _propositionPowerDelegates[address(sender)]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if sender != recipient:
                              if not sender:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if sender != _propositionPowerDelegates[address(recipient)]:
                              if not sender:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
              else:
                  if not sender:
                      if not _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                              if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[stor9[address(recipient)]],
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                          else:
                              if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(recipient)])
                  else:
                      if not _votingSnapshotsCounts[address(sender)]:
                          if amount <= balanceOf[address(sender)]:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                  _votingSnapshotsCounts[address(sender)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(sender)] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=sender)
                              else:
                                  if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(balanceOf[address(sender)] - amount)
                                  else:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                      else:
                          if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[address(sender)]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=sender)
                                  if _votingDelegates[address(recipient)]:
                              else:
                                  if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=sender)
                                  else:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=sender)
          else:
              if sender == recipient:
                  if not _propositionPowerDelegates[address(sender)]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if sender != _propositionPowerDelegates[address(recipient)]:
                              if not sender:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if sender != recipient:
                              if not sender:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)] != recipient:
                              if not _propositionPowerDelegates[address(sender)]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[address(sender)]:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
              else:
                  if sender:
                      if not _votingSnapshotsCounts[address(sender)]:
                          if amount <= balanceOf[address(sender)]:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                  _votingSnapshotsCounts[address(sender)]++
                              else:
                                  if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(balanceOf[address(sender)] - amount)
                                  else:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                      else:
                          if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[address(sender)]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=sender)
                              else:
                                  if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                  else:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=sender)
                  else:
                      if not recipient:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[address(recipient)]:
                              if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[address(recipient)],
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                          else:
                              if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=recipient)
      else:
          if not _votingDelegates[address(recipient)]:
              if _votingDelegates[address(sender)] == recipient:
                  if _propositionPowerDelegates[address(sender)]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                                  if _propositionPowerSnapshotsCounts[stor12[address(sender)]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[address(sender)] != recipient:
                              if not _propositionPowerDelegates[address(sender)]:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                  else:
                      if not _propositionPowerDelegates[address(recipient)]:
                          if sender != recipient:
                              if not sender:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if sender != _propositionPowerDelegates[address(recipient)]:
                              if not sender:
                                  if _propositionPowerDelegates[address(recipient)]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
              else:
                  if not _votingDelegates[address(sender)]:
                      if not recipient:
                          if not _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)]:
                          else:
                      else:
                          if not _votingSnapshotsCounts[address(recipient)]:
                              if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + balanceOf[address(recipient)],
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[address(recipient)],
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                          else:
                              if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                              log DelegatedPowerChanged(
                                    address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=recipient)
                  else:
                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                          if amount <= balanceOf[stor9[address(sender)]]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                  _votingSnapshotsCounts[stor9[address(sender)]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[address(sender)]] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(sender)])
                              else:
                                  if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                  else:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                      else:
                          if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[stor9[address(sender)]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(sender)])
                                  if recipient:
                              else:
                                  if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                  else:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
          else:
              if _votingDelegates[address(sender)] == _votingDelegates[address(recipient)]:
                  if _propositionPowerDelegates[address(sender)]:
                      if _propositionPowerDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                                  if _propositionPowerSnapshotsCounts[stor12[address(sender)]]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                                          if amount + _propositionPowerSnapshots[stor12[address(recipient)]][stor11[stor12[address(recipient)]] - 1].field_128 < _propositionPowerSnapshots[stor12[address(recipient)]][stor11[stor12[address(recipient)]] - 1].field_128:
                                              revert with 0, 'SafeMath: addition overflow'
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                      else:
                          if _propositionPowerDelegates[address(sender)] != recipient:
                              if _propositionPowerDelegates[address(sender)]:
                                  if _propositionPowerSnapshotsCounts[stor12[address(sender)]]:
                              else:
                                  if recipient:
                                      if _propositionPowerSnapshotsCounts[address(recipient)]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                  else:
                      if _propositionPowerDelegates[address(recipient)]:
                          if sender != _propositionPowerDelegates[address(recipient)]:
                              if sender:
                                  if _propositionPowerSnapshotsCounts[address(sender)]:
                              else:
                                  if _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
                      else:
                          if sender != recipient:
                              if not sender:
                                  if recipient:
                          else:
                              if amount <= balanceOf[address(sender)]:
                                  balanceOf[address(sender)] -= amount
                                  if amount + balanceOf[recipient] < balanceOf[recipient]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                  log Transfer(
                                        address from=amount,
                                        address to=sender,
                                        uint256 value=recipient)
              else:
                  if not _votingDelegates[address(sender)]:
                      if not _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(sender)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                          else:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] == _propositionPowerDelegates[address(recipient)]:
                      else:
                          if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                              if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                              log DelegatedPowerChanged(
                                    address user=amount + balanceOf[stor9[address(recipient)]],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(recipient)])
                          else:
                              if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                  else:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                  else:
                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                          if amount <= balanceOf[stor9[address(sender)]]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                  _votingSnapshotsCounts[stor9[address(sender)]]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[stor9[address(sender)]] - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(sender)])
                              else:
                                  if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                  else:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[address(sender)]] - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                      else:
                          if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                  _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                  _votingSnapshotsCounts[stor9[address(sender)]]++
                                  log DelegatedPowerChanged(
                                        address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(sender)])
                                  if _votingDelegates[address(recipient)]:
                              else:
                                  if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                  else:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                      if _votingDelegates[address(recipient)]:
  else:
      if block.timestamp >= _transfersRestrictedBefore:
          if not sender:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          37,
                          0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                          mem[201 len 27]
          if not recipient:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          35,
                          0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                          mem[199 len 29]
          if _votingDelegates[address(sender)]:
              if _votingDelegates[address(recipient)]:
                  if _votingDelegates[address(sender)] == _votingDelegates[address(recipient)]:
                      if _propositionPowerDelegates[address(sender)]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerSnapshotsCounts[stor12[address(sender)]]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                                          if _propositionPowerSnapshotsCounts[stor12[address(recipient)]]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=sender,
                                            uint256 value=recipient)
                          else:
                              if _propositionPowerDelegates[address(sender)] != recipient:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=sender,
                                            uint256 value=recipient)
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if sender != recipient:
                                  if not sender:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if sender != _propositionPowerDelegates[address(recipient)]:
                                  if not sender:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=sender,
                                            uint256 value=recipient)
                  else:
                      if not _votingDelegates[address(sender)]:
                          if not _votingDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + balanceOf[stor9[address(recipient)]],
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                              else:
                                  if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
                      else:
                          if not _votingSnapshotsCounts[stor9[address(sender)]]:
                              if amount <= balanceOf[stor9[address(sender)]]:
                                  if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[stor9[address(sender)]] - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                  else:
                                      if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      else:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                  if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                      if _votingDelegates[address(recipient)]:
                                  else:
                                      if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(sender)])
                                      else:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(sender)])
              else:
                  if _votingDelegates[address(sender)] == recipient:
                      if not _propositionPowerDelegates[address(sender)]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if sender != _propositionPowerDelegates[address(recipient)]:
                                  if not sender:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if sender != recipient:
                                  if not sender:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)] != recipient:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=sender,
                                            uint256 value=recipient)
                  else:
                      if _votingDelegates[address(sender)]:
                          if not _votingSnapshotsCounts[stor9[address(sender)]]:
                              if amount <= balanceOf[stor9[address(sender)]]:
                                  if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                  else:
                                      if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                      else:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                  if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[stor9[address(sender)]]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(sender)])
                                  else:
                                      if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(sender)])
                      else:
                          if not recipient:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[address(recipient)],
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=recipient)
          else:
              if _votingDelegates[address(recipient)]:
                  if sender == _votingDelegates[address(recipient)]:
                      if not _propositionPowerDelegates[address(sender)]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if sender != _propositionPowerDelegates[address(recipient)]:
                                  if not sender:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if sender != recipient:
                                  if not sender:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)] != recipient:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[address(recipient)] = amount + balanceOf[recipient]
                                      log Transfer(
                                            address from=amount,
                                            address to=sender,
                                            uint256 value=recipient)
                  else:
                      if sender:
                          if not _votingSnapshotsCounts[address(sender)]:
                              if amount <= balanceOf[address(sender)]:
                                  if not _votingSnapshotsCounts[address(sender)]:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                                  else:
                                      if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(balanceOf[address(sender)] - amount)
                                      else:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                          else:
                              if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                                  if not _votingSnapshotsCounts[address(sender)]:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=sender)
                                  else:
                                      if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=sender)
                      else:
                          if not _votingDelegates[address(recipient)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                  if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      log DelegatedPowerChanged(
                                            address user=amount + balanceOf[stor9[address(recipient)]],
                                            uint256 amount=0,
                                            uint8 delegationType=_votingDelegates[address(recipient)])
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                              else:
                                  if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                      _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                      else:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  log DelegatedPowerChanged(
                                        address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=_votingDelegates[address(recipient)])
              else:
                  if sender == recipient:
                      if _propositionPowerDelegates[address(sender)]:
                          if _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                                      if amount + balanceOf[recipient] < balanceOf[recipient]:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              if _propositionPowerDelegates[address(sender)] != recipient:
                                  if not _propositionPowerDelegates[address(sender)]:
                                      if recipient:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                      else:
                          if not _propositionPowerDelegates[address(recipient)]:
                              if sender != recipient:
                                  if sender:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                          else:
                              if sender != _propositionPowerDelegates[address(recipient)]:
                                  if not sender:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if amount <= balanceOf[address(sender)]:
                                      balanceOf[address(sender)] -= amount
                  else:
                      if sender:
                          if not _votingSnapshotsCounts[address(sender)]:
                              if amount <= balanceOf[address(sender)]:
                                  if not _votingSnapshotsCounts[address(sender)]:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(balanceOf[address(sender)] - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                          else:
                              if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                                  if not _votingSnapshotsCounts[address(sender)]:
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      _votingSnapshotsCounts[address(sender)]++
                                      log DelegatedPowerChanged(
                                            address user=_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount,
                                            uint256 amount=0,
                                            uint8 delegationType=sender)
                                  else:
                                      if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                      else:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                      else:
                          if not recipient:
                              if not _propositionPowerDelegates[address(recipient)]:
                              if _propositionPowerDelegates[address(sender)]:
                              else:
                          else:
                              if not _votingSnapshotsCounts[address(recipient)]:
                                  if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + balanceOf[address(recipient)])
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                              else:
                                  if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      _votingSnapshotsCounts[address(recipient)]++
                                      log DelegatedPowerChanged(
                                            address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=recipient)
                                  else:
                                      if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=recipient)
      else:
          if stor15[address(sender)]:
              if not sender:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not recipient:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if not _votingDelegates[address(sender)]:
                  if _votingDelegates[address(recipient)]:
                      if sender == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(sender)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if sender == recipient:
                              else:
                                  if sender != _propositionPowerDelegates[address(recipient)]:
                                      if sender:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] != recipient:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[address(sender)]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if sender:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  if amount <= balanceOf[address(sender)]:
                              else:
                                  if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                                      if not _votingSnapshotsCounts[address(sender)]:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                                      else:
                                          if _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[address(sender)]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                  else:
                      if sender == recipient:
                          if not _propositionPowerDelegates[address(sender)]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if sender == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if sender == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] == recipient:
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if sender:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  if amount <= balanceOf[address(sender)]:
                              else:
                                  if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                                      if not _votingSnapshotsCounts[address(sender)]:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
              else:
                  if not _votingDelegates[address(recipient)]:
                      if _votingDelegates[address(sender)] == recipient:
                          if not _propositionPowerDelegates[address(sender)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if sender == recipient:
                              else:
                                  if sender != _propositionPowerDelegates[address(recipient)]:
                                      if sender:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] != recipient:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[address(sender)]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if _votingDelegates[address(sender)]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  if amount <= balanceOf[stor9[address(sender)]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + balanceOf[address(recipient)])
                                          _votingSnapshotsCounts[address(recipient)]++
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=recipient)
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
                  else:
                      if _votingDelegates[address(sender)] == _votingDelegates[address(recipient)]:
                          if _propositionPowerDelegates[address(sender)]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[address(sender)]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                                          if amount + balanceOf[recipient] < balanceOf[recipient]:
                                              revert with 0, 'SafeMath: addition overflow'
                              else:
                                  if _propositionPowerDelegates[address(sender)] != recipient:
                                      if not _propositionPowerDelegates[address(sender)]:
                                          if recipient:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if sender != recipient:
                                      if sender:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                              else:
                                  if sender != _propositionPowerDelegates[address(recipient)]:
                                      if not sender:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if _votingDelegates[address(sender)]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  if amount <= balanceOf[stor9[address(sender)]]:
                                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(balanceOf[stor9[address(sender)]] - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                              else:
                                  if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                                          log DelegatedPowerChanged(
                                                address user=_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(sender)])
                                      else:
                                          if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                                              log DelegatedPowerChanged(
                                                    address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                    uint256 amount=0,
                                                    uint8 delegationType=_votingDelegates[address(recipient)])
          else:
              if not stor15[address(recipient)]:
                  revert with 0, 'NON_ALLOWLIST_TRANSFERS_DISABLED'
              if not sender:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0x7245524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not recipient:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _votingDelegates[address(sender)]:
                  if _votingDelegates[address(recipient)]:
                      if _votingDelegates[address(sender)] == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(sender)]:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if sender == recipient:
                              else:
                                  if sender != _propositionPowerDelegates[address(recipient)]:
                                      if sender:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] != recipient:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if not _propositionPowerDelegates[address(sender)]:
                                          if _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if _votingDelegates[address(sender)]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  if amount <= balanceOf[stor9[address(sender)]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          else:
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                              _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if not _propositionPowerDelegates[address(recipient)]:
                                  else:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + balanceOf[stor9[address(recipient)]])
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                          log DelegatedPowerChanged(
                                                address user=amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128,
                                                uint256 amount=0,
                                                uint8 delegationType=_votingDelegates[address(recipient)])
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
                  else:
                      if _votingDelegates[address(sender)] == recipient:
                          if not _propositionPowerDelegates[address(sender)]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if sender == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if sender == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] == recipient:
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if _votingDelegates[address(sender)]:
                              if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                  if amount <= balanceOf[stor9[address(sender)]]:
                              else:
                                  if amount <= _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128:
                                      if not _votingSnapshotsCounts[stor9[address(sender)]]:
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]]].field_128 = uint128(_votingSnapshots[stor9[address(sender)]][stor8[stor9[address(sender)]] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[stor9[address(sender)]]++
                          else:
                              if not recipient:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                                      else:
                                          if _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                              _votingSnapshotsCounts[address(recipient)]++
              else:
                  if not _votingDelegates[address(recipient)]:
                      if sender == recipient:
                          if _propositionPowerDelegates[address(sender)]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if _propositionPowerDelegates[address(sender)] == recipient:
                          else:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if sender == _propositionPowerDelegates[address(recipient)]:
                      else:
                          if sender:
                              if _votingSnapshotsCounts[address(sender)]:
                                  if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                          else:
                              if recipient:
                                  if not _votingSnapshotsCounts[address(recipient)]:
                                      if amount + balanceOf[address(recipient)] < balanceOf[address(recipient)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128 < _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(recipient)]:
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(recipient)][stor8[address(recipient)]].field_128 = uint128(amount + _votingSnapshots[address(recipient)][stor8[address(recipient)] - 1].field_128)
                                          _votingSnapshotsCounts[address(recipient)]++
                  else:
                      if sender == _votingDelegates[address(recipient)]:
                          if not _propositionPowerDelegates[address(sender)]:
                              if _propositionPowerDelegates[address(recipient)]:
                                  if sender == _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if sender == recipient:
                          else:
                              if not _propositionPowerDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)] == recipient:
                              else:
                                  if _propositionPowerDelegates[address(sender)] != _propositionPowerDelegates[address(recipient)]:
                                      if _propositionPowerDelegates[address(sender)]:
                                  else:
                                      if amount <= balanceOf[address(sender)]:
                                          balanceOf[address(sender)] -= amount
                      else:
                          if sender:
                              if not _votingSnapshotsCounts[address(sender)]:
                                  if amount <= balanceOf[address(sender)]:
                              else:
                                  if amount <= _votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128:
                                      if not _votingSnapshotsCounts[address(sender)]:
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(sender)][stor8[address(sender)]].field_128 = uint128(_votingSnapshots[address(sender)][stor8[address(sender)] - 1].field_128 - amount)
                                          _votingSnapshotsCounts[address(sender)]++
                          else:
                              if not _votingDelegates[address(recipient)]:
                                  if _propositionPowerDelegates[address(sender)]:
                                      if _propositionPowerDelegates[address(recipient)]:
                              else:
                                  if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                      if amount + balanceOf[stor9[address(recipient)]] < balanceOf[stor9[address(recipient)]]:
                                          revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 < _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[stor9[address(recipient)]]:
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                          _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          _votingSnapshotsCounts[stor9[address(recipient)]]++
                                      else:
                                          if _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                          else:
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_0 = uint128(block.number)
                                              _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]]].field_128 = uint128(amount + _votingSnapshots[stor9[address(recipient)]][stor8[stor9[address(recipient)]] - 1].field_128)
                                              _votingSnapshotsCounts[stor9[address(recipient)]]++
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def delegate(address delegatee) payable: 
  require calldata.size - 4 >= 32
  if not delegatee:
      revert with 0, 'INVALID_DELEGATEE'
  _votingDelegates[caller] = delegatee
  if _votingDelegates[caller]:
      if _votingDelegates[caller] == delegatee:
          log DelegateChanged(
                address delegator=0,
                address delegatee=caller,
                uint8 delegationType=delegatee)
          if not delegatee:
              revert with 0, 'INVALID_DELEGATEE'
          _propositionPowerDelegates[caller] = delegatee
          if _propositionPowerDelegates[caller]:
              if _propositionPowerDelegates[caller] == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerDelegates[caller]:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                  if balanceOf[caller] <= balanceOf[stor12[caller]]:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if delegatee:
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
          else:
              if caller == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not caller:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                      else:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                          _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = 0
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                              _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if delegatee:
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[caller]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
      else:
          if not _votingDelegates[caller]:
              if not delegatee:
                  log DelegateChanged(
                        address delegator=0,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  if not delegatee:
                      revert with 0, 'INVALID_DELEGATEE'
                  _propositionPowerDelegates[caller] = delegatee
                  if _propositionPowerDelegates[caller]:
                      if _propositionPowerDelegates[caller] == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          stop
                      if _propositionPowerDelegates[caller]:
                          if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                              if balanceOf[caller] <= balanceOf[stor12[caller]]:
                                  if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[stor12[caller]]++
                                  else:
                                      if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                                      else:
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          else:
                              if balanceOf[caller] <= _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[stor12[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                            uint256 amount=1,
                                            uint8 delegationType=_propositionPowerDelegates[caller])
                                  else:
                                      if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                      else:
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                                          log DelegatedPowerChanged(
                                                address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                                uint256 amount=1,
                                                uint8 delegationType=_propositionPowerDelegates[caller])
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                  else:
                      if caller == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          stop
                      if caller:
                          if not _propositionPowerSnapshotsCounts[caller]:
                              if balanceOf[caller] <= balanceOf[caller]:
                                  if not _propositionPowerSnapshotsCounts[caller]:
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                                      _propositionPowerSnapshotsCounts[caller]++
                          else:
                              if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[caller]:
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[caller]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                            uint256 amount=1,
                                            uint8 delegationType=caller)
                                  else:
                                      if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                      else:
                                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                          _propositionPowerSnapshotsCounts[caller]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=1,
                                            uint8 delegationType=delegatee)
              else:
                  if not _votingSnapshotsCounts[address(delegatee)]:
                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[caller] = delegatee
                          if not _propositionPowerDelegates[caller]:
                              if delegatee != caller:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerDelegates[caller] == delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerDelegates[caller]:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                              else:
                                  if caller == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if caller == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                  else:
                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[caller] = delegatee
                          if _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[caller] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerDelegates[caller]:
                                  if delegatee:
                          else:
                              if caller == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not caller:
                                  if delegatee:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                                  if delegatee != caller:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller]:
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                                  if caller == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      stop
                                  if caller:
                              else:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      stop
                                  if not _propositionPowerDelegates[caller]:
                                      if delegatee:
          else:
              if not _votingSnapshotsCounts[stor9[caller]]:
                  if balanceOf[caller] <= balanceOf[stor9[caller]]:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                          _votingSnapshotsCounts[stor9[caller]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                uint256 amount=0,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                              else:
                                  if caller == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                              if not delegatee:
                                                  revert with 0, 'INVALID_DELEGATEE'
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              _votingSnapshotsCounts[stor9[caller]]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if not _propositionPowerDelegates[caller]:
                                  else:
                                      if _propositionPowerDelegates[caller] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
              else:
                  if balanceOf[caller] <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[stor9[caller]]++
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=0,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                                  if delegatee != caller:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller]:
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[caller] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                                  else:
                                      if caller == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[stor9[caller]]++
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[caller] != delegatee:
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      stop
                                  if caller == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
  else:
      if caller == delegatee:
          log DelegateChanged(
                address delegator=0,
                address delegatee=caller,
                uint8 delegationType=delegatee)
          if not delegatee:
              revert with 0, 'INVALID_DELEGATEE'
          _propositionPowerDelegates[caller] = delegatee
          if _propositionPowerDelegates[caller]:
              if _propositionPowerDelegates[caller] == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerDelegates[caller]:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                      else:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                  if balanceOf[caller] <= balanceOf[stor12[caller]]:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if delegatee:
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
          else:
              if caller == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not caller:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                          _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if delegatee:
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = 0
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                              _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if delegatee:
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=1,
                                uint8 delegationType=caller)
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=caller)
                              if delegatee:
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[caller]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=1,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
      else:
          if not caller:
              if not delegatee:
                  log DelegateChanged(
                        address delegator=0,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  if not delegatee:
                      revert with 0, 'INVALID_DELEGATEE'
                  _propositionPowerDelegates[caller] = delegatee
                  if not _propositionPowerDelegates[caller]:
                      if caller == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          stop
                      if caller:
                          if not _propositionPowerSnapshotsCounts[caller]:
                              if balanceOf[caller] <= balanceOf[caller]:
                          else:
                              if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[caller]:
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[caller]++
                                  else:
                                      if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                      else:
                                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                                          _propositionPowerSnapshotsCounts[caller]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                  else:
                      if _propositionPowerDelegates[caller] == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          stop
                      if _propositionPowerDelegates[caller]:
                          if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                              if balanceOf[caller] <= balanceOf[stor12[caller]]:
                                  if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[stor12[caller]]++
                          else:
                              if balanceOf[caller] <= _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                      _propositionPowerSnapshotsCounts[stor12[caller]]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                            uint256 amount=1,
                                            uint8 delegationType=_propositionPowerDelegates[caller])
                                  else:
                                      if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                      else:
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=1,
                                            uint8 delegationType=delegatee)
              else:
                  if not _votingSnapshotsCounts[address(delegatee)]:
                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[caller] = delegatee
                          if _propositionPowerDelegates[caller]:
                              if _propositionPowerDelegates[caller] != delegatee:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if caller == delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                              else:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                              else:
                                  if caller == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                  else:
                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=caller,
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[caller] = delegatee
                          if not _propositionPowerDelegates[caller]:
                              if caller == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if caller:
                          else:
                              if _propositionPowerDelegates[caller] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerDelegates[caller]:
                                  if delegatee:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if caller == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                                  if delegatee != caller:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[caller]:
          else:
              if not _votingSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = 0
                          _votingSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                    0,
                                                    caller,
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if not _propositionPowerDelegates[caller]:
                              else:
                                  if _propositionPowerDelegates[caller] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = 0
                              log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                        0,
                                                        caller,
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = 0
                              _votingSnapshotsCounts[caller]++
                              log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                        0,
                                                        caller,
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=caller,
                                                    uint8 delegationType=delegatee)
                                              if not delegatee:
                                                  revert with 0, 'INVALID_DELEGATEE'
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
              else:
                  if balanceOf[caller] <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[caller]++
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=0,
                                uint8 delegationType=caller)
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[caller] = delegatee
                              if _propositionPowerDelegates[caller]:
                                  if _propositionPowerDelegates[caller] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if caller == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if not _propositionPowerDelegates[caller]:
                                  else:
                                      if _propositionPowerDelegates[caller] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[caller]++
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=0,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[caller] = delegatee
                                  if _propositionPowerDelegates[caller]:
                                      if _propositionPowerDelegates[caller] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                                  else:
                                      if caller == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable: 
  require calldata.size - 4 >= 192
  signer = erecover(sha3(0, 0x17e76dd75f3dfe3e50d31322433cc1405e898404a5724da2d4804cab81e0a88a, sha3(0x9a9a49b990ba9bb39f8048c490a40ab25c18f55d208d5fbcf958261a9b48716d, address(delegatee), nonce, expiry)), v << 248, r, s) # precompiled
  if not erecover.result:
      revert with ext_call.return_data[0 len return_data.size]
  if not address(signer):
      revert with 0, 'INVALID_SIGNATURE'
  nonces[address(signer)]++
  if nonce != nonces[address(signer)]:
      revert with 0, 'INVALID_NONCE'
  if block.timestamp > expiry:
      revert with 0, 'INVALID_EXPIRATION'
  if not delegatee:
      revert with 0, 'INVALID_DELEGATEE'
  _votingDelegates[address(signer)] = delegatee
  if _votingDelegates[address(signer)]:
      if _votingDelegates[address(signer)] == delegatee:
          log DelegateChanged(
                address delegator=0,
                address delegatee=address(signer),
                uint8 delegationType=delegatee)
          if not delegatee:
              revert with 0, 'INVALID_DELEGATEE'
          _propositionPowerDelegates[address(signer)] = delegatee
          if _propositionPowerDelegates[address(signer)]:
              if _propositionPowerDelegates[address(signer)] == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerDelegates[address(signer)]:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if delegatee:
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
          else:
              if address(signer) == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not address(signer):
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                      else:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = 0
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                              _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if delegatee:
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
      else:
          if not _votingDelegates[address(signer)]:
              if not delegatee:
                  log DelegateChanged(
                        address delegator=0,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  if not delegatee:
                      revert with 0, 'INVALID_DELEGATEE'
                  _propositionPowerDelegates[address(signer)] = delegatee
                  if _propositionPowerDelegates[address(signer)]:
                      if _propositionPowerDelegates[address(signer)] == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          stop
                      if _propositionPowerDelegates[address(signer)]:
                          if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                              if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                                  else:
                                      if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                                      else:
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          else:
                              if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                            uint256 amount=1,
                                            uint8 delegationType=_propositionPowerDelegates[address(signer)])
                                  else:
                                      if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                      else:
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                                          log DelegatedPowerChanged(
                                                address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                                uint256 amount=1,
                                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                  else:
                      if address(signer) == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          stop
                      if address(signer):
                          if not _propositionPowerSnapshotsCounts[address(signer)]:
                              if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                                  if not _propositionPowerSnapshotsCounts[address(signer)]:
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                                      _propositionPowerSnapshotsCounts[address(signer)]++
                          else:
                              if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[address(signer)]:
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[address(signer)]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                            uint256 amount=1,
                                            uint8 delegationType=address(signer))
                                  else:
                                      if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                      else:
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                          _propositionPowerSnapshotsCounts[address(signer)]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=1,
                                            uint8 delegationType=delegatee)
              else:
                  if not _votingSnapshotsCounts[address(delegatee)]:
                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[address(signer)] = delegatee
                          if not _propositionPowerDelegates[address(signer)]:
                              if address(signer) != delegatee:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerDelegates[address(signer)] == delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerDelegates[address(signer)]:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                              else:
                                  if address(signer) == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if address(signer) == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                  else:
                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[address(signer)] = delegatee
                          if _propositionPowerDelegates[address(signer)]:
                              if _propositionPowerDelegates[address(signer)] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerDelegates[address(signer)]:
                                  if delegatee:
                          else:
                              if address(signer) == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not address(signer):
                                  if delegatee:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                                  if address(signer) != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)]:
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                                  if address(signer) == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      stop
                                  if address(signer):
                              else:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      stop
                                  if not _propositionPowerDelegates[address(signer)]:
                                      if delegatee:
          else:
              if not _votingSnapshotsCounts[stor9[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor9[address(signer)]]:
                      if not _votingSnapshotsCounts[stor9[address(signer)]]:
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor9[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=0,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                              else:
                                  if address(signer) == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                              if not delegatee:
                                                  revert with 0, 'INVALID_DELEGATEE'
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor9[address(signer)]]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if not _propositionPowerDelegates[address(signer)]:
                                  else:
                                      if _propositionPowerDelegates[address(signer)] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor9[address(signer)]]:
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor9[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=0,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                                  if address(signer) != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)]:
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                      if _propositionPowerDelegates[address(signer)] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                                  else:
                                      if address(signer) == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor9[address(signer)]]++
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                      if _propositionPowerDelegates[address(signer)] != delegatee:
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      stop
                                  if address(signer) == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
  else:
      if address(signer) == delegatee:
          log DelegateChanged(
                address delegator=0,
                address delegatee=address(signer),
                uint8 delegationType=delegatee)
          if not delegatee:
              revert with 0, 'INVALID_DELEGATEE'
          _propositionPowerDelegates[address(signer)] = delegatee
          if _propositionPowerDelegates[address(signer)]:
              if _propositionPowerDelegates[address(signer)] == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerDelegates[address(signer)]:
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=1,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                      else:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                          else:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if delegatee:
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
          else:
              if address(signer) == delegatee:
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not address(signer):
                  if delegatee:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=1,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                      log DelegatedPowerChanged(
                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                            uint256 amount=1,
                            uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=1,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if delegatee:
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = 0
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                              _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if delegatee:
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=1,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                          else:
                              if _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=address(signer))
                              if delegatee:
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=1,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshotsCounts[address(delegatee)]:
      else:
          if not address(signer):
              if not delegatee:
                  log DelegateChanged(
                        address delegator=0,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  if not delegatee:
                      revert with 0, 'INVALID_DELEGATEE'
                  _propositionPowerDelegates[address(signer)] = delegatee
                  if not _propositionPowerDelegates[address(signer)]:
                      if address(signer) == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          stop
                      if address(signer):
                          if not _propositionPowerSnapshotsCounts[address(signer)]:
                              if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                          else:
                              if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[address(signer)]:
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[address(signer)]++
                                  else:
                                      if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                      else:
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                                          _propositionPowerSnapshotsCounts[address(signer)]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                  else:
                      if _propositionPowerDelegates[address(signer)] == delegatee:
                          log DelegateChanged(
                                address delegator=1,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          stop
                      if _propositionPowerDelegates[address(signer)]:
                          if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                              if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          else:
                              if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128:
                                  if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                      _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                                      log DelegatedPowerChanged(
                                            address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                            uint256 amount=1,
                                            uint8 delegationType=_propositionPowerDelegates[address(signer)])
                                  else:
                                      if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                      else:
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                      else:
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=1,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=1,
                                            uint8 delegationType=delegatee)
              else:
                  if not _votingSnapshotsCounts[address(delegatee)]:
                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[address(signer)] = delegatee
                          if _propositionPowerDelegates[address(signer)]:
                              if _propositionPowerDelegates[address(signer)] != delegatee:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if address(signer) == delegatee:
                              log DelegateChanged(
                                    address delegator=1,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                              else:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                              else:
                                  if address(signer) == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                  else:
                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                          revert with 0, 'SafeMath: addition overflow'
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                          _votingSnapshotsCounts[address(delegatee)]++
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=0,
                                uint8 delegationType=delegatee)
                          log DelegateChanged(
                                address delegator=0,
                                address delegatee=address(signer),
                                uint8 delegationType=delegatee)
                          if not delegatee:
                              revert with 0, 'INVALID_DELEGATEE'
                          _propositionPowerDelegates[address(signer)] = delegatee
                          if not _propositionPowerDelegates[address(signer)]:
                              if address(signer) == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if address(signer):
                          else:
                              if _propositionPowerDelegates[address(signer)] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerDelegates[address(signer)]:
                                  if delegatee:
                      else:
                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if address(signer) == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=0,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                                  if address(signer) != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)] == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerDelegates[address(signer)]:
          else:
              if not _votingSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                          _votingSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                    0,
                                                    address(signer),
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if not _propositionPowerDelegates[address(signer)]:
                              else:
                                  if _propositionPowerDelegates[address(signer)] == delegatee:
                                      log DelegateChanged(
                                            address delegator=1,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = 0
                              log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                        0,
                                                        address(signer),
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                              _votingSnapshotsCounts[address(signer)]++
                              log DelegatedPowerChanged(address user, uint256 amount, uint8 delegationType):
                                                        0,
                                                        address(signer),
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                  else:
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=0,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=0,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                                          if not delegatee:
                                              revert with 0, 'INVALID_DELEGATEE'
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                              log DelegatedPowerChanged(
                                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                    uint256 amount=0,
                                                    uint8 delegationType=delegatee)
                                              log DelegateChanged(
                                                    address delegator=0,
                                                    address delegatee=address(signer),
                                                    uint8 delegationType=delegatee)
                                              if not delegatee:
                                                  revert with 0, 'INVALID_DELEGATEE'
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=0,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                      if not delegatee:
                                          revert with 0, 'INVALID_DELEGATEE'
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[address(signer)]++
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=0,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                              _propositionPowerDelegates[address(signer)] = delegatee
                              if _propositionPowerDelegates[address(signer)]:
                                  if _propositionPowerDelegates[address(signer)] != delegatee:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if address(signer) == delegatee:
                                  log DelegateChanged(
                                        address delegator=1,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                          else:
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=0,
                                        uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=0,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              if not delegatee:
                                  revert with 0, 'INVALID_DELEGATEE'
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if not _propositionPowerDelegates[address(signer)]:
                                  else:
                                      if _propositionPowerDelegates[address(signer)] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[address(signer)]++
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=0,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
                                  _propositionPowerDelegates[address(signer)] = delegatee
                                  if _propositionPowerDelegates[address(signer)]:
                                      if _propositionPowerDelegates[address(signer)] == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                                  else:
                                      if address(signer) == delegatee:
                                          log DelegateChanged(
                                                address delegator=1,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
                              else:
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                          revert with 0, 'SafeMath: addition overflow'
                                      if not _votingSnapshotsCounts[address(delegatee)]:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      else:
                                          if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          else:
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                              _votingSnapshotsCounts[address(delegatee)]++
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=0,
                                            uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=0,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  if not delegatee:
                                      revert with 0, 'INVALID_DELEGATEE'
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def delegateByType(address delegatee, uint8 delegationType) payable: 
  require calldata.size - 4 >= 64
  if not delegatee:
      revert with 0, 'INVALID_DELEGATEE'
  require delegationType <= 1
  if delegationType:
      _propositionPowerDelegates[caller] = delegatee
      require delegationType <= 1
      if not _propositionPowerDelegates[caller]:
          if caller == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=caller,
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not caller:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                          _propositionPowerSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                              _propositionPowerSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
          else:
              if not caller:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = 0
                          _votingSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = 0
                              _votingSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
      else:
          if _propositionPowerDelegates[caller] == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=caller,
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not _propositionPowerDelegates[caller]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                  if balanceOf[caller] <= balanceOf[stor12[caller]]:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[caller]]:
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor12[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor12[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[caller]][stor11[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
          else:
              if not _propositionPowerDelegates[caller]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[stor12[caller]]:
                  if balanceOf[caller] <= balanceOf[stor12[caller]]:
                      if not _votingSnapshotsCounts[stor12[caller]]:
                          _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                          _votingSnapshotsCounts[stor12[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_128 = uint128(balanceOf[stor12[caller]] - balanceOf[caller])
                              _votingSnapshotsCounts[stor12[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor12[caller]]:
                          _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_128 = uint128(_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[stor12[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 = uint128(_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor12[caller]][stor8[stor12[caller]]].field_128 = uint128(_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[stor12[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor12[caller]][stor8[stor12[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
  else:
      _votingDelegates[caller] = delegatee
      require delegationType <= 1
      if not _votingDelegates[caller]:
          if caller == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=caller,
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not caller:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                          _propositionPowerSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = 0
                              _propositionPowerSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[caller]:
                          _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[caller][stor11[caller] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[caller][stor11[caller]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[caller][stor11[caller]].field_128 = uint128(_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[caller][stor11[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
          else:
              if not caller:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[caller]:
                  if balanceOf[caller] <= balanceOf[caller]:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = 0
                          _votingSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = 0
                              _votingSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _votingSnapshots[caller][stor8[caller] - 1].field_128:
                      if not _votingSnapshotsCounts[caller]:
                          _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                          _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[caller]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=caller)
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[caller][stor8[caller] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[caller][stor8[caller] - 1].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[caller][stor8[caller]].field_0 = uint128(block.number)
                              _votingSnapshots[caller][stor8[caller]].field_128 = uint128(_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[caller]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[caller][stor8[caller] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=caller)
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
      else:
          if _votingDelegates[caller] == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=caller,
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not _votingDelegates[caller]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor9[caller]]:
                  if balanceOf[caller] <= balanceOf[stor9[caller]]:
                      if not _propositionPowerSnapshotsCounts[stor9[caller]]:
                          _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor9[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor9[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor9[caller]]:
                          _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller])
                          _propositionPowerSnapshotsCounts[stor9[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]]].field_128 = uint128(_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              _propositionPowerSnapshotsCounts[stor9[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor9[caller]][stor11[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
          else:
              if not _votingDelegates[caller]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=caller,
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[stor9[caller]]:
                  if balanceOf[caller] <= balanceOf[stor9[caller]]:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                          _votingSnapshotsCounts[stor9[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(balanceOf[stor9[caller]] - balanceOf[caller])
                              _votingSnapshotsCounts[stor9[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[caller]] - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[caller] <= _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor9[caller]]:
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                          _votingSnapshotsCounts[stor9[caller]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[caller])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=caller,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[caller]][stor8[stor9[caller]]].field_128 = uint128(_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller])
                              _votingSnapshotsCounts[stor9[caller]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[caller]][stor8[stor9[caller]] - 1].field_128 - balanceOf[caller],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[caller])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=caller,
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[caller] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[caller] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=caller,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[caller] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=caller,
                                                uint8 delegationType=delegatee)
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def delegateByTypeBySig(address delegatee, uint8 delegationType, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) payable: 
  require calldata.size - 4 >= 224
  require delegationType <= 1
  signer = erecover(sha3(0, 0x17e76dd75f3dfe3e50d31322433cc1405e898404a5724da2d4804cab81e0a88a, sha3(0x10d8d059343739efce7dad10d09f0806da52b252b3e6a7951920d2d6ec4102e5, address(delegatee), delegationType << 248, nonce, expiry)), v << 248, r, s) # precompiled
  if not erecover.result:
      revert with ext_call.return_data[0 len return_data.size]
  if not address(signer):
      revert with 0, 'INVALID_SIGNATURE'
  nonces[address(signer)]++
  if nonce != nonces[address(signer)]:
      revert with 0, 'INVALID_NONCE'
  if block.timestamp > expiry:
      revert with 0, 'INVALID_EXPIRATION'
  if not delegatee:
      revert with 0, 'INVALID_DELEGATEE'
  require delegationType <= 1
  if delegationType:
      _propositionPowerDelegates[address(signer)] = delegatee
      require delegationType <= 1
      if not _propositionPowerDelegates[address(signer)]:
          if address(signer) == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=address(signer),
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not address(signer):
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
          else:
              if not address(signer):
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                          _votingSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                              _votingSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
      else:
          if _propositionPowerDelegates[address(signer)] == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=address(signer),
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not _propositionPowerDelegates[address(signer)]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor12[address(signer)]]:
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor12[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor12[address(signer)]][stor11[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
          else:
              if not _propositionPowerDelegates[address(signer)]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[stor12[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor12[address(signer)]]:
                      if not _votingSnapshotsCounts[stor12[address(signer)]]:
                          _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor12[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_128 = uint128(balanceOf[stor12[address(signer)]] - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor12[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor12[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor12[address(signer)]]:
                          _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_128 = uint128(_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor12[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_propositionPowerDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 = uint128(_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]]].field_128 = uint128(_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor12[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor12[address(signer)]][stor8[stor12[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_propositionPowerDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
  else:
      _votingDelegates[address(signer)] = delegatee
      require delegationType <= 1
      if not _votingDelegates[address(signer)]:
          if address(signer) == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=address(signer),
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not address(signer):
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = 0
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[address(signer)]:
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(signer)][stor11[address(signer)]].field_128 = uint128(_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[address(signer)][stor11[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
          else:
              if not address(signer):
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[address(signer)]:
                  if balanceOf[address(signer)] <= balanceOf[address(signer)]:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                          _votingSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=0,
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = 0
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = 0
                              _votingSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=0,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128:
                      if not _votingSnapshotsCounts[address(signer)]:
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                          _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[address(signer)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=address(signer))
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(signer)][stor8[address(signer)]].field_128 = uint128(_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[address(signer)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[address(signer)][stor8[address(signer)] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=address(signer))
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
      else:
          if _votingDelegates[address(signer)] == delegatee:
              log DelegateChanged(
                    address delegator=delegationType,
                    address delegatee=address(signer),
                    uint8 delegationType=delegatee)
              stop
          if delegationType:
              if not _votingDelegates[address(signer)]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              _propositionPowerSnapshotsCounts[address(delegatee)]++
                          else:
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _propositionPowerSnapshotsCounts[stor9[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor9[address(signer)]]:
                      if not _propositionPowerSnapshotsCounts[stor9[address(signer)]]:
                          _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor9[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor9[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128:
                      if not _propositionPowerSnapshotsCounts[stor9[address(signer)]]:
                          _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _propositionPowerSnapshotsCounts[stor9[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                              else:
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                  _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                  _propositionPowerSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                      else:
                          if _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 = uint128(_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]]].field_128 = uint128(_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _propositionPowerSnapshotsCounts[stor9[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_propositionPowerSnapshots[stor9[address(signer)]][stor11[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 < _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _propositionPowerSnapshotsCounts[address(delegatee)]:
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                      _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                      _propositionPowerSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_0 = uint128(block.number)
                                          _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128)
                                          _propositionPowerSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _propositionPowerSnapshots[address(delegatee)][stor11[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
          else:
              if not _votingDelegates[address(signer)]:
                  if not delegatee:
                      require delegationType <= 1
                  else:
                      if not _votingSnapshotsCounts[address(delegatee)]:
                          if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                      else:
                          if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                              revert with 0, 'SafeMath: addition overflow'
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                              _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              _votingSnapshotsCounts[address(delegatee)]++
                          else:
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                uint256 amount=delegationType,
                                uint8 delegationType=delegatee)
                  log DelegateChanged(
                        address delegator=delegationType,
                        address delegatee=address(signer),
                        uint8 delegationType=delegatee)
                  stop
              if not _votingSnapshotsCounts[stor9[address(signer)]]:
                  if balanceOf[address(signer)] <= balanceOf[stor9[address(signer)]]:
                      if not _votingSnapshotsCounts[stor9[address(signer)]]:
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor9[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(balanceOf[stor9[address(signer)]] - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor9[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[stor9[address(signer)]] - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
              else:
                  if balanceOf[address(signer)] <= _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128:
                      if not _votingSnapshotsCounts[stor9[address(signer)]]:
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                          _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                          _votingSnapshotsCounts[stor9[address(signer)]]++
                          require delegationType <= 1
                          log DelegatedPowerChanged(
                                address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                uint256 amount=delegationType,
                                uint8 delegationType=_votingDelegates[address(signer)])
                          if not delegatee:
                              require delegationType <= 1
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                              stop
                          if not _votingSnapshotsCounts[address(delegatee)]:
                              if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                              else:
                                  if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                  else:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                          else:
                              if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                  revert with 0, 'SafeMath: addition overflow'
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                              else:
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                  _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                  _votingSnapshotsCounts[address(delegatee)]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                    uint256 amount=delegationType,
                                    uint8 delegationType=delegatee)
                              log DelegateChanged(
                                    address delegator=delegationType,
                                    address delegatee=address(signer),
                                    uint8 delegationType=delegatee)
                      else:
                          if _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_0 == uint128(block.number):
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                          else:
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_0 = uint128(block.number)
                              _votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]]].field_128 = uint128(_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)])
                              _votingSnapshotsCounts[stor9[address(signer)]]++
                              require delegationType <= 1
                              log DelegatedPowerChanged(
                                    address user=_votingSnapshots[stor9[address(signer)]][stor8[stor9[address(signer)]] - 1].field_128 - balanceOf[address(signer)],
                                    uint256 amount=delegationType,
                                    uint8 delegationType=_votingDelegates[address(signer)])
                              if not delegatee:
                                  require delegationType <= 1
                                  log DelegateChanged(
                                        address delegator=delegationType,
                                        address delegatee=address(signer),
                                        uint8 delegationType=delegatee)
                                  stop
                              if not _votingSnapshotsCounts[address(delegatee)]:
                                  if balanceOf[address(signer)] + balanceOf[address(delegatee)] < balanceOf[address(delegatee)]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      _votingSnapshotsCounts[address(delegatee)]++
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + balanceOf[address(delegatee)])
                                          _votingSnapshotsCounts[address(delegatee)]++
                                  require delegationType <= 1
                                  log DelegatedPowerChanged(
                                        address user=balanceOf[address(signer)] + balanceOf[address(delegatee)],
                                        uint256 amount=delegationType,
                                        uint8 delegationType=delegatee)
                              else:
                                  if balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 < _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if not _votingSnapshotsCounts[address(delegatee)]:
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                      _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                      _votingSnapshotsCounts[address(delegatee)]++
                                      require delegationType <= 1
                                      log DelegatedPowerChanged(
                                            address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                            uint256 amount=delegationType,
                                            uint8 delegationType=delegatee)
                                      log DelegateChanged(
                                            address delegator=delegationType,
                                            address delegatee=address(signer),
                                            uint8 delegationType=delegatee)
                                  else:
                                      if _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_0 == uint128(block.number):
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                      else:
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_0 = uint128(block.number)
                                          _votingSnapshots[address(delegatee)][stor8[address(delegatee)]].field_128 = uint128(balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128)
                                          _votingSnapshotsCounts[address(delegatee)]++
                                          require delegationType <= 1
                                          log DelegatedPowerChanged(
                                                address user=balanceOf[address(signer)] + _votingSnapshots[address(delegatee)][stor8[address(delegatee)] - 1].field_128,
                                                uint256 amount=delegationType,
                                                uint8 delegationType=delegatee)
                                          log DelegateChanged(
                                                address delegator=delegationType,
                                                address delegatee=address(signer),
                                                uint8 delegationType=delegatee)
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)


